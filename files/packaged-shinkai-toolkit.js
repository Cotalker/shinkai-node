/*! For license information please see packaged-shinkai-toolkit.js.LICENSE.txt */
(()=>{var __webpack_modules__={3176:(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";const Assert=__webpack_require__(9647);const Clone=__webpack_require__(3737);const Merge=__webpack_require__(7093);const Reach=__webpack_require__(6770);const internals={};module.exports=function(defaults,source,options={}){Assert(defaults&&typeof defaults==="object","Invalid defaults value: must be an object");Assert(!source||source===true||typeof source==="object","Invalid source value: must be true, falsy or an object");Assert(typeof options==="object","Invalid options: must be an object");if(!source){return null}if(options.shallow){return internals.applyToDefaultsWithShallow(defaults,source,options)}const copy=Clone(defaults);if(source===true){return copy}const nullOverride=options.nullOverride!==undefined?options.nullOverride:false;return Merge(copy,source,{nullOverride,mergeArrays:false})};internals.applyToDefaultsWithShallow=function(defaults,source,options){const keys=options.shallow;Assert(Array.isArray(keys),"Invalid keys");const seen=new Map;const merge=source===true?null:new Set;for(let key of keys){key=Array.isArray(key)?key:key.split(".");const ref=Reach(defaults,key);if(ref&&typeof ref==="object"){seen.set(ref,merge&&Reach(source,key)||ref)}else if(merge){merge.add(key)}}const copy=Clone(defaults,{},seen);if(!merge){return copy}for(const key of merge){internals.reachCopy(copy,source,key)}const nullOverride=options.nullOverride!==undefined?options.nullOverride:false;return Merge(copy,source,{nullOverride,mergeArrays:false})};internals.reachCopy=function(dst,src,path){for(const segment of path){if(!(segment in src)){return}const val=src[segment];if(typeof val!=="object"||val===null){return}src=val}const value=src;let ref=dst;for(let i=0;i<path.length-1;++i){const segment=path[i];if(typeof ref[segment]!=="object"){ref[segment]={}}ref=ref[segment]}ref[path[path.length-1]]=value}},9647:(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";const AssertError=__webpack_require__(6090);const internals={};module.exports=function(condition,...args){if(condition){return}if(args.length===1&&args[0]instanceof Error){throw args[0]}throw new AssertError(args)}},3737:(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";const Reach=__webpack_require__(6770);const Types=__webpack_require__(6157);const Utils=__webpack_require__(5262);const internals={needsProtoHack:new Set([Types.set,Types.map,Types.weakSet,Types.weakMap])};module.exports=internals.clone=function(obj,options={},_seen=null){if(typeof obj!=="object"||obj===null){return obj}let clone=internals.clone;let seen=_seen;if(options.shallow){if(options.shallow!==true){return internals.cloneWithShallow(obj,options)}clone=value=>value}else if(seen){const lookup=seen.get(obj);if(lookup){return lookup}}else{seen=new Map}const baseProto=Types.getInternalProto(obj);if(baseProto===Types.buffer){return Buffer&&Buffer.from(obj)}if(baseProto===Types.date){return new Date(obj.getTime())}if(baseProto===Types.regex){return new RegExp(obj)}const newObj=internals.base(obj,baseProto,options);if(newObj===obj){return obj}if(seen){seen.set(obj,newObj)}if(baseProto===Types.set){for(const value of obj){newObj.add(clone(value,options,seen))}}else if(baseProto===Types.map){for(const[key,value]of obj){newObj.set(key,clone(value,options,seen))}}const keys=Utils.keys(obj,options);for(const key of keys){if(key==="__proto__"){continue}if(baseProto===Types.array&&key==="length"){newObj.length=obj.length;continue}const descriptor=Object.getOwnPropertyDescriptor(obj,key);if(descriptor){if(descriptor.get||descriptor.set){Object.defineProperty(newObj,key,descriptor)}else if(descriptor.enumerable){newObj[key]=clone(obj[key],options,seen)}else{Object.defineProperty(newObj,key,{enumerable:false,writable:true,configurable:true,value:clone(obj[key],options,seen)})}}else{Object.defineProperty(newObj,key,{enumerable:true,writable:true,configurable:true,value:clone(obj[key],options,seen)})}}return newObj};internals.cloneWithShallow=function(source,options){const keys=options.shallow;options=Object.assign({},options);options.shallow=false;const seen=new Map;for(const key of keys){const ref=Reach(source,key);if(typeof ref==="object"||typeof ref==="function"){seen.set(ref,ref)}}return internals.clone(source,options,seen)};internals.base=function(obj,baseProto,options){if(options.prototype===false){if(internals.needsProtoHack.has(baseProto)){return new baseProto.constructor}return baseProto===Types.array?[]:{}}const proto=Object.getPrototypeOf(obj);if(proto&&proto.isImmutable){return obj}if(baseProto===Types.array){const newObj=[];if(proto!==baseProto){Object.setPrototypeOf(newObj,proto)}return newObj}if(internals.needsProtoHack.has(baseProto)){const newObj=new proto.constructor;if(proto!==baseProto){Object.setPrototypeOf(newObj,proto)}return newObj}return Object.create(proto)}},5245:(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";const Types=__webpack_require__(6157);const internals={mismatched:null};module.exports=function(obj,ref,options){options=Object.assign({prototype:true},options);return!!internals.isDeepEqual(obj,ref,options,[])};internals.isDeepEqual=function(obj,ref,options,seen){if(obj===ref){return obj!==0||1/obj===1/ref}const type=typeof obj;if(type!==typeof ref){return false}if(obj===null||ref===null){return false}if(type==="function"){if(!options.deepFunction||obj.toString()!==ref.toString()){return false}}else if(type!=="object"){return obj!==obj&&ref!==ref}const instanceType=internals.getSharedType(obj,ref,!!options.prototype);switch(instanceType){case Types.buffer:return Buffer&&Buffer.prototype.equals.call(obj,ref);case Types.promise:return obj===ref;case Types.regex:return obj.toString()===ref.toString();case internals.mismatched:return false}for(let i=seen.length-1;i>=0;--i){if(seen[i].isSame(obj,ref)){return true}}seen.push(new internals.SeenEntry(obj,ref));try{return!!internals.isDeepEqualObj(instanceType,obj,ref,options,seen)}finally{seen.pop()}};internals.getSharedType=function(obj,ref,checkPrototype){if(checkPrototype){if(Object.getPrototypeOf(obj)!==Object.getPrototypeOf(ref)){return internals.mismatched}return Types.getInternalProto(obj)}const type=Types.getInternalProto(obj);if(type!==Types.getInternalProto(ref)){return internals.mismatched}return type};internals.valueOf=function(obj){const objValueOf=obj.valueOf;if(objValueOf===undefined){return obj}try{return objValueOf.call(obj)}catch(err){return err}};internals.hasOwnEnumerableProperty=function(obj,key){return Object.prototype.propertyIsEnumerable.call(obj,key)};internals.isSetSimpleEqual=function(obj,ref){for(const entry of Set.prototype.values.call(obj)){if(!Set.prototype.has.call(ref,entry)){return false}}return true};internals.isDeepEqualObj=function(instanceType,obj,ref,options,seen){const{isDeepEqual,valueOf,hasOwnEnumerableProperty}=internals;const{keys,getOwnPropertySymbols}=Object;if(instanceType===Types.array){if(options.part){for(const objValue of obj){for(const refValue of ref){if(isDeepEqual(objValue,refValue,options,seen)){return true}}}}else{if(obj.length!==ref.length){return false}for(let i=0;i<obj.length;++i){if(!isDeepEqual(obj[i],ref[i],options,seen)){return false}}return true}}else if(instanceType===Types.set){if(obj.size!==ref.size){return false}if(!internals.isSetSimpleEqual(obj,ref)){const ref2=new Set(Set.prototype.values.call(ref));for(const objEntry of Set.prototype.values.call(obj)){if(ref2.delete(objEntry)){continue}let found=false;for(const refEntry of ref2){if(isDeepEqual(objEntry,refEntry,options,seen)){ref2.delete(refEntry);found=true;break}}if(!found){return false}}}}else if(instanceType===Types.map){if(obj.size!==ref.size){return false}for(const[key,value]of Map.prototype.entries.call(obj)){if(value===undefined&&!Map.prototype.has.call(ref,key)){return false}if(!isDeepEqual(value,Map.prototype.get.call(ref,key),options,seen)){return false}}}else if(instanceType===Types.error){if(obj.name!==ref.name||obj.message!==ref.message){return false}}const valueOfObj=valueOf(obj);const valueOfRef=valueOf(ref);if((obj!==valueOfObj||ref!==valueOfRef)&&!isDeepEqual(valueOfObj,valueOfRef,options,seen)){return false}const objKeys=keys(obj);if(!options.part&&objKeys.length!==keys(ref).length&&!options.skip){return false}let skipped=0;for(const key of objKeys){if(options.skip&&options.skip.includes(key)){if(ref[key]===undefined){++skipped}continue}if(!hasOwnEnumerableProperty(ref,key)){return false}if(!isDeepEqual(obj[key],ref[key],options,seen)){return false}}if(!options.part&&objKeys.length-skipped!==keys(ref).length){return false}if(options.symbols!==false){const objSymbols=getOwnPropertySymbols(obj);const refSymbols=new Set(getOwnPropertySymbols(ref));for(const key of objSymbols){if(!options.skip||!options.skip.includes(key)){if(hasOwnEnumerableProperty(obj,key)){if(!hasOwnEnumerableProperty(ref,key)){return false}if(!isDeepEqual(obj[key],ref[key],options,seen)){return false}}else if(hasOwnEnumerableProperty(ref,key)){return false}}refSymbols.delete(key)}for(const key of refSymbols){if(hasOwnEnumerableProperty(ref,key)){return false}}}return true};internals.SeenEntry=class{constructor(obj,ref){this.obj=obj;this.ref=ref}isSame(obj,ref){return this.obj===obj&&this.ref===ref}}},6090:(module,exports,__webpack_require__)=>{"use strict";const Stringify=__webpack_require__(4308);const internals={};module.exports=class extends Error{constructor(args){const msgs=args.filter((arg=>arg!=="")).map((arg=>typeof arg==="string"?arg:arg instanceof Error?arg.message:Stringify(arg)));super(msgs.join(" ")||"Unknown error");if(typeof Error.captureStackTrace==="function"){Error.captureStackTrace(this,exports.assert)}}}},8438:module=>{"use strict";const internals={};module.exports=function(input){if(!input){return""}let escaped="";for(let i=0;i<input.length;++i){const charCode=input.charCodeAt(i);if(internals.isSafe(charCode)){escaped+=input[i]}else{escaped+=internals.escapeHtmlChar(charCode)}}return escaped};internals.escapeHtmlChar=function(charCode){const namedEscape=internals.namedHtml.get(charCode);if(namedEscape){return namedEscape}if(charCode>=256){return"&#"+charCode+";"}const hexValue=charCode.toString(16).padStart(2,"0");return`&#x${hexValue};`};internals.isSafe=function(charCode){return internals.safeCharCodes.has(charCode)};internals.namedHtml=new Map([[38,"&amp;"],[60,"&lt;"],[62,"&gt;"],[34,"&quot;"],[160,"&nbsp;"],[162,"&cent;"],[163,"&pound;"],[164,"&curren;"],[169,"&copy;"],[174,"&reg;"]]);internals.safeCharCodes=function(){const safe=new Set;for(let i=32;i<123;++i){if(i>=97||i>=65&&i<=90||i>=48&&i<=57||i===32||i===46||i===44||i===45||i===58||i===95){safe.add(i)}}return safe}()},2573:module=>{"use strict";const internals={};module.exports=function(string){return string.replace(/[\^\$\.\*\+\-\?\=\!\:\|\\\/\(\)\[\]\{\}\,]/g,"\\$&")}},4298:module=>{"use strict";const internals={};module.exports=function(){}},7093:(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";const Assert=__webpack_require__(9647);const Clone=__webpack_require__(3737);const Utils=__webpack_require__(5262);const internals={};module.exports=internals.merge=function(target,source,options){Assert(target&&typeof target==="object","Invalid target value: must be an object");Assert(source===null||source===undefined||typeof source==="object","Invalid source value: must be null, undefined, or an object");if(!source){return target}options=Object.assign({nullOverride:true,mergeArrays:true},options);if(Array.isArray(source)){Assert(Array.isArray(target),"Cannot merge array onto an object");if(!options.mergeArrays){target.length=0}for(let i=0;i<source.length;++i){target.push(Clone(source[i],{symbols:options.symbols}))}return target}const keys=Utils.keys(source,options);for(let i=0;i<keys.length;++i){const key=keys[i];if(key==="__proto__"||!Object.prototype.propertyIsEnumerable.call(source,key)){continue}const value=source[key];if(value&&typeof value==="object"){if(target[key]===value){continue}if(!target[key]||typeof target[key]!=="object"||Array.isArray(target[key])!==Array.isArray(value)||value instanceof Date||Buffer&&Buffer.isBuffer(value)||value instanceof RegExp){target[key]=Clone(value,{symbols:options.symbols})}else{internals.merge(target[key],value,options)}}else{if(value!==null&&value!==undefined){target[key]=value}else if(options.nullOverride){target[key]=value}}}return target}},6770:(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";const Assert=__webpack_require__(9647);const internals={};module.exports=function(obj,chain,options){if(chain===false||chain===null||chain===undefined){return obj}options=options||{};if(typeof options==="string"){options={separator:options}}const isChainArray=Array.isArray(chain);Assert(!isChainArray||!options.separator,"Separator option is not valid for array-based chain");const path=isChainArray?chain:chain.split(options.separator||".");let ref=obj;for(let i=0;i<path.length;++i){let key=path[i];const type=options.iterables&&internals.iterables(ref);if(Array.isArray(ref)||type==="set"){const number=Number(key);if(Number.isInteger(number)){key=number<0?ref.length+number:number}}if(!ref||typeof ref==="function"&&options.functions===false||!type&&ref[key]===undefined){Assert(!options.strict||i+1===path.length,"Missing segment",key,"in reach path ",chain);Assert(typeof ref==="object"||options.functions===true||typeof ref!=="function","Invalid segment",key,"in reach path ",chain);ref=options.default;break}if(!type){ref=ref[key]}else if(type==="set"){ref=[...ref][key]}else{ref=ref.get(key)}}return ref};internals.iterables=function(ref){if(ref instanceof Set){return"set"}if(ref instanceof Map){return"map"}}},4308:module=>{"use strict";const internals={};module.exports=function(...args){try{return JSON.stringify(...args)}catch(err){return"[Cannot display object: "+err.message+"]"}}},6157:(module,exports)=>{"use strict";const internals={};exports=module.exports={array:Array.prototype,buffer:Buffer&&Buffer.prototype,date:Date.prototype,error:Error.prototype,generic:Object.prototype,map:Map.prototype,promise:Promise.prototype,regex:RegExp.prototype,set:Set.prototype,weakMap:WeakMap.prototype,weakSet:WeakSet.prototype};internals.typeMap=new Map([["[object Error]",exports.error],["[object Map]",exports.map],["[object Promise]",exports.promise],["[object Set]",exports.set],["[object WeakMap]",exports.weakMap],["[object WeakSet]",exports.weakSet]]);exports.getInternalProto=function(obj){if(Array.isArray(obj)){return exports.array}if(Buffer&&obj instanceof Buffer){return exports.buffer}if(obj instanceof Date){return exports.date}if(obj instanceof RegExp){return exports.regex}if(obj instanceof Error){return exports.error}const objName=Object.prototype.toString.call(obj);return internals.typeMap.get(objName)||exports.generic}},5262:(__unused_webpack_module,exports)=>{"use strict";const internals={};exports.keys=function(obj,options={}){return options.symbols!==false?Reflect.ownKeys(obj):Object.getOwnPropertyNames(obj)}},9484:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";const Assert=__webpack_require__(9647);const internals={};exports.Sorter=class{constructor(){this._items=[];this.nodes=[]}add(nodes,options){options=options||{};const before=[].concat(options.before||[]);const after=[].concat(options.after||[]);const group=options.group||"?";const sort=options.sort||0;Assert(!before.includes(group),`Item cannot come before itself: ${group}`);Assert(!before.includes("?"),"Item cannot come before unassociated items");Assert(!after.includes(group),`Item cannot come after itself: ${group}`);Assert(!after.includes("?"),"Item cannot come after unassociated items");if(!Array.isArray(nodes)){nodes=[nodes]}for(const node of nodes){const item={seq:this._items.length,sort,before,after,group,node};this._items.push(item)}if(!options.manual){const valid=this._sort();Assert(valid,"item",group!=="?"?`added into group ${group}`:"","created a dependencies error")}return this.nodes}merge(others){if(!Array.isArray(others)){others=[others]}for(const other of others){if(other){for(const item of other._items){this._items.push(Object.assign({},item))}}}this._items.sort(internals.mergeSort);for(let i=0;i<this._items.length;++i){this._items[i].seq=i}const valid=this._sort();Assert(valid,"merge created a dependencies error");return this.nodes}sort(){const valid=this._sort();Assert(valid,"sort created a dependencies error");return this.nodes}_sort(){const graph={};const graphAfters=Object.create(null);const groups=Object.create(null);for(const item of this._items){const seq=item.seq;const group=item.group;groups[group]=groups[group]||[];groups[group].push(seq);graph[seq]=item.before;for(const after of item.after){graphAfters[after]=graphAfters[after]||[];graphAfters[after].push(seq)}}for(const node in graph){const expandedGroups=[];for(const graphNodeItem in graph[node]){const group=graph[node][graphNodeItem];groups[group]=groups[group]||[];expandedGroups.push(...groups[group])}graph[node]=expandedGroups}for(const group in graphAfters){if(groups[group]){for(const node of groups[group]){graph[node].push(...graphAfters[group])}}}const ancestors={};for(const node in graph){const children=graph[node];for(const child of children){ancestors[child]=ancestors[child]||[];ancestors[child].push(node)}}const visited={};const sorted=[];for(let i=0;i<this._items.length;++i){let next=i;if(ancestors[i]){next=null;for(let j=0;j<this._items.length;++j){if(visited[j]===true){continue}if(!ancestors[j]){ancestors[j]=[]}const shouldSeeCount=ancestors[j].length;let seenCount=0;for(let k=0;k<shouldSeeCount;++k){if(visited[ancestors[j][k]]){++seenCount}}if(seenCount===shouldSeeCount){next=j;break}}}if(next!==null){visited[next]=true;sorted.push(next)}}if(sorted.length!==this._items.length){return false}const seqIndex={};for(const item of this._items){seqIndex[item.seq]=item}this._items=[];this.nodes=[];for(const value of sorted){const sortedItem=seqIndex[value];this.nodes.push(sortedItem.node);this._items.push(sortedItem)}return true}};internals.mergeSort=(a,b)=>a.sort===b.sort?0:a.sort<b.sort?-1:1},9253:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";const Url=__webpack_require__(7310);const Errors=__webpack_require__(1722);const internals={minDomainSegments:2,nonAsciiRx:/[^\x00-\x7f]/,domainControlRx:/[\x00-\x20@\:\/\\#!\$&\'\(\)\*\+,;=\?]/,tldSegmentRx:/^[a-zA-Z](?:[a-zA-Z0-9\-]*[a-zA-Z0-9])?$/,domainSegmentRx:/^[a-zA-Z0-9](?:[a-zA-Z0-9\-]*[a-zA-Z0-9])?$/,URL:Url.URL||URL};exports.analyze=function(domain,options={}){if(!domain){return Errors.code("DOMAIN_NON_EMPTY_STRING")}if(typeof domain!=="string"){throw new Error("Invalid input: domain must be a string")}if(domain.length>256){return Errors.code("DOMAIN_TOO_LONG")}const ascii=!internals.nonAsciiRx.test(domain);if(!ascii){if(options.allowUnicode===false){return Errors.code("DOMAIN_INVALID_UNICODE_CHARS")}domain=domain.normalize("NFC")}if(internals.domainControlRx.test(domain)){return Errors.code("DOMAIN_INVALID_CHARS")}domain=internals.punycode(domain);if(options.allowFullyQualified&&domain[domain.length-1]==="."){domain=domain.slice(0,-1)}const minDomainSegments=options.minDomainSegments||internals.minDomainSegments;const segments=domain.split(".");if(segments.length<minDomainSegments){return Errors.code("DOMAIN_SEGMENTS_COUNT")}if(options.maxDomainSegments){if(segments.length>options.maxDomainSegments){return Errors.code("DOMAIN_SEGMENTS_COUNT_MAX")}}const tlds=options.tlds;if(tlds){const tld=segments[segments.length-1].toLowerCase();if(tlds.deny&&tlds.deny.has(tld)||tlds.allow&&!tlds.allow.has(tld)){return Errors.code("DOMAIN_FORBIDDEN_TLDS")}}for(let i=0;i<segments.length;++i){const segment=segments[i];if(!segment.length){return Errors.code("DOMAIN_EMPTY_SEGMENT")}if(segment.length>63){return Errors.code("DOMAIN_LONG_SEGMENT")}if(i<segments.length-1){if(!internals.domainSegmentRx.test(segment)){return Errors.code("DOMAIN_INVALID_CHARS")}}else{if(!internals.tldSegmentRx.test(segment)){return Errors.code("DOMAIN_INVALID_TLDS_CHARS")}}}return null};exports.isValid=function(domain,options){return!exports.analyze(domain,options)};internals.punycode=function(domain){if(domain.includes("%")){domain=domain.replace(/%/g,"%25")}try{return new internals.URL(`http://${domain}`).host}catch(err){return domain}}},7558:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";const Util=__webpack_require__(3837);const Domain=__webpack_require__(9253);const Errors=__webpack_require__(1722);const internals={nonAsciiRx:/[^\x00-\x7f]/,encoder:new(Util.TextEncoder||TextEncoder)};exports.analyze=function(email,options){return internals.email(email,options)};exports.isValid=function(email,options){return!internals.email(email,options)};internals.email=function(email,options={}){if(typeof email!=="string"){throw new Error("Invalid input: email must be a string")}if(!email){return Errors.code("EMPTY_STRING")}const ascii=!internals.nonAsciiRx.test(email);if(!ascii){if(options.allowUnicode===false){return Errors.code("FORBIDDEN_UNICODE")}email=email.normalize("NFC")}const parts=email.split("@");if(parts.length!==2){return parts.length>2?Errors.code("MULTIPLE_AT_CHAR"):Errors.code("MISSING_AT_CHAR")}const[local,domain]=parts;if(!local){return Errors.code("EMPTY_LOCAL")}if(!options.ignoreLength){if(email.length>254){return Errors.code("ADDRESS_TOO_LONG")}if(internals.encoder.encode(local).length>64){return Errors.code("LOCAL_TOO_LONG")}}return internals.local(local,ascii)||Domain.analyze(domain,options)};internals.local=function(local,ascii){const segments=local.split(".");for(const segment of segments){if(!segment.length){return Errors.code("EMPTY_LOCAL_SEGMENT")}if(ascii){if(!internals.atextRx.test(segment)){return Errors.code("INVALID_LOCAL_CHARS")}continue}for(const char of segment){if(internals.atextRx.test(char)){continue}const binary=internals.binary(char);if(!internals.atomRx.test(binary)){return Errors.code("INVALID_LOCAL_CHARS")}}}};internals.binary=function(char){return Array.from(internals.encoder.encode(char)).map((v=>String.fromCharCode(v))).join("")};internals.atextRx=/^[\w!#\$%&'\*\+\-/=\?\^`\{\|\}~]+$/;internals.atomRx=new RegExp(["(?:[\\xc2-\\xdf][\\x80-\\xbf])","(?:\\xe0[\\xa0-\\xbf][\\x80-\\xbf])|(?:[\\xe1-\\xec][\\x80-\\xbf]{2})|(?:\\xed[\\x80-\\x9f][\\x80-\\xbf])|(?:[\\xee-\\xef][\\x80-\\xbf]{2})","(?:\\xf0[\\x90-\\xbf][\\x80-\\xbf]{2})|(?:[\\xf1-\\xf3][\\x80-\\xbf]{3})|(?:\\xf4[\\x80-\\x8f][\\x80-\\xbf]{2})"].join("|"))},1722:(__unused_webpack_module,exports)=>{"use strict";exports.codes={EMPTY_STRING:"Address must be a non-empty string",FORBIDDEN_UNICODE:"Address contains forbidden Unicode characters",MULTIPLE_AT_CHAR:"Address cannot contain more than one @ character",MISSING_AT_CHAR:"Address must contain one @ character",EMPTY_LOCAL:"Address local part cannot be empty",ADDRESS_TOO_LONG:"Address too long",LOCAL_TOO_LONG:"Address local part too long",EMPTY_LOCAL_SEGMENT:"Address local part contains empty dot-separated segment",INVALID_LOCAL_CHARS:"Address local part contains invalid character",DOMAIN_NON_EMPTY_STRING:"Domain must be a non-empty string",DOMAIN_TOO_LONG:"Domain too long",DOMAIN_INVALID_UNICODE_CHARS:"Domain contains forbidden Unicode characters",DOMAIN_INVALID_CHARS:"Domain contains invalid character",DOMAIN_INVALID_TLDS_CHARS:"Domain contains invalid tld character",DOMAIN_SEGMENTS_COUNT:"Domain lacks the minimum required number of segments",DOMAIN_SEGMENTS_COUNT_MAX:"Domain contains too many segments",DOMAIN_FORBIDDEN_TLDS:"Domain uses forbidden TLD",DOMAIN_EMPTY_SEGMENT:"Domain contains empty dot-separated segment",DOMAIN_LONG_SEGMENT:"Domain contains dot-separated segment that is too long"};exports.code=function(code){return{code,error:exports.codes[code]}}},7531:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";const Assert=__webpack_require__(9647);const Uri=__webpack_require__(1747);const internals={};exports.regex=function(options={}){Assert(options.cidr===undefined||typeof options.cidr==="string","options.cidr must be a string");const cidr=options.cidr?options.cidr.toLowerCase():"optional";Assert(["required","optional","forbidden"].includes(cidr),"options.cidr must be one of required, optional, forbidden");Assert(options.version===undefined||typeof options.version==="string"||Array.isArray(options.version),"options.version must be a string or an array of string");let versions=options.version||["ipv4","ipv6","ipvfuture"];if(!Array.isArray(versions)){versions=[versions]}Assert(versions.length>=1,"options.version must have at least 1 version specified");for(let i=0;i<versions.length;++i){Assert(typeof versions[i]==="string","options.version must only contain strings");versions[i]=versions[i].toLowerCase();Assert(["ipv4","ipv6","ipvfuture"].includes(versions[i]),"options.version contains unknown version "+versions[i]+" - must be one of ipv4, ipv6, ipvfuture")}versions=Array.from(new Set(versions));const parts=versions.map((version=>{if(cidr==="forbidden"){return Uri.ip[version]}const cidrpart=`\\/${version==="ipv4"?Uri.ip.v4Cidr:Uri.ip.v6Cidr}`;if(cidr==="required"){return`${Uri.ip[version]}${cidrpart}`}return`${Uri.ip[version]}(?:${cidrpart})?`}));const raw=`(?:${parts.join("|")})`;const regex=new RegExp(`^${raw}$`);return{cidr,versions,regex,raw}}},1254:module=>{"use strict";const internals={};internals.tlds=["AAA","AARP","ABARTH","ABB","ABBOTT","ABBVIE","ABC","ABLE","ABOGADO","ABUDHABI","AC","ACADEMY","ACCENTURE","ACCOUNTANT","ACCOUNTANTS","ACO","ACTOR","AD","ADAC","ADS","ADULT","AE","AEG","AERO","AETNA","AF","AFL","AFRICA","AG","AGAKHAN","AGENCY","AI","AIG","AIRBUS","AIRFORCE","AIRTEL","AKDN","AL","ALFAROMEO","ALIBABA","ALIPAY","ALLFINANZ","ALLSTATE","ALLY","ALSACE","ALSTOM","AM","AMAZON","AMERICANEXPRESS","AMERICANFAMILY","AMEX","AMFAM","AMICA","AMSTERDAM","ANALYTICS","ANDROID","ANQUAN","ANZ","AO","AOL","APARTMENTS","APP","APPLE","AQ","AQUARELLE","AR","ARAB","ARAMCO","ARCHI","ARMY","ARPA","ART","ARTE","AS","ASDA","ASIA","ASSOCIATES","AT","ATHLETA","ATTORNEY","AU","AUCTION","AUDI","AUDIBLE","AUDIO","AUSPOST","AUTHOR","AUTO","AUTOS","AVIANCA","AW","AWS","AX","AXA","AZ","AZURE","BA","BABY","BAIDU","BANAMEX","BANANAREPUBLIC","BAND","BANK","BAR","BARCELONA","BARCLAYCARD","BARCLAYS","BAREFOOT","BARGAINS","BASEBALL","BASKETBALL","BAUHAUS","BAYERN","BB","BBC","BBT","BBVA","BCG","BCN","BD","BE","BEATS","BEAUTY","BEER","BENTLEY","BERLIN","BEST","BESTBUY","BET","BF","BG","BH","BHARTI","BI","BIBLE","BID","BIKE","BING","BINGO","BIO","BIZ","BJ","BLACK","BLACKFRIDAY","BLOCKBUSTER","BLOG","BLOOMBERG","BLUE","BM","BMS","BMW","BN","BNPPARIBAS","BO","BOATS","BOEHRINGER","BOFA","BOM","BOND","BOO","BOOK","BOOKING","BOSCH","BOSTIK","BOSTON","BOT","BOUTIQUE","BOX","BR","BRADESCO","BRIDGESTONE","BROADWAY","BROKER","BROTHER","BRUSSELS","BS","BT","BUGATTI","BUILD","BUILDERS","BUSINESS","BUY","BUZZ","BV","BW","BY","BZ","BZH","CA","CAB","CAFE","CAL","CALL","CALVINKLEIN","CAM","CAMERA","CAMP","CANCERRESEARCH","CANON","CAPETOWN","CAPITAL","CAPITALONE","CAR","CARAVAN","CARDS","CARE","CAREER","CAREERS","CARS","CASA","CASE","CASH","CASINO","CAT","CATERING","CATHOLIC","CBA","CBN","CBRE","CBS","CC","CD","CENTER","CEO","CERN","CF","CFA","CFD","CG","CH","CHANEL","CHANNEL","CHARITY","CHASE","CHAT","CHEAP","CHINTAI","CHRISTMAS","CHROME","CHURCH","CI","CIPRIANI","CIRCLE","CISCO","CITADEL","CITI","CITIC","CITY","CITYEATS","CK","CL","CLAIMS","CLEANING","CLICK","CLINIC","CLINIQUE","CLOTHING","CLOUD","CLUB","CLUBMED","CM","CN","CO","COACH","CODES","COFFEE","COLLEGE","COLOGNE","COM","COMCAST","COMMBANK","COMMUNITY","COMPANY","COMPARE","COMPUTER","COMSEC","CONDOS","CONSTRUCTION","CONSULTING","CONTACT","CONTRACTORS","COOKING","COOKINGCHANNEL","COOL","COOP","CORSICA","COUNTRY","COUPON","COUPONS","COURSES","CPA","CR","CREDIT","CREDITCARD","CREDITUNION","CRICKET","CROWN","CRS","CRUISE","CRUISES","CU","CUISINELLA","CV","CW","CX","CY","CYMRU","CYOU","CZ","DABUR","DAD","DANCE","DATA","DATE","DATING","DATSUN","DAY","DCLK","DDS","DE","DEAL","DEALER","DEALS","DEGREE","DELIVERY","DELL","DELOITTE","DELTA","DEMOCRAT","DENTAL","DENTIST","DESI","DESIGN","DEV","DHL","DIAMONDS","DIET","DIGITAL","DIRECT","DIRECTORY","DISCOUNT","DISCOVER","DISH","DIY","DJ","DK","DM","DNP","DO","DOCS","DOCTOR","DOG","DOMAINS","DOT","DOWNLOAD","DRIVE","DTV","DUBAI","DUNLOP","DUPONT","DURBAN","DVAG","DVR","DZ","EARTH","EAT","EC","ECO","EDEKA","EDU","EDUCATION","EE","EG","EMAIL","EMERCK","ENERGY","ENGINEER","ENGINEERING","ENTERPRISES","EPSON","EQUIPMENT","ER","ERICSSON","ERNI","ES","ESQ","ESTATE","ET","ETISALAT","EU","EUROVISION","EUS","EVENTS","EXCHANGE","EXPERT","EXPOSED","EXPRESS","EXTRASPACE","FAGE","FAIL","FAIRWINDS","FAITH","FAMILY","FAN","FANS","FARM","FARMERS","FASHION","FAST","FEDEX","FEEDBACK","FERRARI","FERRERO","FI","FIAT","FIDELITY","FIDO","FILM","FINAL","FINANCE","FINANCIAL","FIRE","FIRESTONE","FIRMDALE","FISH","FISHING","FIT","FITNESS","FJ","FK","FLICKR","FLIGHTS","FLIR","FLORIST","FLOWERS","FLY","FM","FO","FOO","FOOD","FOODNETWORK","FOOTBALL","FORD","FOREX","FORSALE","FORUM","FOUNDATION","FOX","FR","FREE","FRESENIUS","FRL","FROGANS","FRONTDOOR","FRONTIER","FTR","FUJITSU","FUN","FUND","FURNITURE","FUTBOL","FYI","GA","GAL","GALLERY","GALLO","GALLUP","GAME","GAMES","GAP","GARDEN","GAY","GB","GBIZ","GD","GDN","GE","GEA","GENT","GENTING","GEORGE","GF","GG","GGEE","GH","GI","GIFT","GIFTS","GIVES","GIVING","GL","GLASS","GLE","GLOBAL","GLOBO","GM","GMAIL","GMBH","GMO","GMX","GN","GODADDY","GOLD","GOLDPOINT","GOLF","GOO","GOODYEAR","GOOG","GOOGLE","GOP","GOT","GOV","GP","GQ","GR","GRAINGER","GRAPHICS","GRATIS","GREEN","GRIPE","GROCERY","GROUP","GS","GT","GU","GUARDIAN","GUCCI","GUGE","GUIDE","GUITARS","GURU","GW","GY","HAIR","HAMBURG","HANGOUT","HAUS","HBO","HDFC","HDFCBANK","HEALTH","HEALTHCARE","HELP","HELSINKI","HERE","HERMES","HGTV","HIPHOP","HISAMITSU","HITACHI","HIV","HK","HKT","HM","HN","HOCKEY","HOLDINGS","HOLIDAY","HOMEDEPOT","HOMEGOODS","HOMES","HOMESENSE","HONDA","HORSE","HOSPITAL","HOST","HOSTING","HOT","HOTELES","HOTELS","HOTMAIL","HOUSE","HOW","HR","HSBC","HT","HU","HUGHES","HYATT","HYUNDAI","IBM","ICBC","ICE","ICU","ID","IE","IEEE","IFM","IKANO","IL","IM","IMAMAT","IMDB","IMMO","IMMOBILIEN","IN","INC","INDUSTRIES","INFINITI","INFO","ING","INK","INSTITUTE","INSURANCE","INSURE","INT","INTERNATIONAL","INTUIT","INVESTMENTS","IO","IPIRANGA","IQ","IR","IRISH","IS","ISMAILI","IST","ISTANBUL","IT","ITAU","ITV","JAGUAR","JAVA","JCB","JE","JEEP","JETZT","JEWELRY","JIO","JLL","JM","JMP","JNJ","JO","JOBS","JOBURG","JOT","JOY","JP","JPMORGAN","JPRS","JUEGOS","JUNIPER","KAUFEN","KDDI","KE","KERRYHOTELS","KERRYLOGISTICS","KERRYPROPERTIES","KFH","KG","KH","KI","KIA","KIM","KINDER","KINDLE","KITCHEN","KIWI","KM","KN","KOELN","KOMATSU","KOSHER","KP","KPMG","KPN","KR","KRD","KRED","KUOKGROUP","KW","KY","KYOTO","KZ","LA","LACAIXA","LAMBORGHINI","LAMER","LANCASTER","LANCIA","LAND","LANDROVER","LANXESS","LASALLE","LAT","LATINO","LATROBE","LAW","LAWYER","LB","LC","LDS","LEASE","LECLERC","LEFRAK","LEGAL","LEGO","LEXUS","LGBT","LI","LIDL","LIFE","LIFEINSURANCE","LIFESTYLE","LIGHTING","LIKE","LILLY","LIMITED","LIMO","LINCOLN","LINDE","LINK","LIPSY","LIVE","LIVING","LK","LLC","LLP","LOAN","LOANS","LOCKER","LOCUS","LOFT","LOL","LONDON","LOTTE","LOTTO","LOVE","LPL","LPLFINANCIAL","LR","LS","LT","LTD","LTDA","LU","LUNDBECK","LUXE","LUXURY","LV","LY","MA","MACYS","MADRID","MAIF","MAISON","MAKEUP","MAN","MANAGEMENT","MANGO","MAP","MARKET","MARKETING","MARKETS","MARRIOTT","MARSHALLS","MASERATI","MATTEL","MBA","MC","MCKINSEY","MD","ME","MED","MEDIA","MEET","MELBOURNE","MEME","MEMORIAL","MEN","MENU","MERCKMSD","MG","MH","MIAMI","MICROSOFT","MIL","MINI","MINT","MIT","MITSUBISHI","MK","ML","MLB","MLS","MM","MMA","MN","MO","MOBI","MOBILE","MODA","MOE","MOI","MOM","MONASH","MONEY","MONSTER","MORMON","MORTGAGE","MOSCOW","MOTO","MOTORCYCLES","MOV","MOVIE","MP","MQ","MR","MS","MSD","MT","MTN","MTR","MU","MUSEUM","MUSIC","MUTUAL","MV","MW","MX","MY","MZ","NA","NAB","NAGOYA","NAME","NATURA","NAVY","NBA","NC","NE","NEC","NET","NETBANK","NETFLIX","NETWORK","NEUSTAR","NEW","NEWS","NEXT","NEXTDIRECT","NEXUS","NF","NFL","NG","NGO","NHK","NI","NICO","NIKE","NIKON","NINJA","NISSAN","NISSAY","NL","NO","NOKIA","NORTHWESTERNMUTUAL","NORTON","NOW","NOWRUZ","NOWTV","NP","NR","NRA","NRW","NTT","NU","NYC","NZ","OBI","OBSERVER","OFFICE","OKINAWA","OLAYAN","OLAYANGROUP","OLDNAVY","OLLO","OM","OMEGA","ONE","ONG","ONL","ONLINE","OOO","OPEN","ORACLE","ORANGE","ORG","ORGANIC","ORIGINS","OSAKA","OTSUKA","OTT","OVH","PA","PAGE","PANASONIC","PARIS","PARS","PARTNERS","PARTS","PARTY","PASSAGENS","PAY","PCCW","PE","PET","PF","PFIZER","PG","PH","PHARMACY","PHD","PHILIPS","PHONE","PHOTO","PHOTOGRAPHY","PHOTOS","PHYSIO","PICS","PICTET","PICTURES","PID","PIN","PING","PINK","PIONEER","PIZZA","PK","PL","PLACE","PLAY","PLAYSTATION","PLUMBING","PLUS","PM","PN","PNC","POHL","POKER","POLITIE","PORN","POST","PR","PRAMERICA","PRAXI","PRESS","PRIME","PRO","PROD","PRODUCTIONS","PROF","PROGRESSIVE","PROMO","PROPERTIES","PROPERTY","PROTECTION","PRU","PRUDENTIAL","PS","PT","PUB","PW","PWC","PY","QA","QPON","QUEBEC","QUEST","RACING","RADIO","RE","READ","REALESTATE","REALTOR","REALTY","RECIPES","RED","REDSTONE","REDUMBRELLA","REHAB","REISE","REISEN","REIT","RELIANCE","REN","RENT","RENTALS","REPAIR","REPORT","REPUBLICAN","REST","RESTAURANT","REVIEW","REVIEWS","REXROTH","RICH","RICHARDLI","RICOH","RIL","RIO","RIP","RO","ROCHER","ROCKS","RODEO","ROGERS","ROOM","RS","RSVP","RU","RUGBY","RUHR","RUN","RW","RWE","RYUKYU","SA","SAARLAND","SAFE","SAFETY","SAKURA","SALE","SALON","SAMSCLUB","SAMSUNG","SANDVIK","SANDVIKCOROMANT","SANOFI","SAP","SARL","SAS","SAVE","SAXO","SB","SBI","SBS","SC","SCA","SCB","SCHAEFFLER","SCHMIDT","SCHOLARSHIPS","SCHOOL","SCHULE","SCHWARZ","SCIENCE","SCOT","SD","SE","SEARCH","SEAT","SECURE","SECURITY","SEEK","SELECT","SENER","SERVICES","SES","SEVEN","SEW","SEX","SEXY","SFR","SG","SH","SHANGRILA","SHARP","SHAW","SHELL","SHIA","SHIKSHA","SHOES","SHOP","SHOPPING","SHOUJI","SHOW","SHOWTIME","SI","SILK","SINA","SINGLES","SITE","SJ","SK","SKI","SKIN","SKY","SKYPE","SL","SLING","SM","SMART","SMILE","SN","SNCF","SO","SOCCER","SOCIAL","SOFTBANK","SOFTWARE","SOHU","SOLAR","SOLUTIONS","SONG","SONY","SOY","SPA","SPACE","SPORT","SPOT","SR","SRL","SS","ST","STADA","STAPLES","STAR","STATEBANK","STATEFARM","STC","STCGROUP","STOCKHOLM","STORAGE","STORE","STREAM","STUDIO","STUDY","STYLE","SU","SUCKS","SUPPLIES","SUPPLY","SUPPORT","SURF","SURGERY","SUZUKI","SV","SWATCH","SWISS","SX","SY","SYDNEY","SYSTEMS","SZ","TAB","TAIPEI","TALK","TAOBAO","TARGET","TATAMOTORS","TATAR","TATTOO","TAX","TAXI","TC","TCI","TD","TDK","TEAM","TECH","TECHNOLOGY","TEL","TEMASEK","TENNIS","TEVA","TF","TG","TH","THD","THEATER","THEATRE","TIAA","TICKETS","TIENDA","TIFFANY","TIPS","TIRES","TIROL","TJ","TJMAXX","TJX","TK","TKMAXX","TL","TM","TMALL","TN","TO","TODAY","TOKYO","TOOLS","TOP","TORAY","TOSHIBA","TOTAL","TOURS","TOWN","TOYOTA","TOYS","TR","TRADE","TRADING","TRAINING","TRAVEL","TRAVELCHANNEL","TRAVELERS","TRAVELERSINSURANCE","TRUST","TRV","TT","TUBE","TUI","TUNES","TUSHU","TV","TVS","TW","TZ","UA","UBANK","UBS","UG","UK","UNICOM","UNIVERSITY","UNO","UOL","UPS","US","UY","UZ","VA","VACATIONS","VANA","VANGUARD","VC","VE","VEGAS","VENTURES","VERISIGN","VERSICHERUNG","VET","VG","VI","VIAJES","VIDEO","VIG","VIKING","VILLAS","VIN","VIP","VIRGIN","VISA","VISION","VIVA","VIVO","VLAANDEREN","VN","VODKA","VOLKSWAGEN","VOLVO","VOTE","VOTING","VOTO","VOYAGE","VU","VUELOS","WALES","WALMART","WALTER","WANG","WANGGOU","WATCH","WATCHES","WEATHER","WEATHERCHANNEL","WEBCAM","WEBER","WEBSITE","WED","WEDDING","WEIBO","WEIR","WF","WHOSWHO","WIEN","WIKI","WILLIAMHILL","WIN","WINDOWS","WINE","WINNERS","WME","WOLTERSKLUWER","WOODSIDE","WORK","WORKS","WORLD","WOW","WS","WTC","WTF","XBOX","XEROX","XFINITY","XIHUAN","XIN","XN--11B4C3D","XN--1CK2E1B","XN--1QQW23A","XN--2SCRJ9C","XN--30RR7Y","XN--3BST00M","XN--3DS443G","XN--3E0B707E","XN--3HCRJ9C","XN--3PXU8K","XN--42C2D9A","XN--45BR5CYL","XN--45BRJ9C","XN--45Q11C","XN--4DBRK0CE","XN--4GBRIM","XN--54B7FTA0CC","XN--55QW42G","XN--55QX5D","XN--5SU34J936BGSG","XN--5TZM5G","XN--6FRZ82G","XN--6QQ986B3XL","XN--80ADXHKS","XN--80AO21A","XN--80AQECDR1A","XN--80ASEHDB","XN--80ASWG","XN--8Y0A063A","XN--90A3AC","XN--90AE","XN--90AIS","XN--9DBQ2A","XN--9ET52U","XN--9KRT00A","XN--B4W605FERD","XN--BCK1B9A5DRE4C","XN--C1AVG","XN--C2BR7G","XN--CCK2B3B","XN--CCKWCXETD","XN--CG4BKI","XN--CLCHC0EA0B2G2A9GCD","XN--CZR694B","XN--CZRS0T","XN--CZRU2D","XN--D1ACJ3B","XN--D1ALF","XN--E1A4C","XN--ECKVDTC9D","XN--EFVY88H","XN--FCT429K","XN--FHBEI","XN--FIQ228C5HS","XN--FIQ64B","XN--FIQS8S","XN--FIQZ9S","XN--FJQ720A","XN--FLW351E","XN--FPCRJ9C3D","XN--FZC2C9E2C","XN--FZYS8D69UVGM","XN--G2XX48C","XN--GCKR3F0F","XN--GECRJ9C","XN--GK3AT1E","XN--H2BREG3EVE","XN--H2BRJ9C","XN--H2BRJ9C8C","XN--HXT814E","XN--I1B6B1A6A2E","XN--IMR513N","XN--IO0A7I","XN--J1AEF","XN--J1AMH","XN--J6W193G","XN--JLQ480N2RG","XN--JLQ61U9W7B","XN--JVR189M","XN--KCRX77D1X4A","XN--KPRW13D","XN--KPRY57D","XN--KPUT3I","XN--L1ACC","XN--LGBBAT1AD8J","XN--MGB9AWBF","XN--MGBA3A3EJT","XN--MGBA3A4F16A","XN--MGBA7C0BBN0A","XN--MGBAAKC7DVF","XN--MGBAAM7A8H","XN--MGBAB2BD","XN--MGBAH1A3HJKRD","XN--MGBAI9AZGQP6J","XN--MGBAYH7GPA","XN--MGBBH1A","XN--MGBBH1A71E","XN--MGBC0A9AZCG","XN--MGBCA7DZDO","XN--MGBCPQ6GPA1A","XN--MGBERP4A5D4AR","XN--MGBGU82A","XN--MGBI4ECEXP","XN--MGBPL2FH","XN--MGBT3DHD","XN--MGBTX2B","XN--MGBX4CD0AB","XN--MIX891F","XN--MK1BU44C","XN--MXTQ1M","XN--NGBC5AZD","XN--NGBE9E0A","XN--NGBRX","XN--NODE","XN--NQV7F","XN--NQV7FS00EMA","XN--NYQY26A","XN--O3CW4H","XN--OGBPF8FL","XN--OTU796D","XN--P1ACF","XN--P1AI","XN--PGBS0DH","XN--PSSY2U","XN--Q7CE6A","XN--Q9JYB4C","XN--QCKA1PMC","XN--QXA6A","XN--QXAM","XN--RHQV96G","XN--ROVU88B","XN--RVC1E0AM3E","XN--S9BRJ9C","XN--SES554G","XN--T60B56A","XN--TCKWE","XN--TIQ49XQYJ","XN--UNUP4Y","XN--VERMGENSBERATER-CTB","XN--VERMGENSBERATUNG-PWB","XN--VHQUV","XN--VUQ861B","XN--W4R85EL8FHU5DNRA","XN--W4RS40L","XN--WGBH1C","XN--WGBL6A","XN--XHQ521B","XN--XKC2AL3HYE2A","XN--XKC2DL3A5EE0H","XN--Y9A3AQ","XN--YFRO4I67O","XN--YGBI2AMMX","XN--ZFR164B","XXX","XYZ","YACHTS","YAHOO","YAMAXUN","YANDEX","YE","YODOBASHI","YOGA","YOKOHAMA","YOU","YOUTUBE","YT","YUN","ZA","ZAPPOS","ZARA","ZERO","ZIP","ZM","ZONE","ZUERICH","ZW"];module.exports=new Set(internals.tlds.map((tld=>tld.toLowerCase())))},1747:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";const Assert=__webpack_require__(9647);const EscapeRegex=__webpack_require__(2573);const internals={};internals.generate=function(){const rfc3986={};const hexDigit="\\dA-Fa-f";const hexDigitOnly="["+hexDigit+"]";const unreserved="\\w-\\.~";const subDelims="!\\$&'\\(\\)\\*\\+,;=";const pctEncoded="%"+hexDigit;const pchar=unreserved+pctEncoded+subDelims+":@";const pcharOnly="["+pchar+"]";const decOctect="(?:0{0,2}\\d|0?[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])";rfc3986.ipv4address="(?:"+decOctect+"\\.){3}"+decOctect;const h16=hexDigitOnly+"{1,4}";const ls32="(?:"+h16+":"+h16+"|"+rfc3986.ipv4address+")";const IPv6SixHex="(?:"+h16+":){6}"+ls32;const IPv6FiveHex="::(?:"+h16+":){5}"+ls32;const IPv6FourHex="(?:"+h16+")?::(?:"+h16+":){4}"+ls32;const IPv6ThreeHex="(?:(?:"+h16+":){0,1}"+h16+")?::(?:"+h16+":){3}"+ls32;const IPv6TwoHex="(?:(?:"+h16+":){0,2}"+h16+")?::(?:"+h16+":){2}"+ls32;const IPv6OneHex="(?:(?:"+h16+":){0,3}"+h16+")?::"+h16+":"+ls32;const IPv6NoneHex="(?:(?:"+h16+":){0,4}"+h16+")?::"+ls32;const IPv6NoneHex2="(?:(?:"+h16+":){0,5}"+h16+")?::"+h16;const IPv6NoneHex3="(?:(?:"+h16+":){0,6}"+h16+")?::";rfc3986.ipv4Cidr="(?:\\d|[1-2]\\d|3[0-2])";rfc3986.ipv6Cidr="(?:0{0,2}\\d|0?[1-9]\\d|1[01]\\d|12[0-8])";rfc3986.ipv6address="(?:"+IPv6SixHex+"|"+IPv6FiveHex+"|"+IPv6FourHex+"|"+IPv6ThreeHex+"|"+IPv6TwoHex+"|"+IPv6OneHex+"|"+IPv6NoneHex+"|"+IPv6NoneHex2+"|"+IPv6NoneHex3+")";rfc3986.ipvFuture="v"+hexDigitOnly+"+\\.["+unreserved+subDelims+":]+";rfc3986.scheme="[a-zA-Z][a-zA-Z\\d+-\\.]*";rfc3986.schemeRegex=new RegExp(rfc3986.scheme);const userinfo="["+unreserved+pctEncoded+subDelims+":]*";const IPLiteral="\\[(?:"+rfc3986.ipv6address+"|"+rfc3986.ipvFuture+")\\]";const regName="["+unreserved+pctEncoded+subDelims+"]{1,255}";const host="(?:"+IPLiteral+"|"+rfc3986.ipv4address+"|"+regName+")";const port="\\d*";const authority="(?:"+userinfo+"@)?"+host+"(?::"+port+")?";const authorityCapture="(?:"+userinfo+"@)?("+host+")(?::"+port+")?";const segment=pcharOnly+"*";const segmentNz=pcharOnly+"+";const segmentNzNc="["+unreserved+pctEncoded+subDelims+"@"+"]+";const pathEmpty="";const pathAbEmpty="(?:\\/"+segment+")*";const pathAbsolute="\\/(?:"+segmentNz+pathAbEmpty+")?";const pathRootless=segmentNz+pathAbEmpty;const pathNoScheme=segmentNzNc+pathAbEmpty;const pathAbNoAuthority="(?:\\/\\/\\/"+segment+pathAbEmpty+")";rfc3986.hierPart="(?:"+"(?:\\/\\/"+authority+pathAbEmpty+")"+"|"+pathAbsolute+"|"+pathRootless+"|"+pathAbNoAuthority+")";rfc3986.hierPartCapture="(?:"+"(?:\\/\\/"+authorityCapture+pathAbEmpty+")"+"|"+pathAbsolute+"|"+pathRootless+")";rfc3986.relativeRef="(?:"+"(?:\\/\\/"+authority+pathAbEmpty+")"+"|"+pathAbsolute+"|"+pathNoScheme+"|"+pathEmpty+")";rfc3986.relativeRefCapture="(?:"+"(?:\\/\\/"+authorityCapture+pathAbEmpty+")"+"|"+pathAbsolute+"|"+pathNoScheme+"|"+pathEmpty+")";rfc3986.query="["+pchar+"\\/\\?]*(?=#|$)";rfc3986.queryWithSquareBrackets="["+pchar+"\\[\\]\\/\\?]*(?=#|$)";rfc3986.fragment="["+pchar+"\\/\\?]*";return rfc3986};internals.rfc3986=internals.generate();exports.ip={v4Cidr:internals.rfc3986.ipv4Cidr,v6Cidr:internals.rfc3986.ipv6Cidr,ipv4:internals.rfc3986.ipv4address,ipv6:internals.rfc3986.ipv6address,ipvfuture:internals.rfc3986.ipvFuture};internals.createRegex=function(options){const rfc=internals.rfc3986;const query=options.allowQuerySquareBrackets?rfc.queryWithSquareBrackets:rfc.query;const suffix="(?:\\?"+query+")?"+"(?:#"+rfc.fragment+")?";const relative=options.domain?rfc.relativeRefCapture:rfc.relativeRef;if(options.relativeOnly){return internals.wrap(relative+suffix)}let customScheme="";if(options.scheme){Assert(options.scheme instanceof RegExp||typeof options.scheme==="string"||Array.isArray(options.scheme),"scheme must be a RegExp, String, or Array");const schemes=[].concat(options.scheme);Assert(schemes.length>=1,"scheme must have at least 1 scheme specified");const selections=[];for(let i=0;i<schemes.length;++i){const scheme=schemes[i];Assert(scheme instanceof RegExp||typeof scheme==="string","scheme at position "+i+" must be a RegExp or String");if(scheme instanceof RegExp){selections.push(scheme.source.toString())}else{Assert(rfc.schemeRegex.test(scheme),"scheme at position "+i+" must be a valid scheme");selections.push(EscapeRegex(scheme))}}customScheme=selections.join("|")}const scheme=customScheme?"(?:"+customScheme+")":rfc.scheme;const absolute="(?:"+scheme+":"+(options.domain?rfc.hierPartCapture:rfc.hierPart)+")";const prefix=options.allowRelative?"(?:"+absolute+"|"+relative+")":absolute;return internals.wrap(prefix+suffix,customScheme)};internals.wrap=function(raw,scheme){raw=`(?=.)(?!https?:/(?:$|[^/]))(?!https?:///)(?!https?:[^/])${raw}`;return{raw,regex:new RegExp(`^${raw}$`),scheme}};internals.uriRegex=internals.createRegex({});exports.regex=function(options={}){if(options.scheme||options.allowRelative||options.relativeOnly||options.allowQuerySquareBrackets||options.domain){return internals.createRegex(options)}return internals.uriRegex}},5278:(__unused_webpack_module,exports)=>{"use strict";const internals={operators:["!","^","*","/","%","+","-","<","<=",">",">=","==","!=","&&","||","??"],operatorCharacters:["!","^","*","/","%","+","-","<","=",">","&","|","?"],operatorsOrder:[["^"],["*","/","%"],["+","-"],["<","<=",">",">="],["==","!="],["&&"],["||","??"]],operatorsPrefix:["!","n"],literals:{'"':'"',"`":"`","'":"'","[":"]"},numberRx:/^(?:[0-9]*(\.[0-9]*)?){1}$/,tokenRx:/^[\w\$\#\.\@\:\{\}]+$/,symbol:Symbol("formula"),settings:Symbol("settings")};exports.Parser=class{constructor(string,options={}){if(!options[internals.settings]&&options.constants){for(const constant in options.constants){const value=options.constants[constant];if(value!==null&&!["boolean","number","string"].includes(typeof value)){throw new Error(`Formula constant ${constant} contains invalid ${typeof value} value type`)}}}this.settings=options[internals.settings]?options:Object.assign({[internals.settings]:true,constants:{},functions:{}},options);this.single=null;this._parts=null;this._parse(string)}_parse(string){let parts=[];let current="";let parenthesis=0;let literal=false;const flush=inner=>{if(parenthesis){throw new Error("Formula missing closing parenthesis")}const last=parts.length?parts[parts.length-1]:null;if(!literal&&!current&&!inner){return}if(last&&last.type==="reference"&&inner===")"){last.type="function";last.value=this._subFormula(current,last.value);current="";return}if(inner===")"){const sub=new exports.Parser(current,this.settings);parts.push({type:"segment",value:sub})}else if(literal){if(literal==="]"){parts.push({type:"reference",value:current});current="";return}parts.push({type:"literal",value:current})}else if(internals.operatorCharacters.includes(current)){if(last&&last.type==="operator"&&internals.operators.includes(last.value+current)){last.value+=current}else{parts.push({type:"operator",value:current})}}else if(current.match(internals.numberRx)){parts.push({type:"constant",value:parseFloat(current)})}else if(this.settings.constants[current]!==undefined){parts.push({type:"constant",value:this.settings.constants[current]})}else{if(!current.match(internals.tokenRx)){throw new Error(`Formula contains invalid token: ${current}`)}parts.push({type:"reference",value:current})}current=""};for(const c of string){if(literal){if(c===literal){flush();literal=false}else{current+=c}}else if(parenthesis){if(c==="("){current+=c;++parenthesis}else if(c===")"){--parenthesis;if(!parenthesis){flush(c)}else{current+=c}}else{current+=c}}else if(c in internals.literals){literal=internals.literals[c]}else if(c==="("){flush();++parenthesis}else if(internals.operatorCharacters.includes(c)){flush();current=c;flush()}else if(c!==" "){current+=c}else{flush()}}flush();parts=parts.map(((part,i)=>{if(part.type!=="operator"||part.value!=="-"||i&&parts[i-1].type!=="operator"){return part}return{type:"operator",value:"n"}}));let operator=false;for(const part of parts){if(part.type==="operator"){if(internals.operatorsPrefix.includes(part.value)){continue}if(!operator){throw new Error("Formula contains an operator in invalid position")}if(!internals.operators.includes(part.value)){throw new Error(`Formula contains an unknown operator ${part.value}`)}}else if(operator){throw new Error("Formula missing expected operator")}operator=!operator}if(!operator){throw new Error("Formula contains invalid trailing operator")}if(parts.length===1&&["reference","literal","constant"].includes(parts[0].type)){this.single={type:parts[0].type==="reference"?"reference":"value",value:parts[0].value}}this._parts=parts.map((part=>{if(part.type==="operator"){return internals.operatorsPrefix.includes(part.value)?part:part.value}if(part.type!=="reference"){return part.value}if(this.settings.tokenRx&&!this.settings.tokenRx.test(part.value)){throw new Error(`Formula contains invalid reference ${part.value}`)}if(this.settings.reference){return this.settings.reference(part.value)}return internals.reference(part.value)}))}_subFormula(string,name){const method=this.settings.functions[name];if(typeof method!=="function"){throw new Error(`Formula contains unknown function ${name}`)}let args=[];if(string){let current="";let parenthesis=0;let literal=false;const flush=()=>{if(!current){throw new Error(`Formula contains function ${name} with invalid arguments ${string}`)}args.push(current);current=""};for(let i=0;i<string.length;++i){const c=string[i];if(literal){current+=c;if(c===literal){literal=false}}else if(c in internals.literals&&!parenthesis){current+=c;literal=internals.literals[c]}else if(c===","&&!parenthesis){flush()}else{current+=c;if(c==="("){++parenthesis}else if(c===")"){--parenthesis}}}flush()}args=args.map((arg=>new exports.Parser(arg,this.settings)));return function(context){const innerValues=[];for(const arg of args){innerValues.push(arg.evaluate(context))}return method.call(context,...innerValues)}}evaluate(context){const parts=this._parts.slice();for(let i=parts.length-2;i>=0;--i){const part=parts[i];if(part&&part.type==="operator"){const current=parts[i+1];parts.splice(i+1,1);const value=internals.evaluate(current,context);parts[i]=internals.single(part.value,value)}}internals.operatorsOrder.forEach((set=>{for(let i=1;i<parts.length-1;){if(set.includes(parts[i])){const operator=parts[i];const left=internals.evaluate(parts[i-1],context);const right=internals.evaluate(parts[i+1],context);parts.splice(i,2);const result=internals.calculate(operator,left,right);parts[i-1]=result===0?0:result}else{i+=2}}}));return internals.evaluate(parts[0],context)}};exports.Parser.prototype[internals.symbol]=true;internals.reference=function(name){return function(context){return context&&context[name]!==undefined?context[name]:null}};internals.evaluate=function(part,context){if(part===null){return null}if(typeof part==="function"){return part(context)}if(part[internals.symbol]){return part.evaluate(context)}return part};internals.single=function(operator,value){if(operator==="!"){return value?false:true}const negative=-value;if(negative===0){return 0}return negative};internals.calculate=function(operator,left,right){if(operator==="??"){return internals.exists(left)?left:right}if(typeof left==="string"||typeof right==="string"){if(operator==="+"){left=internals.exists(left)?left:"";right=internals.exists(right)?right:"";return left+right}}else{switch(operator){case"^":return Math.pow(left,right);case"*":return left*right;case"/":return left/right;case"%":return left%right;case"+":return left+right;case"-":return left-right}}switch(operator){case"<":return left<right;case"<=":return left<=right;case">":return left>right;case">=":return left>=right;case"==":return left===right;case"!=":return left!==right;case"&&":return left&&right;case"||":return left||right}return null};internals.exists=function(value){return value!==null&&value!==undefined}},9725:(__unused_webpack_module,exports)=>{"use strict";const internals={};exports.location=function(depth=0){const orig=Error.prepareStackTrace;Error.prepareStackTrace=(ignore,stack)=>stack;const capture={};Error.captureStackTrace(capture,this);const line=capture.stack[depth+1];Error.prepareStackTrace=orig;return{filename:line.getFileName(),line:line.getLineNumber()}}},8450:(module,__unused_webpack_exports,__webpack_require__)=>{module.exports={parallel:__webpack_require__(7061),serial:__webpack_require__(3134),serialOrdered:__webpack_require__(5229)}},8575:module=>{module.exports=abort;function abort(state){Object.keys(state.jobs).forEach(clean.bind(state));state.jobs={}}function clean(key){if(typeof this.jobs[key]=="function"){this.jobs[key]()}}},2309:(module,__unused_webpack_exports,__webpack_require__)=>{var defer=__webpack_require__(3208);module.exports=async;function async(callback){var isAsync=false;defer((function(){isAsync=true}));return function async_callback(err,result){if(isAsync){callback(err,result)}else{defer((function nextTick_callback(){callback(err,result)}))}}}},3208:module=>{module.exports=defer;function defer(fn){var nextTick=typeof setImmediate=="function"?setImmediate:typeof process=="object"&&typeof process.nextTick=="function"?process.nextTick:null;if(nextTick){nextTick(fn)}else{setTimeout(fn,0)}}},3225:(module,__unused_webpack_exports,__webpack_require__)=>{var async=__webpack_require__(2309),abort=__webpack_require__(8575);module.exports=iterate;function iterate(list,iterator,state,callback){var key=state["keyedList"]?state["keyedList"][state.index]:state.index;state.jobs[key]=runJob(iterator,key,list[key],(function(error,output){if(!(key in state.jobs)){return}delete state.jobs[key];if(error){abort(state)}else{state.results[key]=output}callback(error,state.results)}))}function runJob(iterator,key,item,callback){var aborter;if(iterator.length==2){aborter=iterator(item,async(callback))}else{aborter=iterator(item,key,async(callback))}return aborter}},791:module=>{module.exports=state;function state(list,sortMethod){var isNamedList=!Array.isArray(list),initState={index:0,keyedList:isNamedList||sortMethod?Object.keys(list):null,jobs:{},results:isNamedList?{}:[],size:isNamedList?Object.keys(list).length:list.length};if(sortMethod){initState.keyedList.sort(isNamedList?sortMethod:function(a,b){return sortMethod(list[a],list[b])})}return initState}},5037:(module,__unused_webpack_exports,__webpack_require__)=>{var abort=__webpack_require__(8575),async=__webpack_require__(2309);module.exports=terminator;function terminator(callback){if(!Object.keys(this.jobs).length){return}this.index=this.size;abort(this);async(callback)(null,this.results)}},7061:(module,__unused_webpack_exports,__webpack_require__)=>{var iterate=__webpack_require__(3225),initState=__webpack_require__(791),terminator=__webpack_require__(5037);module.exports=parallel;function parallel(list,iterator,callback){var state=initState(list);while(state.index<(state["keyedList"]||list).length){iterate(list,iterator,state,(function(error,result){if(error){callback(error,result);return}if(Object.keys(state.jobs).length===0){callback(null,state.results);return}}));state.index++}return terminator.bind(state,callback)}},3134:(module,__unused_webpack_exports,__webpack_require__)=>{var serialOrdered=__webpack_require__(5229);module.exports=serial;function serial(list,iterator,callback){return serialOrdered(list,iterator,null,callback)}},5229:(module,__unused_webpack_exports,__webpack_require__)=>{var iterate=__webpack_require__(3225),initState=__webpack_require__(791),terminator=__webpack_require__(5037);module.exports=serialOrdered;module.exports.ascending=ascending;module.exports.descending=descending;function serialOrdered(list,iterator,sortMethod,callback){var state=initState(list,sortMethod);iterate(list,iterator,state,(function iteratorHandler(error,result){if(error){callback(error,result);return}state.index++;if(state.index<(state["keyedList"]||list).length){iterate(list,iterator,state,iteratorHandler);return}callback(null,state.results)}));return terminator.bind(state,callback)}function ascending(a,b){return a<b?-1:a>b?1:0}function descending(a,b){return-1*ascending(a,b)}},7787:(module,__unused_webpack_exports,__webpack_require__)=>{var util=__webpack_require__(3837);var Stream=__webpack_require__(2781).Stream;var DelayedStream=__webpack_require__(1168);module.exports=CombinedStream;function CombinedStream(){this.writable=false;this.readable=true;this.dataSize=0;this.maxDataSize=2*1024*1024;this.pauseStreams=true;this._released=false;this._streams=[];this._currentStream=null;this._insideLoop=false;this._pendingNext=false}util.inherits(CombinedStream,Stream);CombinedStream.create=function(options){var combinedStream=new this;options=options||{};for(var option in options){combinedStream[option]=options[option]}return combinedStream};CombinedStream.isStreamLike=function(stream){return typeof stream!=="function"&&typeof stream!=="string"&&typeof stream!=="boolean"&&typeof stream!=="number"&&!Buffer.isBuffer(stream)};CombinedStream.prototype.append=function(stream){var isStreamLike=CombinedStream.isStreamLike(stream);if(isStreamLike){if(!(stream instanceof DelayedStream)){var newStream=DelayedStream.create(stream,{maxDataSize:Infinity,pauseStream:this.pauseStreams});stream.on("data",this._checkDataSize.bind(this));stream=newStream}this._handleErrors(stream);if(this.pauseStreams){stream.pause()}}this._streams.push(stream);return this};CombinedStream.prototype.pipe=function(dest,options){Stream.prototype.pipe.call(this,dest,options);this.resume();return dest};CombinedStream.prototype._getNext=function(){this._currentStream=null;if(this._insideLoop){this._pendingNext=true;return}this._insideLoop=true;try{do{this._pendingNext=false;this._realGetNext()}while(this._pendingNext)}finally{this._insideLoop=false}};CombinedStream.prototype._realGetNext=function(){var stream=this._streams.shift();if(typeof stream=="undefined"){this.end();return}if(typeof stream!=="function"){this._pipeNext(stream);return}var getStream=stream;getStream(function(stream){var isStreamLike=CombinedStream.isStreamLike(stream);if(isStreamLike){stream.on("data",this._checkDataSize.bind(this));this._handleErrors(stream)}this._pipeNext(stream)}.bind(this))};CombinedStream.prototype._pipeNext=function(stream){this._currentStream=stream;var isStreamLike=CombinedStream.isStreamLike(stream);if(isStreamLike){stream.on("end",this._getNext.bind(this));stream.pipe(this,{end:false});return}var value=stream;this.write(value);this._getNext()};CombinedStream.prototype._handleErrors=function(stream){var self=this;stream.on("error",(function(err){self._emitError(err)}))};CombinedStream.prototype.write=function(data){this.emit("data",data)};CombinedStream.prototype.pause=function(){if(!this.pauseStreams){return}if(this.pauseStreams&&this._currentStream&&typeof this._currentStream.pause=="function")this._currentStream.pause();this.emit("pause")};CombinedStream.prototype.resume=function(){if(!this._released){this._released=true;this.writable=true;this._getNext()}if(this.pauseStreams&&this._currentStream&&typeof this._currentStream.resume=="function")this._currentStream.resume();this.emit("resume")};CombinedStream.prototype.end=function(){this._reset();this.emit("end")};CombinedStream.prototype.destroy=function(){this._reset();this.emit("close")};CombinedStream.prototype._reset=function(){this.writable=false;this._streams=[];this._currentStream=null};CombinedStream.prototype._checkDataSize=function(){this._updateDataSize();if(this.dataSize<=this.maxDataSize){return}var message="DelayedStream#maxDataSize of "+this.maxDataSize+" bytes exceeded.";this._emitError(new Error(message))};CombinedStream.prototype._updateDataSize=function(){this.dataSize=0;var self=this;this._streams.forEach((function(stream){if(!stream.dataSize){return}self.dataSize+=stream.dataSize}));if(this._currentStream&&this._currentStream.dataSize){this.dataSize+=this._currentStream.dataSize}};CombinedStream.prototype._emitError=function(err){this._reset();this.emit("error",err)}},5977:(module,exports,__webpack_require__)=>{exports.formatArgs=formatArgs;exports.save=save;exports.load=load;exports.useColors=useColors;exports.storage=localstorage();exports.destroy=(()=>{let warned=false;return()=>{if(!warned){warned=true;console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.")}}})();exports.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"];function useColors(){if(typeof window!=="undefined"&&window.process&&(window.process.type==="renderer"||window.process.__nwjs)){return true}if(typeof navigator!=="undefined"&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)){return false}return typeof document!=="undefined"&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||typeof window!=="undefined"&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||typeof navigator!=="undefined"&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||typeof navigator!=="undefined"&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/)}function formatArgs(args){args[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+args[0]+(this.useColors?"%c ":" ")+"+"+module.exports.humanize(this.diff);if(!this.useColors){return}const c="color: "+this.color;args.splice(1,0,c,"color: inherit");let index=0;let lastC=0;args[0].replace(/%[a-zA-Z%]/g,(match=>{if(match==="%%"){return}index++;if(match==="%c"){lastC=index}}));args.splice(lastC,0,c)}exports.log=console.debug||console.log||(()=>{});function save(namespaces){try{if(namespaces){exports.storage.setItem("debug",namespaces)}else{exports.storage.removeItem("debug")}}catch(error){}}function load(){let r;try{r=exports.storage.getItem("debug")}catch(error){}if(!r&&typeof process!=="undefined"&&"env"in process){r=process.env.DEBUG}return r}function localstorage(){try{return localStorage}catch(error){}}module.exports=__webpack_require__(3727)(exports);const{formatters}=module.exports;formatters.j=function(v){try{return JSON.stringify(v)}catch(error){return"[UnexpectedJSONParseError]: "+error.message}}},3727:(module,__unused_webpack_exports,__webpack_require__)=>{function setup(env){createDebug.debug=createDebug;createDebug.default=createDebug;createDebug.coerce=coerce;createDebug.disable=disable;createDebug.enable=enable;createDebug.enabled=enabled;createDebug.humanize=__webpack_require__(5273);createDebug.destroy=destroy;Object.keys(env).forEach((key=>{createDebug[key]=env[key]}));createDebug.names=[];createDebug.skips=[];createDebug.formatters={};function selectColor(namespace){let hash=0;for(let i=0;i<namespace.length;i++){hash=(hash<<5)-hash+namespace.charCodeAt(i);hash|=0}return createDebug.colors[Math.abs(hash)%createDebug.colors.length]}createDebug.selectColor=selectColor;function createDebug(namespace){let prevTime;let enableOverride=null;let namespacesCache;let enabledCache;function debug(...args){if(!debug.enabled){return}const self=debug;const curr=Number(new Date);const ms=curr-(prevTime||curr);self.diff=ms;self.prev=prevTime;self.curr=curr;prevTime=curr;args[0]=createDebug.coerce(args[0]);if(typeof args[0]!=="string"){args.unshift("%O")}let index=0;args[0]=args[0].replace(/%([a-zA-Z%])/g,((match,format)=>{if(match==="%%"){return"%"}index++;const formatter=createDebug.formatters[format];if(typeof formatter==="function"){const val=args[index];match=formatter.call(self,val);args.splice(index,1);index--}return match}));createDebug.formatArgs.call(self,args);const logFn=self.log||createDebug.log;logFn.apply(self,args)}debug.namespace=namespace;debug.useColors=createDebug.useColors();debug.color=createDebug.selectColor(namespace);debug.extend=extend;debug.destroy=createDebug.destroy;Object.defineProperty(debug,"enabled",{enumerable:true,configurable:false,get:()=>{if(enableOverride!==null){return enableOverride}if(namespacesCache!==createDebug.namespaces){namespacesCache=createDebug.namespaces;enabledCache=createDebug.enabled(namespace)}return enabledCache},set:v=>{enableOverride=v}});if(typeof createDebug.init==="function"){createDebug.init(debug)}return debug}function extend(namespace,delimiter){const newDebug=createDebug(this.namespace+(typeof delimiter==="undefined"?":":delimiter)+namespace);newDebug.log=this.log;return newDebug}function enable(namespaces){createDebug.save(namespaces);createDebug.namespaces=namespaces;createDebug.names=[];createDebug.skips=[];let i;const split=(typeof namespaces==="string"?namespaces:"").split(/[\s,]+/);const len=split.length;for(i=0;i<len;i++){if(!split[i]){continue}namespaces=split[i].replace(/\*/g,".*?");if(namespaces[0]==="-"){createDebug.skips.push(new RegExp("^"+namespaces.slice(1)+"$"))}else{createDebug.names.push(new RegExp("^"+namespaces+"$"))}}}function disable(){const namespaces=[...createDebug.names.map(toNamespace),...createDebug.skips.map(toNamespace).map((namespace=>"-"+namespace))].join(",");createDebug.enable("");return namespaces}function enabled(name){if(name[name.length-1]==="*"){return true}let i;let len;for(i=0,len=createDebug.skips.length;i<len;i++){if(createDebug.skips[i].test(name)){return false}}for(i=0,len=createDebug.names.length;i<len;i++){if(createDebug.names[i].test(name)){return true}}return false}function toNamespace(regexp){return regexp.toString().substring(2,regexp.toString().length-2).replace(/\.\*\?$/,"*")}function coerce(val){if(val instanceof Error){return val.stack||val.message}return val}function destroy(){console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.")}createDebug.enable(createDebug.load());return createDebug}module.exports=setup},324:(module,__unused_webpack_exports,__webpack_require__)=>{if(typeof process==="undefined"||process.type==="renderer"||process.browser===true||process.__nwjs){module.exports=__webpack_require__(5977)}else{module.exports=__webpack_require__(2501)}},2501:(module,exports,__webpack_require__)=>{const tty=__webpack_require__(6224);const util=__webpack_require__(3837);exports.init=init;exports.log=log;exports.formatArgs=formatArgs;exports.save=save;exports.load=load;exports.useColors=useColors;exports.destroy=util.deprecate((()=>{}),"Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.");exports.colors=[6,2,3,4,5,1];try{const supportsColor=__webpack_require__(6162);if(supportsColor&&(supportsColor.stderr||supportsColor).level>=2){exports.colors=[20,21,26,27,32,33,38,39,40,41,42,43,44,45,56,57,62,63,68,69,74,75,76,77,78,79,80,81,92,93,98,99,112,113,128,129,134,135,148,149,160,161,162,163,164,165,166,167,168,169,170,171,172,173,178,179,184,185,196,197,198,199,200,201,202,203,204,205,206,207,208,209,214,215,220,221]}}catch(error){}exports.inspectOpts=Object.keys(process.env).filter((key=>/^debug_/i.test(key))).reduce(((obj,key)=>{const prop=key.substring(6).toLowerCase().replace(/_([a-z])/g,((_,k)=>k.toUpperCase()));let val=process.env[key];if(/^(yes|on|true|enabled)$/i.test(val)){val=true}else if(/^(no|off|false|disabled)$/i.test(val)){val=false}else if(val==="null"){val=null}else{val=Number(val)}obj[prop]=val;return obj}),{});function useColors(){return"colors"in exports.inspectOpts?Boolean(exports.inspectOpts.colors):tty.isatty(process.stderr.fd)}function formatArgs(args){const{namespace:name,useColors}=this;if(useColors){const c=this.color;const colorCode="[3"+(c<8?c:"8;5;"+c);const prefix=`  ${colorCode};1m${name} [0m`;args[0]=prefix+args[0].split("\n").join("\n"+prefix);args.push(colorCode+"m+"+module.exports.humanize(this.diff)+"[0m")}else{args[0]=getDate()+name+" "+args[0]}}function getDate(){if(exports.inspectOpts.hideDate){return""}return(new Date).toISOString()+" "}function log(...args){return process.stderr.write(util.format(...args)+"\n")}function save(namespaces){if(namespaces){process.env.DEBUG=namespaces}else{delete process.env.DEBUG}}function load(){return process.env.DEBUG}function init(debug){debug.inspectOpts={};const keys=Object.keys(exports.inspectOpts);for(let i=0;i<keys.length;i++){debug.inspectOpts[keys[i]]=exports.inspectOpts[keys[i]]}}module.exports=__webpack_require__(3727)(exports);const{formatters}=module.exports;formatters.o=function(v){this.inspectOpts.colors=this.useColors;return util.inspect(v,this.inspectOpts).split("\n").map((str=>str.trim())).join(" ")};formatters.O=function(v){this.inspectOpts.colors=this.useColors;return util.inspect(v,this.inspectOpts)}},1168:(module,__unused_webpack_exports,__webpack_require__)=>{var Stream=__webpack_require__(2781).Stream;var util=__webpack_require__(3837);module.exports=DelayedStream;function DelayedStream(){this.source=null;this.dataSize=0;this.maxDataSize=1024*1024;this.pauseStream=true;this._maxDataSizeExceeded=false;this._released=false;this._bufferedEvents=[]}util.inherits(DelayedStream,Stream);DelayedStream.create=function(source,options){var delayedStream=new this;options=options||{};for(var option in options){delayedStream[option]=options[option]}delayedStream.source=source;var realEmit=source.emit;source.emit=function(){delayedStream._handleEmit(arguments);return realEmit.apply(source,arguments)};source.on("error",(function(){}));if(delayedStream.pauseStream){source.pause()}return delayedStream};Object.defineProperty(DelayedStream.prototype,"readable",{configurable:true,enumerable:true,get:function(){return this.source.readable}});DelayedStream.prototype.setEncoding=function(){return this.source.setEncoding.apply(this.source,arguments)};DelayedStream.prototype.resume=function(){if(!this._released){this.release()}this.source.resume()};DelayedStream.prototype.pause=function(){this.source.pause()};DelayedStream.prototype.release=function(){this._released=true;this._bufferedEvents.forEach(function(args){this.emit.apply(this,args)}.bind(this));this._bufferedEvents=[]};DelayedStream.prototype.pipe=function(){var r=Stream.prototype.pipe.apply(this,arguments);this.resume();return r};DelayedStream.prototype._handleEmit=function(args){if(this._released){this.emit.apply(this,args);return}if(args[0]==="data"){this.dataSize+=args[1].length;this._checkIfMaxDataSizeExceeded()}this._bufferedEvents.push(args)};DelayedStream.prototype._checkIfMaxDataSizeExceeded=function(){if(this._maxDataSizeExceeded){return}if(this.dataSize<=this.maxDataSize){return}this._maxDataSizeExceeded=true;var message="DelayedStream#maxDataSize of "+this.maxDataSize+" bytes exceeded.";this.emit("error",new Error(message))}},9122:(module,__unused_webpack_exports,__webpack_require__)=>{var debug;module.exports=function(){if(!debug){try{debug=__webpack_require__(324)("follow-redirects")}catch(error){}if(typeof debug!=="function"){debug=function(){}}}debug.apply(null,arguments)}},4435:(module,__unused_webpack_exports,__webpack_require__)=>{var url=__webpack_require__(7310);var URL=url.URL;var http=__webpack_require__(3685);var https=__webpack_require__(5687);var Writable=__webpack_require__(2781).Writable;var assert=__webpack_require__(9491);var debug=__webpack_require__(9122);var events=["abort","aborted","connect","error","socket","timeout"];var eventHandlers=Object.create(null);events.forEach((function(event){eventHandlers[event]=function(arg1,arg2,arg3){this._redirectable.emit(event,arg1,arg2,arg3)}}));var InvalidUrlError=createErrorType("ERR_INVALID_URL","Invalid URL",TypeError);var RedirectionError=createErrorType("ERR_FR_REDIRECTION_FAILURE","Redirected request failed");var TooManyRedirectsError=createErrorType("ERR_FR_TOO_MANY_REDIRECTS","Maximum number of redirects exceeded");var MaxBodyLengthExceededError=createErrorType("ERR_FR_MAX_BODY_LENGTH_EXCEEDED","Request body larger than maxBodyLength limit");var WriteAfterEndError=createErrorType("ERR_STREAM_WRITE_AFTER_END","write after end");var destroy=Writable.prototype.destroy||noop;function RedirectableRequest(options,responseCallback){Writable.call(this);this._sanitizeOptions(options);this._options=options;this._ended=false;this._ending=false;this._redirectCount=0;this._redirects=[];this._requestBodyLength=0;this._requestBodyBuffers=[];if(responseCallback){this.on("response",responseCallback)}var self=this;this._onNativeResponse=function(response){self._processResponse(response)};this._performRequest()}RedirectableRequest.prototype=Object.create(Writable.prototype);RedirectableRequest.prototype.abort=function(){destroyRequest(this._currentRequest);this._currentRequest.abort();this.emit("abort")};RedirectableRequest.prototype.destroy=function(error){destroyRequest(this._currentRequest,error);destroy.call(this,error);return this};RedirectableRequest.prototype.write=function(data,encoding,callback){if(this._ending){throw new WriteAfterEndError}if(!isString(data)&&!isBuffer(data)){throw new TypeError("data should be a string, Buffer or Uint8Array")}if(isFunction(encoding)){callback=encoding;encoding=null}if(data.length===0){if(callback){callback()}return}if(this._requestBodyLength+data.length<=this._options.maxBodyLength){this._requestBodyLength+=data.length;this._requestBodyBuffers.push({data,encoding});this._currentRequest.write(data,encoding,callback)}else{this.emit("error",new MaxBodyLengthExceededError);this.abort()}};RedirectableRequest.prototype.end=function(data,encoding,callback){if(isFunction(data)){callback=data;data=encoding=null}else if(isFunction(encoding)){callback=encoding;encoding=null}if(!data){this._ended=this._ending=true;this._currentRequest.end(null,null,callback)}else{var self=this;var currentRequest=this._currentRequest;this.write(data,encoding,(function(){self._ended=true;currentRequest.end(null,null,callback)}));this._ending=true}};RedirectableRequest.prototype.setHeader=function(name,value){this._options.headers[name]=value;this._currentRequest.setHeader(name,value)};RedirectableRequest.prototype.removeHeader=function(name){delete this._options.headers[name];this._currentRequest.removeHeader(name)};RedirectableRequest.prototype.setTimeout=function(msecs,callback){var self=this;function destroyOnTimeout(socket){socket.setTimeout(msecs);socket.removeListener("timeout",socket.destroy);socket.addListener("timeout",socket.destroy)}function startTimer(socket){if(self._timeout){clearTimeout(self._timeout)}self._timeout=setTimeout((function(){self.emit("timeout");clearTimer()}),msecs);destroyOnTimeout(socket)}function clearTimer(){if(self._timeout){clearTimeout(self._timeout);self._timeout=null}self.removeListener("abort",clearTimer);self.removeListener("error",clearTimer);self.removeListener("response",clearTimer);self.removeListener("close",clearTimer);if(callback){self.removeListener("timeout",callback)}if(!self.socket){self._currentRequest.removeListener("socket",startTimer)}}if(callback){this.on("timeout",callback)}if(this.socket){startTimer(this.socket)}else{this._currentRequest.once("socket",startTimer)}this.on("socket",destroyOnTimeout);this.on("abort",clearTimer);this.on("error",clearTimer);this.on("response",clearTimer);this.on("close",clearTimer);return this};["flushHeaders","getHeader","setNoDelay","setSocketKeepAlive"].forEach((function(method){RedirectableRequest.prototype[method]=function(a,b){return this._currentRequest[method](a,b)}}));["aborted","connection","socket"].forEach((function(property){Object.defineProperty(RedirectableRequest.prototype,property,{get:function(){return this._currentRequest[property]}})}));RedirectableRequest.prototype._sanitizeOptions=function(options){if(!options.headers){options.headers={}}if(options.host){if(!options.hostname){options.hostname=options.host}delete options.host}if(!options.pathname&&options.path){var searchPos=options.path.indexOf("?");if(searchPos<0){options.pathname=options.path}else{options.pathname=options.path.substring(0,searchPos);options.search=options.path.substring(searchPos)}}};RedirectableRequest.prototype._performRequest=function(){var protocol=this._options.protocol;var nativeProtocol=this._options.nativeProtocols[protocol];if(!nativeProtocol){this.emit("error",new TypeError("Unsupported protocol "+protocol));return}if(this._options.agents){var scheme=protocol.slice(0,-1);this._options.agent=this._options.agents[scheme]}var request=this._currentRequest=nativeProtocol.request(this._options,this._onNativeResponse);request._redirectable=this;for(var event of events){request.on(event,eventHandlers[event])}this._currentUrl=/^\//.test(this._options.path)?url.format(this._options):this._options.path;if(this._isRedirect){var i=0;var self=this;var buffers=this._requestBodyBuffers;(function writeNext(error){if(request===self._currentRequest){if(error){self.emit("error",error)}else if(i<buffers.length){var buffer=buffers[i++];if(!request.finished){request.write(buffer.data,buffer.encoding,writeNext)}}else if(self._ended){request.end()}}})()}};RedirectableRequest.prototype._processResponse=function(response){var statusCode=response.statusCode;if(this._options.trackRedirects){this._redirects.push({url:this._currentUrl,headers:response.headers,statusCode})}var location=response.headers.location;if(!location||this._options.followRedirects===false||statusCode<300||statusCode>=400){response.responseUrl=this._currentUrl;response.redirects=this._redirects;this.emit("response",response);this._requestBodyBuffers=[];return}destroyRequest(this._currentRequest);response.destroy();if(++this._redirectCount>this._options.maxRedirects){this.emit("error",new TooManyRedirectsError);return}var requestHeaders;var beforeRedirect=this._options.beforeRedirect;if(beforeRedirect){requestHeaders=Object.assign({Host:response.req.getHeader("host")},this._options.headers)}var method=this._options.method;if((statusCode===301||statusCode===302)&&this._options.method==="POST"||statusCode===303&&!/^(?:GET|HEAD)$/.test(this._options.method)){this._options.method="GET";this._requestBodyBuffers=[];removeMatchingHeaders(/^content-/i,this._options.headers)}var currentHostHeader=removeMatchingHeaders(/^host$/i,this._options.headers);var currentUrlParts=url.parse(this._currentUrl);var currentHost=currentHostHeader||currentUrlParts.host;var currentUrl=/^\w+:/.test(location)?this._currentUrl:url.format(Object.assign(currentUrlParts,{host:currentHost}));var redirectUrl;try{redirectUrl=url.resolve(currentUrl,location)}catch(cause){this.emit("error",new RedirectionError({cause}));return}debug("redirecting to",redirectUrl);this._isRedirect=true;var redirectUrlParts=url.parse(redirectUrl);Object.assign(this._options,redirectUrlParts);if(redirectUrlParts.protocol!==currentUrlParts.protocol&&redirectUrlParts.protocol!=="https:"||redirectUrlParts.host!==currentHost&&!isSubdomain(redirectUrlParts.host,currentHost)){removeMatchingHeaders(/^(?:authorization|cookie)$/i,this._options.headers)}if(isFunction(beforeRedirect)){var responseDetails={headers:response.headers,statusCode};var requestDetails={url:currentUrl,method,headers:requestHeaders};try{beforeRedirect(this._options,responseDetails,requestDetails)}catch(err){this.emit("error",err);return}this._sanitizeOptions(this._options)}try{this._performRequest()}catch(cause){this.emit("error",new RedirectionError({cause}))}};function wrap(protocols){var exports={maxRedirects:21,maxBodyLength:10*1024*1024};var nativeProtocols={};Object.keys(protocols).forEach((function(scheme){var protocol=scheme+":";var nativeProtocol=nativeProtocols[protocol]=protocols[scheme];var wrappedProtocol=exports[scheme]=Object.create(nativeProtocol);function request(input,options,callback){if(isString(input)){var parsed;try{parsed=urlToOptions(new URL(input))}catch(err){parsed=url.parse(input)}if(!isString(parsed.protocol)){throw new InvalidUrlError({input})}input=parsed}else if(URL&&input instanceof URL){input=urlToOptions(input)}else{callback=options;options=input;input={protocol}}if(isFunction(options)){callback=options;options=null}options=Object.assign({maxRedirects:exports.maxRedirects,maxBodyLength:exports.maxBodyLength},input,options);options.nativeProtocols=nativeProtocols;if(!isString(options.host)&&!isString(options.hostname)){options.hostname="::1"}assert.equal(options.protocol,protocol,"protocol mismatch");debug("options",options);return new RedirectableRequest(options,callback)}function get(input,options,callback){var wrappedRequest=wrappedProtocol.request(input,options,callback);wrappedRequest.end();return wrappedRequest}Object.defineProperties(wrappedProtocol,{request:{value:request,configurable:true,enumerable:true,writable:true},get:{value:get,configurable:true,enumerable:true,writable:true}})}));return exports}function noop(){}function urlToOptions(urlObject){var options={protocol:urlObject.protocol,hostname:urlObject.hostname.startsWith("[")?urlObject.hostname.slice(1,-1):urlObject.hostname,hash:urlObject.hash,search:urlObject.search,pathname:urlObject.pathname,path:urlObject.pathname+urlObject.search,href:urlObject.href};if(urlObject.port!==""){options.port=Number(urlObject.port)}return options}function removeMatchingHeaders(regex,headers){var lastValue;for(var header in headers){if(regex.test(header)){lastValue=headers[header];delete headers[header]}}return lastValue===null||typeof lastValue==="undefined"?undefined:String(lastValue).trim()}function createErrorType(code,message,baseClass){function CustomError(properties){Error.captureStackTrace(this,this.constructor);Object.assign(this,properties||{});this.code=code;this.message=this.cause?message+": "+this.cause.message:message}CustomError.prototype=new(baseClass||Error);CustomError.prototype.constructor=CustomError;CustomError.prototype.name="Error ["+code+"]";return CustomError}function destroyRequest(request,error){for(var event of events){request.removeListener(event,eventHandlers[event])}request.on("error",noop);request.destroy(error)}function isSubdomain(subdomain,domain){assert(isString(subdomain)&&isString(domain));var dot=subdomain.length-domain.length-1;return dot>0&&subdomain[dot]==="."&&subdomain.endsWith(domain)}function isString(value){return typeof value==="string"||value instanceof String}function isFunction(value){return typeof value==="function"}function isBuffer(value){return typeof value==="object"&&"length"in value}module.exports=wrap({http,https});module.exports.wrap=wrap},486:(module,__unused_webpack_exports,__webpack_require__)=>{var CombinedStream=__webpack_require__(7787);var util=__webpack_require__(3837);var path=__webpack_require__(1017);var http=__webpack_require__(3685);var https=__webpack_require__(5687);var parseUrl=__webpack_require__(7310).parse;var fs=__webpack_require__(7147);var Stream=__webpack_require__(2781).Stream;var mime=__webpack_require__(8903);var asynckit=__webpack_require__(8450);var populate=__webpack_require__(4060);module.exports=FormData;util.inherits(FormData,CombinedStream);function FormData(options){if(!(this instanceof FormData)){return new FormData(options)}this._overheadLength=0;this._valueLength=0;this._valuesToMeasure=[];CombinedStream.call(this);options=options||{};for(var option in options){this[option]=options[option]}}FormData.LINE_BREAK="\r\n";FormData.DEFAULT_CONTENT_TYPE="application/octet-stream";FormData.prototype.append=function(field,value,options){options=options||{};if(typeof options=="string"){options={filename:options}}var append=CombinedStream.prototype.append.bind(this);if(typeof value=="number"){value=""+value}if(util.isArray(value)){this._error(new Error("Arrays are not supported."));return}var header=this._multiPartHeader(field,value,options);var footer=this._multiPartFooter();append(header);append(value);append(footer);this._trackLength(header,value,options)};FormData.prototype._trackLength=function(header,value,options){var valueLength=0;if(options.knownLength!=null){valueLength+=+options.knownLength}else if(Buffer.isBuffer(value)){valueLength=value.length}else if(typeof value==="string"){valueLength=Buffer.byteLength(value)}this._valueLength+=valueLength;this._overheadLength+=Buffer.byteLength(header)+FormData.LINE_BREAK.length;if(!value||!value.path&&!(value.readable&&value.hasOwnProperty("httpVersion"))&&!(value instanceof Stream)){return}if(!options.knownLength){this._valuesToMeasure.push(value)}};FormData.prototype._lengthRetriever=function(value,callback){if(value.hasOwnProperty("fd")){if(value.end!=undefined&&value.end!=Infinity&&value.start!=undefined){callback(null,value.end+1-(value.start?value.start:0))}else{fs.stat(value.path,(function(err,stat){var fileSize;if(err){callback(err);return}fileSize=stat.size-(value.start?value.start:0);callback(null,fileSize)}))}}else if(value.hasOwnProperty("httpVersion")){callback(null,+value.headers["content-length"])}else if(value.hasOwnProperty("httpModule")){value.on("response",(function(response){value.pause();callback(null,+response.headers["content-length"])}));value.resume()}else{callback("Unknown stream")}};FormData.prototype._multiPartHeader=function(field,value,options){if(typeof options.header=="string"){return options.header}var contentDisposition=this._getContentDisposition(value,options);var contentType=this._getContentType(value,options);var contents="";var headers={"Content-Disposition":["form-data",'name="'+field+'"'].concat(contentDisposition||[]),"Content-Type":[].concat(contentType||[])};if(typeof options.header=="object"){populate(headers,options.header)}var header;for(var prop in headers){if(!headers.hasOwnProperty(prop))continue;header=headers[prop];if(header==null){continue}if(!Array.isArray(header)){header=[header]}if(header.length){contents+=prop+": "+header.join("; ")+FormData.LINE_BREAK}}return"--"+this.getBoundary()+FormData.LINE_BREAK+contents+FormData.LINE_BREAK};FormData.prototype._getContentDisposition=function(value,options){var filename,contentDisposition;if(typeof options.filepath==="string"){filename=path.normalize(options.filepath).replace(/\\/g,"/")}else if(options.filename||value.name||value.path){filename=path.basename(options.filename||value.name||value.path)}else if(value.readable&&value.hasOwnProperty("httpVersion")){filename=path.basename(value.client._httpMessage.path||"")}if(filename){contentDisposition='filename="'+filename+'"'}return contentDisposition};FormData.prototype._getContentType=function(value,options){var contentType=options.contentType;if(!contentType&&value.name){contentType=mime.lookup(value.name)}if(!contentType&&value.path){contentType=mime.lookup(value.path)}if(!contentType&&value.readable&&value.hasOwnProperty("httpVersion")){contentType=value.headers["content-type"]}if(!contentType&&(options.filepath||options.filename)){contentType=mime.lookup(options.filepath||options.filename)}if(!contentType&&typeof value=="object"){contentType=FormData.DEFAULT_CONTENT_TYPE}return contentType};FormData.prototype._multiPartFooter=function(){return function(next){var footer=FormData.LINE_BREAK;var lastPart=this._streams.length===0;if(lastPart){footer+=this._lastBoundary()}next(footer)}.bind(this)};FormData.prototype._lastBoundary=function(){return"--"+this.getBoundary()+"--"+FormData.LINE_BREAK};FormData.prototype.getHeaders=function(userHeaders){var header;var formHeaders={"content-type":"multipart/form-data; boundary="+this.getBoundary()};for(header in userHeaders){if(userHeaders.hasOwnProperty(header)){formHeaders[header.toLowerCase()]=userHeaders[header]}}return formHeaders};FormData.prototype.setBoundary=function(boundary){this._boundary=boundary};FormData.prototype.getBoundary=function(){if(!this._boundary){this._generateBoundary()}return this._boundary};FormData.prototype.getBuffer=function(){var dataBuffer=new Buffer.alloc(0);var boundary=this.getBoundary();for(var i=0,len=this._streams.length;i<len;i++){if(typeof this._streams[i]!=="function"){if(Buffer.isBuffer(this._streams[i])){dataBuffer=Buffer.concat([dataBuffer,this._streams[i]])}else{dataBuffer=Buffer.concat([dataBuffer,Buffer.from(this._streams[i])])}if(typeof this._streams[i]!=="string"||this._streams[i].substring(2,boundary.length+2)!==boundary){dataBuffer=Buffer.concat([dataBuffer,Buffer.from(FormData.LINE_BREAK)])}}}return Buffer.concat([dataBuffer,Buffer.from(this._lastBoundary())])};FormData.prototype._generateBoundary=function(){var boundary="--------------------------";for(var i=0;i<24;i++){boundary+=Math.floor(Math.random()*10).toString(16)}this._boundary=boundary};FormData.prototype.getLengthSync=function(){var knownLength=this._overheadLength+this._valueLength;if(this._streams.length){knownLength+=this._lastBoundary().length}if(!this.hasKnownLength()){this._error(new Error("Cannot calculate proper length in synchronous way."))}return knownLength};FormData.prototype.hasKnownLength=function(){var hasKnownLength=true;if(this._valuesToMeasure.length){hasKnownLength=false}return hasKnownLength};FormData.prototype.getLength=function(cb){var knownLength=this._overheadLength+this._valueLength;if(this._streams.length){knownLength+=this._lastBoundary().length}if(!this._valuesToMeasure.length){process.nextTick(cb.bind(this,null,knownLength));return}asynckit.parallel(this._valuesToMeasure,this._lengthRetriever,(function(err,values){if(err){cb(err);return}values.forEach((function(length){knownLength+=length}));cb(null,knownLength)}))};FormData.prototype.submit=function(params,cb){var request,options,defaults={method:"post"};if(typeof params=="string"){params=parseUrl(params);options=populate({port:params.port,path:params.pathname,host:params.hostname,protocol:params.protocol},defaults)}else{options=populate(params,defaults);if(!options.port){options.port=options.protocol=="https:"?443:80}}options.headers=this.getHeaders(params.headers);if(options.protocol=="https:"){request=https.request(options)}else{request=http.request(options)}this.getLength(function(err,length){if(err&&err!=="Unknown stream"){this._error(err);return}if(length){request.setHeader("Content-Length",length)}this.pipe(request);if(cb){var onResponse;var callback=function(error,responce){request.removeListener("error",callback);request.removeListener("response",onResponse);return cb.call(this,error,responce)};onResponse=callback.bind(this,null);request.on("error",callback);request.on("response",onResponse)}}.bind(this));return request};FormData.prototype._error=function(err){if(!this.error){this.error=err;this.pause();this.emit("error",err)}};FormData.prototype.toString=function(){return"[object FormData]"}},4060:module=>{module.exports=function(dst,src){Object.keys(src).forEach((function(prop){dst[prop]=dst[prop]||src[prop]}));return dst}},4325:module=>{"use strict";module.exports=(flag,argv=process.argv)=>{const prefix=flag.startsWith("-")?"":flag.length===1?"-":"--";const position=argv.indexOf(prefix+flag);const terminatorPosition=argv.indexOf("--");return position!==-1&&(terminatorPosition===-1||position<terminatorPosition)}},1746:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";const Clone=__webpack_require__(3737);const Common=__webpack_require__(6615);const internals={annotations:Symbol("annotations")};exports.error=function(stripColorCodes){if(!this._original||typeof this._original!=="object"){return this.details[0].message}const redFgEscape=stripColorCodes?"":"[31m";const redBgEscape=stripColorCodes?"":"[41m";const endColor=stripColorCodes?"":"[0m";const obj=Clone(this._original);for(let i=this.details.length-1;i>=0;--i){const pos=i+1;const error=this.details[i];const path=error.path;let node=obj;for(let j=0;;++j){const seg=path[j];if(Common.isSchema(node)){node=node.clone()}if(j+1<path.length&&typeof node[seg]!=="string"){node=node[seg]}else{const refAnnotations=node[internals.annotations]||{errors:{},missing:{}};node[internals.annotations]=refAnnotations;const cacheKey=seg||error.context.key;if(node[seg]!==undefined){refAnnotations.errors[cacheKey]=refAnnotations.errors[cacheKey]||[];refAnnotations.errors[cacheKey].push(pos)}else{refAnnotations.missing[cacheKey]=pos}break}}}const replacers={key:/_\$key\$_([, \d]+)_\$end\$_"/g,missing:/"_\$miss\$_([^|]+)\|(\d+)_\$end\$_": "__missing__"/g,arrayIndex:/\s*"_\$idx\$_([, \d]+)_\$end\$_",?\n(.*)/g,specials:/"\[(NaN|Symbol.*|-?Infinity|function.*|\(.*)]"/g};let message=internals.safeStringify(obj,2).replace(replacers.key,(($0,$1)=>`" ${redFgEscape}[${$1}]${endColor}`)).replace(replacers.missing,(($0,$1,$2)=>`${redBgEscape}"${$1}"${endColor}${redFgEscape} [${$2}]: -- missing --${endColor}`)).replace(replacers.arrayIndex,(($0,$1,$2)=>`\n${$2} ${redFgEscape}[${$1}]${endColor}`)).replace(replacers.specials,(($0,$1)=>$1));message=`${message}\n${redFgEscape}`;for(let i=0;i<this.details.length;++i){const pos=i+1;message=`${message}\n[${pos}] ${this.details[i].message}`}message=message+endColor;return message};internals.safeStringify=function(obj,spaces){return JSON.stringify(obj,internals.serializer(),spaces)};internals.serializer=function(){const keys=[];const stack=[];const cycleReplacer=(key,value)=>{if(stack[0]===value){return"[Circular ~]"}return"[Circular ~."+keys.slice(0,stack.indexOf(value)).join(".")+"]"};return function(key,value){if(stack.length>0){const thisPos=stack.indexOf(this);if(~thisPos){stack.length=thisPos+1;keys.length=thisPos+1;keys[thisPos]=key}else{stack.push(this);keys.push(key)}if(~stack.indexOf(value)){value=cycleReplacer.call(this,key,value)}}else{stack.push(value)}if(value){const annotations=value[internals.annotations];if(annotations){if(Array.isArray(value)){const annotated=[];for(let i=0;i<value.length;++i){if(annotations.errors[i]){annotated.push(`_$idx$_${annotations.errors[i].sort().join(", ")}_$end$_`)}annotated.push(value[i])}value=annotated}else{for(const errorKey in annotations.errors){value[`${errorKey}_$key$_${annotations.errors[errorKey].sort().join(", ")}_$end$_`]=value[errorKey];value[errorKey]=undefined}for(const missingKey in annotations.missing){value[`_$miss$_${missingKey}|${annotations.missing[missingKey]}_$end$_`]="__missing__"}}return value}}if(value===Infinity||value===-Infinity||Number.isNaN(value)||typeof value==="function"||typeof value==="symbol"){return"["+value.toString()+"]"}return value}}},1785:(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";const Assert=__webpack_require__(9647);const Clone=__webpack_require__(3737);const DeepEqual=__webpack_require__(5245);const Merge=__webpack_require__(7093);const Cache=__webpack_require__(637);const Common=__webpack_require__(6615);const Compile=__webpack_require__(2194);const Errors=__webpack_require__(9963);const Extend=__webpack_require__(4282);const Manifest=__webpack_require__(5919);const Messages=__webpack_require__(4941);const Modify=__webpack_require__(6973);const Ref=__webpack_require__(5263);const Trace=__webpack_require__(5516);const Validator=__webpack_require__(6652);const Values=__webpack_require__(6417);const internals={};internals.Base=class{constructor(type){this.type=type;this.$_root=null;this._definition={};this._reset()}_reset(){this._ids=new Modify.Ids;this._preferences=null;this._refs=new Ref.Manager;this._cache=null;this._valids=null;this._invalids=null;this._flags={};this._rules=[];this._singleRules=new Map;this.$_terms={};this.$_temp={ruleset:null,whens:{}}}describe(){Assert(typeof Manifest.describe==="function","Manifest functionality disabled");return Manifest.describe(this)}allow(...values){Common.verifyFlat(values,"allow");return this._values(values,"_valids")}alter(targets){Assert(targets&&typeof targets==="object"&&!Array.isArray(targets),"Invalid targets argument");Assert(!this._inRuleset(),"Cannot set alterations inside a ruleset");const obj=this.clone();obj.$_terms.alterations=obj.$_terms.alterations||[];for(const target in targets){const adjuster=targets[target];Assert(typeof adjuster==="function","Alteration adjuster for",target,"must be a function");obj.$_terms.alterations.push({target,adjuster})}obj.$_temp.ruleset=false;return obj}artifact(id){Assert(id!==undefined,"Artifact cannot be undefined");Assert(!this._cache,"Cannot set an artifact with a rule cache");return this.$_setFlag("artifact",id)}cast(to){Assert(to===false||typeof to==="string","Invalid to value");Assert(to===false||this._definition.cast[to],"Type",this.type,"does not support casting to",to);return this.$_setFlag("cast",to===false?undefined:to)}default(value,options){return this._default("default",value,options)}description(desc){Assert(desc&&typeof desc==="string","Description must be a non-empty string");return this.$_setFlag("description",desc)}empty(schema){const obj=this.clone();if(schema!==undefined){schema=obj.$_compile(schema,{override:false})}return obj.$_setFlag("empty",schema,{clone:false})}error(err){Assert(err,"Missing error");Assert(err instanceof Error||typeof err==="function","Must provide a valid Error object or a function");return this.$_setFlag("error",err)}example(example,options={}){Assert(example!==undefined,"Missing example");Common.assertOptions(options,["override"]);return this._inner("examples",example,{single:true,override:options.override})}external(method,description){if(typeof method==="object"){Assert(!description,"Cannot combine options with description");description=method.description;method=method.method}Assert(typeof method==="function","Method must be a function");Assert(description===undefined||description&&typeof description==="string","Description must be a non-empty string");return this._inner("externals",{method,description},{single:true})}failover(value,options){return this._default("failover",value,options)}forbidden(){return this.presence("forbidden")}id(id){if(!id){return this.$_setFlag("id",undefined)}Assert(typeof id==="string","id must be a non-empty string");Assert(/^[^\.]+$/.test(id),"id cannot contain period character");return this.$_setFlag("id",id)}invalid(...values){return this._values(values,"_invalids")}label(name){Assert(name&&typeof name==="string","Label name must be a non-empty string");return this.$_setFlag("label",name)}meta(meta){Assert(meta!==undefined,"Meta cannot be undefined");return this._inner("metas",meta,{single:true})}note(...notes){Assert(notes.length,"Missing notes");for(const note of notes){Assert(note&&typeof note==="string","Notes must be non-empty strings")}return this._inner("notes",notes)}only(mode=true){Assert(typeof mode==="boolean","Invalid mode:",mode);return this.$_setFlag("only",mode)}optional(){return this.presence("optional")}prefs(prefs){Assert(prefs,"Missing preferences");Assert(prefs.context===undefined,"Cannot override context");Assert(prefs.externals===undefined,"Cannot override externals");Assert(prefs.warnings===undefined,"Cannot override warnings");Assert(prefs.debug===undefined,"Cannot override debug");Common.checkPreferences(prefs);const obj=this.clone();obj._preferences=Common.preferences(obj._preferences,prefs);return obj}presence(mode){Assert(["optional","required","forbidden"].includes(mode),"Unknown presence mode",mode);return this.$_setFlag("presence",mode)}raw(enabled=true){return this.$_setFlag("result",enabled?"raw":undefined)}result(mode){Assert(["raw","strip"].includes(mode),"Unknown result mode",mode);return this.$_setFlag("result",mode)}required(){return this.presence("required")}strict(enabled){const obj=this.clone();const convert=enabled===undefined?false:!enabled;obj._preferences=Common.preferences(obj._preferences,{convert});return obj}strip(enabled=true){return this.$_setFlag("result",enabled?"strip":undefined)}tag(...tags){Assert(tags.length,"Missing tags");for(const tag of tags){Assert(tag&&typeof tag==="string","Tags must be non-empty strings")}return this._inner("tags",tags)}unit(name){Assert(name&&typeof name==="string","Unit name must be a non-empty string");return this.$_setFlag("unit",name)}valid(...values){Common.verifyFlat(values,"valid");const obj=this.allow(...values);obj.$_setFlag("only",!!obj._valids,{clone:false});return obj}when(condition,options){const obj=this.clone();if(!obj.$_terms.whens){obj.$_terms.whens=[]}const when=Compile.when(obj,condition,options);if(!["any","link"].includes(obj.type)){const conditions=when.is?[when]:when.switch;for(const item of conditions){Assert(!item.then||item.then.type==="any"||item.then.type===obj.type,"Cannot combine",obj.type,"with",item.then&&item.then.type);Assert(!item.otherwise||item.otherwise.type==="any"||item.otherwise.type===obj.type,"Cannot combine",obj.type,"with",item.otherwise&&item.otherwise.type)}}obj.$_terms.whens.push(when);return obj.$_mutateRebuild()}cache(cache){Assert(!this._inRuleset(),"Cannot set caching inside a ruleset");Assert(!this._cache,"Cannot override schema cache");Assert(this._flags.artifact===undefined,"Cannot cache a rule with an artifact");const obj=this.clone();obj._cache=cache||Cache.provider.provision();obj.$_temp.ruleset=false;return obj}clone(){const obj=Object.create(Object.getPrototypeOf(this));return this._assign(obj)}concat(source){Assert(Common.isSchema(source),"Invalid schema object");Assert(this.type==="any"||source.type==="any"||source.type===this.type,"Cannot merge type",this.type,"with another type:",source.type);Assert(!this._inRuleset(),"Cannot concatenate onto a schema with open ruleset");Assert(!source._inRuleset(),"Cannot concatenate a schema with open ruleset");let obj=this.clone();if(this.type==="any"&&source.type!=="any"){const tmpObj=source.clone();for(const key of Object.keys(obj)){if(key!=="type"){tmpObj[key]=obj[key]}}obj=tmpObj}obj._ids.concat(source._ids);obj._refs.register(source,Ref.toSibling);obj._preferences=obj._preferences?Common.preferences(obj._preferences,source._preferences):source._preferences;obj._valids=Values.merge(obj._valids,source._valids,source._invalids);obj._invalids=Values.merge(obj._invalids,source._invalids,source._valids);for(const name of source._singleRules.keys()){if(obj._singleRules.has(name)){obj._rules=obj._rules.filter((target=>target.keep||target.name!==name));obj._singleRules.delete(name)}}for(const test of source._rules){if(!source._definition.rules[test.method].multi){obj._singleRules.set(test.name,test)}obj._rules.push(test)}if(obj._flags.empty&&source._flags.empty){obj._flags.empty=obj._flags.empty.concat(source._flags.empty);const flags=Object.assign({},source._flags);delete flags.empty;Merge(obj._flags,flags)}else if(source._flags.empty){obj._flags.empty=source._flags.empty;const flags=Object.assign({},source._flags);delete flags.empty;Merge(obj._flags,flags)}else{Merge(obj._flags,source._flags)}for(const key in source.$_terms){const terms=source.$_terms[key];if(!terms){if(!obj.$_terms[key]){obj.$_terms[key]=terms}continue}if(!obj.$_terms[key]){obj.$_terms[key]=terms.slice();continue}obj.$_terms[key]=obj.$_terms[key].concat(terms)}if(this.$_root._tracer){this.$_root._tracer._combine(obj,[this,source])}return obj.$_mutateRebuild()}extend(options){Assert(!options.base,"Cannot extend type with another base");return Extend.type(this,options)}extract(path){path=Array.isArray(path)?path:path.split(".");return this._ids.reach(path)}fork(paths,adjuster){Assert(!this._inRuleset(),"Cannot fork inside a ruleset");let obj=this;for(let path of[].concat(paths)){path=Array.isArray(path)?path:path.split(".");obj=obj._ids.fork(path,adjuster,obj)}obj.$_temp.ruleset=false;return obj}rule(options){const def=this._definition;Common.assertOptions(options,Object.keys(def.modifiers));Assert(this.$_temp.ruleset!==false,"Cannot apply rules to empty ruleset or the last rule added does not support rule properties");const start=this.$_temp.ruleset===null?this._rules.length-1:this.$_temp.ruleset;Assert(start>=0&&start<this._rules.length,"Cannot apply rules to empty ruleset");const obj=this.clone();for(let i=start;i<obj._rules.length;++i){const original=obj._rules[i];const rule=Clone(original);for(const name in options){def.modifiers[name](rule,options[name]);Assert(rule.name===original.name,"Cannot change rule name")}obj._rules[i]=rule;if(obj._singleRules.get(rule.name)===original){obj._singleRules.set(rule.name,rule)}}obj.$_temp.ruleset=false;return obj.$_mutateRebuild()}get ruleset(){Assert(!this._inRuleset(),"Cannot start a new ruleset without closing the previous one");const obj=this.clone();obj.$_temp.ruleset=obj._rules.length;return obj}get $(){return this.ruleset}tailor(targets){targets=[].concat(targets);Assert(!this._inRuleset(),"Cannot tailor inside a ruleset");let obj=this;if(this.$_terms.alterations){for(const{target,adjuster}of this.$_terms.alterations){if(targets.includes(target)){obj=adjuster(obj);Assert(Common.isSchema(obj),"Alteration adjuster for",target,"failed to return a schema object")}}}obj=obj.$_modify({each:item=>item.tailor(targets),ref:false});obj.$_temp.ruleset=false;return obj.$_mutateRebuild()}tracer(){return Trace.location?Trace.location(this):this}validate(value,options){return Validator.entry(value,this,options)}validateAsync(value,options){return Validator.entryAsync(value,this,options)}$_addRule(options){if(typeof options==="string"){options={name:options}}Assert(options&&typeof options==="object","Invalid options");Assert(options.name&&typeof options.name==="string","Invalid rule name");for(const key in options){Assert(key[0]!=="_","Cannot set private rule properties")}const rule=Object.assign({},options);rule._resolve=[];rule.method=rule.method||rule.name;const definition=this._definition.rules[rule.method];const args=rule.args;Assert(definition,"Unknown rule",rule.method);const obj=this.clone();if(args){Assert(Object.keys(args).length===1||Object.keys(args).length===this._definition.rules[rule.name].args.length,"Invalid rule definition for",this.type,rule.name);for(const key in args){let arg=args[key];if(definition.argsByName){const resolver=definition.argsByName.get(key);if(resolver.ref&&Common.isResolvable(arg)){rule._resolve.push(key);obj.$_mutateRegister(arg)}else{if(resolver.normalize){arg=resolver.normalize(arg);args[key]=arg}if(resolver.assert){const error=Common.validateArg(arg,key,resolver);Assert(!error,error,"or reference")}}}if(arg===undefined){delete args[key];continue}args[key]=arg}}if(!definition.multi){obj._ruleRemove(rule.name,{clone:false});obj._singleRules.set(rule.name,rule)}if(obj.$_temp.ruleset===false){obj.$_temp.ruleset=null}if(definition.priority){obj._rules.unshift(rule)}else{obj._rules.push(rule)}return obj}$_compile(schema,options){return Compile.schema(this.$_root,schema,options)}$_createError(code,value,local,state,prefs,options={}){const flags=options.flags!==false?this._flags:{};const messages=options.messages?Messages.merge(this._definition.messages,options.messages):this._definition.messages;return new Errors.Report(code,value,local,flags,messages,state,prefs)}$_getFlag(name){return this._flags[name]}$_getRule(name){return this._singleRules.get(name)}$_mapLabels(path){path=Array.isArray(path)?path:path.split(".");return this._ids.labels(path)}$_match(value,state,prefs,overrides){prefs=Object.assign({},prefs);prefs.abortEarly=true;prefs._externals=false;state.snapshot();const result=!Validator.validate(value,this,state,prefs,overrides).errors;state.restore();return result}$_modify(options){Common.assertOptions(options,["each","once","ref","schema"]);return Modify.schema(this,options)||this}$_mutateRebuild(){Assert(!this._inRuleset(),"Cannot add this rule inside a ruleset");this._refs.reset();this._ids.reset();const each=(item,{source,name,path,key})=>{const family=this._definition[source][name]&&this._definition[source][name].register;if(family!==false){this.$_mutateRegister(item,{family,key})}};this.$_modify({each});if(this._definition.rebuild){this._definition.rebuild(this)}this.$_temp.ruleset=false;return this}$_mutateRegister(schema,{family,key}={}){this._refs.register(schema,family);this._ids.register(schema,{key})}$_property(name){return this._definition.properties[name]}$_reach(path){return this._ids.reach(path)}$_rootReferences(){return this._refs.roots()}$_setFlag(name,value,options={}){Assert(name[0]==="_"||!this._inRuleset(),"Cannot set flag inside a ruleset");const flag=this._definition.flags[name]||{};if(DeepEqual(value,flag.default)){value=undefined}if(DeepEqual(value,this._flags[name])){return this}const obj=options.clone!==false?this.clone():this;if(value!==undefined){obj._flags[name]=value;obj.$_mutateRegister(value)}else{delete obj._flags[name]}if(name[0]!=="_"){obj.$_temp.ruleset=false}return obj}$_parent(method,...args){return this[method][Common.symbols.parent].call(this,...args)}$_validate(value,state,prefs){return Validator.validate(value,this,state,prefs)}_assign(target){target.type=this.type;target.$_root=this.$_root;target.$_temp=Object.assign({},this.$_temp);target.$_temp.whens={};target._ids=this._ids.clone();target._preferences=this._preferences;target._valids=this._valids&&this._valids.clone();target._invalids=this._invalids&&this._invalids.clone();target._rules=this._rules.slice();target._singleRules=Clone(this._singleRules,{shallow:true});target._refs=this._refs.clone();target._flags=Object.assign({},this._flags);target._cache=null;target.$_terms={};for(const key in this.$_terms){target.$_terms[key]=this.$_terms[key]?this.$_terms[key].slice():null}target.$_super={};for(const override in this.$_super){target.$_super[override]=this._super[override].bind(target)}return target}_bare(){const obj=this.clone();obj._reset();const terms=obj._definition.terms;for(const name in terms){const term=terms[name];obj.$_terms[name]=term.init}return obj.$_mutateRebuild()}_default(flag,value,options={}){Common.assertOptions(options,"literal");Assert(value!==undefined,"Missing",flag,"value");Assert(typeof value==="function"||!options.literal,"Only function value supports literal option");if(typeof value==="function"&&options.literal){value={[Common.symbols.literal]:true,literal:value}}const obj=this.$_setFlag(flag,value);return obj}_generate(value,state,prefs){if(!this.$_terms.whens){return{schema:this}}const whens=[];const ids=[];for(let i=0;i<this.$_terms.whens.length;++i){const when=this.$_terms.whens[i];if(when.concat){whens.push(when.concat);ids.push(`${i}.concat`);continue}const input=when.ref?when.ref.resolve(value,state,prefs):value;const tests=when.is?[when]:when.switch;const before=ids.length;for(let j=0;j<tests.length;++j){const{is,then,otherwise}=tests[j];const baseId=`${i}${when.switch?"."+j:""}`;if(is.$_match(input,state.nest(is,`${baseId}.is`),prefs)){if(then){const localState=state.localize([...state.path,`${baseId}.then`],state.ancestors,state.schemas);const{schema:generated,id}=then._generate(value,localState,prefs);whens.push(generated);ids.push(`${baseId}.then${id?`(${id})`:""}`);break}}else if(otherwise){const localState=state.localize([...state.path,`${baseId}.otherwise`],state.ancestors,state.schemas);const{schema:generated,id}=otherwise._generate(value,localState,prefs);whens.push(generated);ids.push(`${baseId}.otherwise${id?`(${id})`:""}`);break}}if(when.break&&ids.length>before){break}}const id=ids.join(", ");state.mainstay.tracer.debug(state,"rule","when",id);if(!id){return{schema:this}}if(!state.mainstay.tracer.active&&this.$_temp.whens[id]){return{schema:this.$_temp.whens[id],id}}let obj=this;if(this._definition.generate){obj=this._definition.generate(this,value,state,prefs)}for(const when of whens){obj=obj.concat(when)}if(this.$_root._tracer){this.$_root._tracer._combine(obj,[this,...whens])}this.$_temp.whens[id]=obj;return{schema:obj,id}}_inner(type,values,options={}){Assert(!this._inRuleset(),`Cannot set ${type} inside a ruleset`);const obj=this.clone();if(!obj.$_terms[type]||options.override){obj.$_terms[type]=[]}if(options.single){obj.$_terms[type].push(values)}else{obj.$_terms[type].push(...values)}obj.$_temp.ruleset=false;return obj}_inRuleset(){return this.$_temp.ruleset!==null&&this.$_temp.ruleset!==false}_ruleRemove(name,options={}){if(!this._singleRules.has(name)){return this}const obj=options.clone!==false?this.clone():this;obj._singleRules.delete(name);const filtered=[];for(let i=0;i<obj._rules.length;++i){const test=obj._rules[i];if(test.name===name&&!test.keep){if(obj._inRuleset()&&i<obj.$_temp.ruleset){--obj.$_temp.ruleset}continue}filtered.push(test)}obj._rules=filtered;return obj}_values(values,key){Common.verifyFlat(values,key.slice(1,-1));const obj=this.clone();const override=values[0]===Common.symbols.override;if(override){values=values.slice(1)}if(!obj[key]&&values.length){obj[key]=new Values}else if(override){obj[key]=values.length?new Values:null;obj.$_mutateRebuild()}if(!obj[key]){return obj}if(override){obj[key].override()}for(const value of values){Assert(value!==undefined,"Cannot call allow/valid/invalid with undefined");Assert(value!==Common.symbols.override,"Override must be the first value");const other=key==="_invalids"?"_valids":"_invalids";if(obj[other]){obj[other].remove(value);if(!obj[other].length){Assert(key==="_valids"||!obj._flags.only,"Setting invalid value",value,"leaves schema rejecting all values due to previous valid rule");obj[other]=null}}obj[key].add(value,obj._refs)}return obj}};internals.Base.prototype[Common.symbols.any]={version:Common.version,compile:Compile.compile,root:"$_root"};internals.Base.prototype.isImmutable=true;internals.Base.prototype.deny=internals.Base.prototype.invalid;internals.Base.prototype.disallow=internals.Base.prototype.invalid;internals.Base.prototype.equal=internals.Base.prototype.valid;internals.Base.prototype.exist=internals.Base.prototype.required;internals.Base.prototype.not=internals.Base.prototype.invalid;internals.Base.prototype.options=internals.Base.prototype.prefs;internals.Base.prototype.preferences=internals.Base.prototype.prefs;module.exports=new internals.Base},637:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";const Assert=__webpack_require__(9647);const Clone=__webpack_require__(3737);const Common=__webpack_require__(6615);const internals={max:1e3,supported:new Set(["undefined","boolean","number","string"])};exports.provider={provision(options){return new internals.Cache(options)}};internals.Cache=class{constructor(options={}){Common.assertOptions(options,["max"]);Assert(options.max===undefined||options.max&&options.max>0&&isFinite(options.max),"Invalid max cache size");this._max=options.max||internals.max;this._map=new Map;this._list=new internals.List}get length(){return this._map.size}set(key,value){if(key!==null&&!internals.supported.has(typeof key)){return}let node=this._map.get(key);if(node){node.value=value;this._list.first(node);return}node=this._list.unshift({key,value});this._map.set(key,node);this._compact()}get(key){const node=this._map.get(key);if(node){this._list.first(node);return Clone(node.value)}}_compact(){if(this._map.size>this._max){const node=this._list.pop();this._map.delete(node.key)}}};internals.List=class{constructor(){this.tail=null;this.head=null}unshift(node){node.next=null;node.prev=this.head;if(this.head){this.head.next=node}this.head=node;if(!this.tail){this.tail=node}return node}first(node){if(node===this.head){return}this._remove(node);this.unshift(node)}pop(){return this._remove(this.tail)}_remove(node){const{next,prev}=node;next.prev=prev;if(prev){prev.next=next}if(node===this.tail){this.tail=next}node.prev=null;node.next=null;return node}}},6615:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";const Assert=__webpack_require__(9647);const AssertError=__webpack_require__(6090);const Pkg=__webpack_require__(8555);let Messages;let Schemas;const internals={isoDate:/^(?:[-+]\d{2})?(?:\d{4}(?!\d{2}\b))(?:(-?)(?:(?:0[1-9]|1[0-2])(?:\1(?:[12]\d|0[1-9]|3[01]))?|W(?:[0-4]\d|5[0-2])(?:-?[1-7])?|(?:00[1-9]|0[1-9]\d|[12]\d{2}|3(?:[0-5]\d|6[1-6])))(?![T]$|[T][\d]+Z$)(?:[T\s](?:(?:(?:[01]\d|2[0-3])(?:(:?)[0-5]\d)?|24\:?00)(?:[.,]\d+(?!:))?)(?:\2[0-5]\d(?:[.,]\d+)?)?(?:[Z]|(?:[+-])(?:[01]\d|2[0-3])(?::?[0-5]\d)?)?)?)?$/};exports.version=Pkg.version;exports.defaults={abortEarly:true,allowUnknown:false,artifacts:false,cache:true,context:null,convert:true,dateFormat:"iso",errors:{escapeHtml:false,label:"path",language:null,render:true,stack:false,wrap:{label:'"',array:"[]"}},externals:true,messages:{},nonEnumerables:false,noDefaults:false,presence:"optional",skipFunctions:false,stripUnknown:false,warnings:false};exports.symbols={any:Symbol.for("@hapi/joi/schema"),arraySingle:Symbol("arraySingle"),deepDefault:Symbol("deepDefault"),errors:Symbol("errors"),literal:Symbol("literal"),override:Symbol("override"),parent:Symbol("parent"),prefs:Symbol("prefs"),ref:Symbol("ref"),template:Symbol("template"),values:Symbol("values")};exports.assertOptions=function(options,keys,name="Options"){Assert(options&&typeof options==="object"&&!Array.isArray(options),"Options must be of type object");const unknownKeys=Object.keys(options).filter((k=>!keys.includes(k)));Assert(unknownKeys.length===0,`${name} contain unknown keys: ${unknownKeys}`)};exports.checkPreferences=function(prefs){Schemas=Schemas||__webpack_require__(8417);const result=Schemas.preferences.validate(prefs);if(result.error){throw new AssertError([result.error.details[0].message])}};exports.compare=function(a,b,operator){switch(operator){case"=":return a===b;case">":return a>b;case"<":return a<b;case">=":return a>=b;case"<=":return a<=b}};exports["default"]=function(value,defaultValue){return value===undefined?defaultValue:value};exports.isIsoDate=function(date){return internals.isoDate.test(date)};exports.isNumber=function(value){return typeof value==="number"&&!isNaN(value)};exports.isResolvable=function(obj){if(!obj){return false}return obj[exports.symbols.ref]||obj[exports.symbols.template]};exports.isSchema=function(schema,options={}){const any=schema&&schema[exports.symbols.any];if(!any){return false}Assert(options.legacy||any.version===exports.version,"Cannot mix different versions of joi schemas");return true};exports.isValues=function(obj){return obj[exports.symbols.values]};exports.limit=function(value){return Number.isSafeInteger(value)&&value>=0};exports.preferences=function(target,source){Messages=Messages||__webpack_require__(4941);target=target||{};source=source||{};const merged=Object.assign({},target,source);if(source.errors&&target.errors){merged.errors=Object.assign({},target.errors,source.errors);merged.errors.wrap=Object.assign({},target.errors.wrap,source.errors.wrap)}if(source.messages){merged.messages=Messages.compile(source.messages,target.messages)}delete merged[exports.symbols.prefs];return merged};exports.tryWithPath=function(fn,key,options={}){try{return fn()}catch(err){if(err.path!==undefined){err.path=key+"."+err.path}else{err.path=key}if(options.append){err.message=`${err.message} (${err.path})`}throw err}};exports.validateArg=function(value,label,{assert,message}){if(exports.isSchema(assert)){const result=assert.validate(value);if(!result.error){return}return result.error.message}else if(!assert(value)){return label?`${label} ${message}`:message}};exports.verifyFlat=function(args,method){for(const arg of args){Assert(!Array.isArray(arg),"Method no longer accepts array arguments:",method)}}},2194:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";const Assert=__webpack_require__(9647);const Common=__webpack_require__(6615);const Ref=__webpack_require__(5263);const internals={};exports.schema=function(Joi,config,options={}){Common.assertOptions(options,["appendPath","override"]);try{return internals.schema(Joi,config,options)}catch(err){if(options.appendPath&&err.path!==undefined){err.message=`${err.message} (${err.path})`}throw err}};internals.schema=function(Joi,config,options){Assert(config!==undefined,"Invalid undefined schema");if(Array.isArray(config)){Assert(config.length,"Invalid empty array schema");if(config.length===1){config=config[0]}}const valid=(base,...values)=>{if(options.override!==false){return base.valid(Joi.override,...values)}return base.valid(...values)};if(internals.simple(config)){return valid(Joi,config)}if(typeof config==="function"){return Joi.custom(config)}Assert(typeof config==="object","Invalid schema content:",typeof config);if(Common.isResolvable(config)){return valid(Joi,config)}if(Common.isSchema(config)){return config}if(Array.isArray(config)){for(const item of config){if(!internals.simple(item)){return Joi.alternatives().try(...config)}}return valid(Joi,...config)}if(config instanceof RegExp){return Joi.string().regex(config)}if(config instanceof Date){return valid(Joi.date(),config)}Assert(Object.getPrototypeOf(config)===Object.getPrototypeOf({}),"Schema can only contain plain objects");return Joi.object().keys(config)};exports.ref=function(id,options){return Ref.isRef(id)?id:Ref.create(id,options)};exports.compile=function(root,schema,options={}){Common.assertOptions(options,["legacy"]);const any=schema&&schema[Common.symbols.any];if(any){Assert(options.legacy||any.version===Common.version,"Cannot mix different versions of joi schemas:",any.version,Common.version);return schema}if(typeof schema!=="object"||!options.legacy){return exports.schema(root,schema,{appendPath:true})}const compiler=internals.walk(schema);if(!compiler){return exports.schema(root,schema,{appendPath:true})}return compiler.compile(compiler.root,schema)};internals.walk=function(schema){if(typeof schema!=="object"){return null}if(Array.isArray(schema)){for(const item of schema){const compiler=internals.walk(item);if(compiler){return compiler}}return null}const any=schema[Common.symbols.any];if(any){return{root:schema[any.root],compile:any.compile}}Assert(Object.getPrototypeOf(schema)===Object.getPrototypeOf({}),"Schema can only contain plain objects");for(const key in schema){const compiler=internals.walk(schema[key]);if(compiler){return compiler}}return null};internals.simple=function(value){return value===null||["boolean","string","number"].includes(typeof value)};exports.when=function(schema,condition,options){if(options===undefined){Assert(condition&&typeof condition==="object","Missing options");options=condition;condition=Ref.create(".")}if(Array.isArray(options)){options={switch:options}}Common.assertOptions(options,["is","not","then","otherwise","switch","break"]);if(Common.isSchema(condition)){Assert(options.is===undefined,'"is" can not be used with a schema condition');Assert(options.not===undefined,'"not" can not be used with a schema condition');Assert(options.switch===undefined,'"switch" can not be used with a schema condition');return internals.condition(schema,{is:condition,then:options.then,otherwise:options.otherwise,break:options.break})}Assert(Ref.isRef(condition)||typeof condition==="string","Invalid condition:",condition);Assert(options.not===undefined||options.is===undefined,'Cannot combine "is" with "not"');if(options.switch===undefined){let rule=options;if(options.not!==undefined){rule={is:options.not,then:options.otherwise,otherwise:options.then,break:options.break}}let is=rule.is!==undefined?schema.$_compile(rule.is):schema.$_root.invalid(null,false,0,"").required();Assert(rule.then!==undefined||rule.otherwise!==undefined,'options must have at least one of "then", "otherwise", or "switch"');Assert(rule.break===undefined||rule.then===undefined||rule.otherwise===undefined,"Cannot specify then, otherwise, and break all together");if(options.is!==undefined&&!Ref.isRef(options.is)&&!Common.isSchema(options.is)){is=is.required()}return internals.condition(schema,{ref:exports.ref(condition),is,then:rule.then,otherwise:rule.otherwise,break:rule.break})}Assert(Array.isArray(options.switch),'"switch" must be an array');Assert(options.is===undefined,'Cannot combine "switch" with "is"');Assert(options.not===undefined,'Cannot combine "switch" with "not"');Assert(options.then===undefined,'Cannot combine "switch" with "then"');const rule={ref:exports.ref(condition),switch:[],break:options.break};for(let i=0;i<options.switch.length;++i){const test=options.switch[i];const last=i===options.switch.length-1;Common.assertOptions(test,last?["is","then","otherwise"]:["is","then"]);Assert(test.is!==undefined,'Switch statement missing "is"');Assert(test.then!==undefined,'Switch statement missing "then"');const item={is:schema.$_compile(test.is),then:schema.$_compile(test.then)};if(!Ref.isRef(test.is)&&!Common.isSchema(test.is)){item.is=item.is.required()}if(last){Assert(options.otherwise===undefined||test.otherwise===undefined,'Cannot specify "otherwise" inside and outside a "switch"');const otherwise=options.otherwise!==undefined?options.otherwise:test.otherwise;if(otherwise!==undefined){Assert(rule.break===undefined,"Cannot specify both otherwise and break");item.otherwise=schema.$_compile(otherwise)}}rule.switch.push(item)}return rule};internals.condition=function(schema,condition){for(const key of["then","otherwise"]){if(condition[key]===undefined){delete condition[key]}else{condition[key]=schema.$_compile(condition[key])}}return condition}},9963:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";const Annotate=__webpack_require__(1746);const Common=__webpack_require__(6615);const Template=__webpack_require__(6453);const internals={};exports.Report=class{constructor(code,value,local,flags,messages,state,prefs){this.code=code;this.flags=flags;this.messages=messages;this.path=state.path;this.prefs=prefs;this.state=state;this.value=value;this.message=null;this.template=null;this.local=local||{};this.local.label=exports.label(this.flags,this.state,this.prefs,this.messages);if(this.value!==undefined&&!this.local.hasOwnProperty("value")){this.local.value=this.value}if(this.path.length){const key=this.path[this.path.length-1];if(typeof key!=="object"){this.local.key=key}}}_setTemplate(template){this.template=template;if(!this.flags.label&&this.path.length===0){const localized=this._template(this.template,"root");if(localized){this.local.label=localized}}}toString(){if(this.message){return this.message}const code=this.code;if(!this.prefs.errors.render){return this.code}const template=this._template(this.template)||this._template(this.prefs.messages)||this._template(this.messages);if(template===undefined){return`Error code "${code}" is not defined, your custom type is missing the correct messages definition`}this.message=template.render(this.value,this.state,this.prefs,this.local,{errors:this.prefs.errors,messages:[this.prefs.messages,this.messages]});if(!this.prefs.errors.label){this.message=this.message.replace(/^"" /,"").trim()}return this.message}_template(messages,code){return exports.template(this.value,messages,code||this.code,this.state,this.prefs)}};exports.path=function(path){let label="";for(const segment of path){if(typeof segment==="object"){continue}if(typeof segment==="string"){if(label){label+="."}label+=segment}else{label+=`[${segment}]`}}return label};exports.template=function(value,messages,code,state,prefs){if(!messages){return}if(Template.isTemplate(messages)){return code!=="root"?messages:null}let lang=prefs.errors.language;if(Common.isResolvable(lang)){lang=lang.resolve(value,state,prefs)}if(lang&&messages[lang]){if(messages[lang][code]!==undefined){return messages[lang][code]}if(messages[lang]["*"]!==undefined){return messages[lang]["*"]}}if(!messages[code]){return messages["*"]}return messages[code]};exports.label=function(flags,state,prefs,messages){if(flags.label){return flags.label}if(!prefs.errors.label){return""}let path=state.path;if(prefs.errors.label==="key"&&state.path.length>1){path=state.path.slice(-1)}const normalized=exports.path(path);if(normalized){return normalized}return exports.template(null,prefs.messages,"root",state,prefs)||messages&&exports.template(null,messages,"root",state,prefs)||"value"};exports.process=function(errors,original,prefs){if(!errors){return null}const{override,message,details}=exports.details(errors);if(override){return override}if(prefs.errors.stack){return new exports.ValidationError(message,details,original)}const limit=Error.stackTraceLimit;Error.stackTraceLimit=0;const validationError=new exports.ValidationError(message,details,original);Error.stackTraceLimit=limit;return validationError};exports.details=function(errors,options={}){let messages=[];const details=[];for(const item of errors){if(item instanceof Error){if(options.override!==false){return{override:item}}const message=item.toString();messages.push(message);details.push({message,type:"override",context:{error:item}});continue}const message=item.toString();messages.push(message);details.push({message,path:item.path.filter((v=>typeof v!=="object")),type:item.code,context:item.local})}if(messages.length>1){messages=[...new Set(messages)]}return{message:messages.join(". "),details}};exports.ValidationError=class extends Error{constructor(message,details,original){super(message);this._original=original;this.details=details}static isError(err){return err instanceof exports.ValidationError}};exports.ValidationError.prototype.isJoi=true;exports.ValidationError.prototype.name="ValidationError";exports.ValidationError.prototype.annotate=Annotate.error},4282:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";const Assert=__webpack_require__(9647);const Clone=__webpack_require__(3737);const Common=__webpack_require__(6615);const Messages=__webpack_require__(4941);const internals={};exports.type=function(from,options){const base=Object.getPrototypeOf(from);const prototype=Clone(base);const schema=from._assign(Object.create(prototype));const def=Object.assign({},options);delete def.base;prototype._definition=def;const parent=base._definition||{};def.messages=Messages.merge(parent.messages,def.messages);def.properties=Object.assign({},parent.properties,def.properties);schema.type=def.type;def.flags=Object.assign({},parent.flags,def.flags);const terms=Object.assign({},parent.terms);if(def.terms){for(const name in def.terms){const term=def.terms[name];Assert(schema.$_terms[name]===undefined,"Invalid term override for",def.type,name);schema.$_terms[name]=term.init;terms[name]=term}}def.terms=terms;if(!def.args){def.args=parent.args}def.prepare=internals.prepare(def.prepare,parent.prepare);if(def.coerce){if(typeof def.coerce==="function"){def.coerce={method:def.coerce}}if(def.coerce.from&&!Array.isArray(def.coerce.from)){def.coerce={method:def.coerce.method,from:[].concat(def.coerce.from)}}}def.coerce=internals.coerce(def.coerce,parent.coerce);def.validate=internals.validate(def.validate,parent.validate);const rules=Object.assign({},parent.rules);if(def.rules){for(const name in def.rules){const rule=def.rules[name];Assert(typeof rule==="object","Invalid rule definition for",def.type,name);let method=rule.method;if(method===undefined){method=function(){return this.$_addRule(name)}}if(method){Assert(!prototype[name],"Rule conflict in",def.type,name);prototype[name]=method}Assert(!rules[name],"Rule conflict in",def.type,name);rules[name]=rule;if(rule.alias){const aliases=[].concat(rule.alias);for(const alias of aliases){prototype[alias]=rule.method}}if(rule.args){rule.argsByName=new Map;rule.args=rule.args.map((arg=>{if(typeof arg==="string"){arg={name:arg}}Assert(!rule.argsByName.has(arg.name),"Duplicated argument name",arg.name);if(Common.isSchema(arg.assert)){arg.assert=arg.assert.strict().label(arg.name)}rule.argsByName.set(arg.name,arg);return arg}))}}}def.rules=rules;const modifiers=Object.assign({},parent.modifiers);if(def.modifiers){for(const name in def.modifiers){Assert(!prototype[name],"Rule conflict in",def.type,name);const modifier=def.modifiers[name];Assert(typeof modifier==="function","Invalid modifier definition for",def.type,name);const method=function(arg){return this.rule({[name]:arg})};prototype[name]=method;modifiers[name]=modifier}}def.modifiers=modifiers;if(def.overrides){prototype._super=base;schema.$_super={};for(const override in def.overrides){Assert(base[override],"Cannot override missing",override);def.overrides[override][Common.symbols.parent]=base[override];schema.$_super[override]=base[override].bind(schema)}Object.assign(prototype,def.overrides)}def.cast=Object.assign({},parent.cast,def.cast);const manifest=Object.assign({},parent.manifest,def.manifest);manifest.build=internals.build(def.manifest&&def.manifest.build,parent.manifest&&parent.manifest.build);def.manifest=manifest;def.rebuild=internals.rebuild(def.rebuild,parent.rebuild);return schema};internals.build=function(child,parent){if(!child||!parent){return child||parent}return function(obj,desc){return parent(child(obj,desc),desc)}};internals.coerce=function(child,parent){if(!child||!parent){return child||parent}return{from:child.from&&parent.from?[...new Set([...child.from,...parent.from])]:null,method(value,helpers){let coerced;if(!parent.from||parent.from.includes(typeof value)){coerced=parent.method(value,helpers);if(coerced){if(coerced.errors||coerced.value===undefined){return coerced}value=coerced.value}}if(!child.from||child.from.includes(typeof value)){const own=child.method(value,helpers);if(own){return own}}return coerced}}};internals.prepare=function(child,parent){if(!child||!parent){return child||parent}return function(value,helpers){const prepared=child(value,helpers);if(prepared){if(prepared.errors||prepared.value===undefined){return prepared}value=prepared.value}return parent(value,helpers)||prepared}};internals.rebuild=function(child,parent){if(!child||!parent){return child||parent}return function(schema){parent(schema);child(schema)}};internals.validate=function(child,parent){if(!child||!parent){return child||parent}return function(value,helpers){const result=parent(value,helpers);if(result){if(result.errors&&(!Array.isArray(result.errors)||result.errors.length)){return result}value=result.value}return child(value,helpers)||result}}},4354:(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";const Assert=__webpack_require__(9647);const Clone=__webpack_require__(3737);const Cache=__webpack_require__(637);const Common=__webpack_require__(6615);const Compile=__webpack_require__(2194);const Errors=__webpack_require__(9963);const Extend=__webpack_require__(4282);const Manifest=__webpack_require__(5919);const Ref=__webpack_require__(5263);const Template=__webpack_require__(6453);const Trace=__webpack_require__(5516);let Schemas;const internals={types:{alternatives:__webpack_require__(5775),any:__webpack_require__(3059),array:__webpack_require__(9606),boolean:__webpack_require__(9853),date:__webpack_require__(4340),function:__webpack_require__(8601),link:__webpack_require__(2544),number:__webpack_require__(4264),object:__webpack_require__(1942),string:__webpack_require__(8439),symbol:__webpack_require__(7896)},aliases:{alt:"alternatives",bool:"boolean",func:"function"}};if(Buffer){internals.types.binary=__webpack_require__(4788)}internals.root=function(){const root={_types:new Set(Object.keys(internals.types))};for(const type of root._types){root[type]=function(...args){Assert(!args.length||["alternatives","link","object"].includes(type),"The",type,"type does not allow arguments");return internals.generate(this,internals.types[type],args)}}for(const method of["allow","custom","disallow","equal","exist","forbidden","invalid","not","only","optional","options","prefs","preferences","required","strip","valid","when"]){root[method]=function(...args){return this.any()[method](...args)}}Object.assign(root,internals.methods);for(const alias in internals.aliases){const target=internals.aliases[alias];root[alias]=root[target]}root.x=root.expression;if(Trace.setup){Trace.setup(root)}return root};internals.methods={ValidationError:Errors.ValidationError,version:Common.version,cache:Cache.provider,assert(value,schema,...args){internals.assert(value,schema,true,args)},attempt(value,schema,...args){return internals.assert(value,schema,false,args)},build(desc){Assert(typeof Manifest.build==="function","Manifest functionality disabled");return Manifest.build(this,desc)},checkPreferences(prefs){Common.checkPreferences(prefs)},compile(schema,options){return Compile.compile(this,schema,options)},defaults(modifier){Assert(typeof modifier==="function","modifier must be a function");const joi=Object.assign({},this);for(const type of joi._types){const schema=modifier(joi[type]());Assert(Common.isSchema(schema),"modifier must return a valid schema object");joi[type]=function(...args){return internals.generate(this,schema,args)}}return joi},expression(...args){return new Template(...args)},extend(...extensions){Common.verifyFlat(extensions,"extend");Schemas=Schemas||__webpack_require__(8417);Assert(extensions.length,"You need to provide at least one extension");this.assert(extensions,Schemas.extensions);const joi=Object.assign({},this);joi._types=new Set(joi._types);for(let extension of extensions){if(typeof extension==="function"){extension=extension(joi)}this.assert(extension,Schemas.extension);const expanded=internals.expandExtension(extension,joi);for(const item of expanded){Assert(joi[item.type]===undefined||joi._types.has(item.type),"Cannot override name",item.type);const base=item.base||this.any();const schema=Extend.type(base,item);joi._types.add(item.type);joi[item.type]=function(...args){return internals.generate(this,schema,args)}}}return joi},isError:Errors.ValidationError.isError,isExpression:Template.isTemplate,isRef:Ref.isRef,isSchema:Common.isSchema,in(...args){return Ref.in(...args)},override:Common.symbols.override,ref(...args){return Ref.create(...args)},types(){const types={};for(const type of this._types){types[type]=this[type]()}for(const target in internals.aliases){types[target]=this[target]()}return types}};internals.assert=function(value,schema,annotate,args){const message=args[0]instanceof Error||typeof args[0]==="string"?args[0]:null;const options=message!==null?args[1]:args[0];const result=schema.validate(value,Common.preferences({errors:{stack:true}},options||{}));let error=result.error;if(!error){return result.value}if(message instanceof Error){throw message}const display=annotate&&typeof error.annotate==="function"?error.annotate():error.message;if(error instanceof Errors.ValidationError===false){error=Clone(error)}error.message=message?`${message} ${display}`:display;throw error};internals.generate=function(root,schema,args){Assert(root,"Must be invoked on a Joi instance.");schema.$_root=root;if(!schema._definition.args||!args.length){return schema}return schema._definition.args(schema,...args)};internals.expandExtension=function(extension,joi){if(typeof extension.type==="string"){return[extension]}const extended=[];for(const type of joi._types){if(extension.type.test(type)){const item=Object.assign({},extension);item.type=type;item.base=joi[type]();extended.push(item)}}return extended};module.exports=internals.root()},5919:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";const Assert=__webpack_require__(9647);const Clone=__webpack_require__(3737);const Common=__webpack_require__(6615);const Messages=__webpack_require__(4941);const Ref=__webpack_require__(5263);const Template=__webpack_require__(6453);let Schemas;const internals={};exports.describe=function(schema){const def=schema._definition;const desc={type:schema.type,flags:{},rules:[]};for(const flag in schema._flags){if(flag[0]!=="_"){desc.flags[flag]=internals.describe(schema._flags[flag])}}if(!Object.keys(desc.flags).length){delete desc.flags}if(schema._preferences){desc.preferences=Clone(schema._preferences,{shallow:["messages"]});delete desc.preferences[Common.symbols.prefs];if(desc.preferences.messages){desc.preferences.messages=Messages.decompile(desc.preferences.messages)}}if(schema._valids){desc.allow=schema._valids.describe()}if(schema._invalids){desc.invalid=schema._invalids.describe()}for(const rule of schema._rules){const ruleDef=def.rules[rule.name];if(ruleDef.manifest===false){continue}const item={name:rule.name};for(const custom in def.modifiers){if(rule[custom]!==undefined){item[custom]=internals.describe(rule[custom])}}if(rule.args){item.args={};for(const key in rule.args){const arg=rule.args[key];if(key==="options"&&!Object.keys(arg).length){continue}item.args[key]=internals.describe(arg,{assign:key})}if(!Object.keys(item.args).length){delete item.args}}desc.rules.push(item)}if(!desc.rules.length){delete desc.rules}for(const term in schema.$_terms){if(term[0]==="_"){continue}Assert(!desc[term],"Cannot describe schema due to internal name conflict with",term);const items=schema.$_terms[term];if(!items){continue}if(items instanceof Map){if(items.size){desc[term]=[...items.entries()]}continue}if(Common.isValues(items)){desc[term]=items.describe();continue}Assert(def.terms[term],"Term",term,"missing configuration");const manifest=def.terms[term].manifest;const mapped=typeof manifest==="object";if(!items.length&&!mapped){continue}const normalized=[];for(const item of items){normalized.push(internals.describe(item))}if(mapped){const{from,to}=manifest.mapped;desc[term]={};for(const item of normalized){desc[term][item[to]]=item[from]}continue}if(manifest==="single"){Assert(normalized.length===1,"Term",term,"contains more than one item");desc[term]=normalized[0];continue}desc[term]=normalized}internals.validate(schema.$_root,desc);return desc};internals.describe=function(item,options={}){if(Array.isArray(item)){return item.map(internals.describe)}if(item===Common.symbols.deepDefault){return{special:"deep"}}if(typeof item!=="object"||item===null){return item}if(options.assign==="options"){return Clone(item)}if(Buffer&&Buffer.isBuffer(item)){return{buffer:item.toString("binary")}}if(item instanceof Date){return item.toISOString()}if(item instanceof Error){return item}if(item instanceof RegExp){if(options.assign==="regex"){return item.toString()}return{regex:item.toString()}}if(item[Common.symbols.literal]){return{function:item.literal}}if(typeof item.describe==="function"){if(options.assign==="ref"){return item.describe().ref}return item.describe()}const normalized={};for(const key in item){const value=item[key];if(value===undefined){continue}normalized[key]=internals.describe(value,{assign:key})}return normalized};exports.build=function(joi,desc){const builder=new internals.Builder(joi);return builder.parse(desc)};internals.Builder=class{constructor(joi){this.joi=joi}parse(desc){internals.validate(this.joi,desc);let schema=this.joi[desc.type]()._bare();const def=schema._definition;if(desc.flags){for(const flag in desc.flags){const setter=def.flags[flag]&&def.flags[flag].setter||flag;Assert(typeof schema[setter]==="function","Invalid flag",flag,"for type",desc.type);schema=schema[setter](this.build(desc.flags[flag]))}}if(desc.preferences){schema=schema.preferences(this.build(desc.preferences))}if(desc.allow){schema=schema.allow(...this.build(desc.allow))}if(desc.invalid){schema=schema.invalid(...this.build(desc.invalid))}if(desc.rules){for(const rule of desc.rules){Assert(typeof schema[rule.name]==="function","Invalid rule",rule.name,"for type",desc.type);const args=[];if(rule.args){const built={};for(const key in rule.args){built[key]=this.build(rule.args[key],{assign:key})}const keys=Object.keys(built);const definition=def.rules[rule.name].args;if(definition){Assert(keys.length<=definition.length,"Invalid number of arguments for",desc.type,rule.name,"(expected up to",definition.length,", found",keys.length,")");for(const{name}of definition){args.push(built[name])}}else{Assert(keys.length===1,"Invalid number of arguments for",desc.type,rule.name,"(expected up to 1, found",keys.length,")");args.push(built[keys[0]])}}schema=schema[rule.name](...args);const options={};for(const custom in def.modifiers){if(rule[custom]!==undefined){options[custom]=this.build(rule[custom])}}if(Object.keys(options).length){schema=schema.rule(options)}}}const terms={};for(const key in desc){if(["allow","flags","invalid","whens","preferences","rules","type"].includes(key)){continue}Assert(def.terms[key],"Term",key,"missing configuration");const manifest=def.terms[key].manifest;if(manifest==="schema"){terms[key]=desc[key].map((item=>this.parse(item)));continue}if(manifest==="values"){terms[key]=desc[key].map((item=>this.build(item)));continue}if(manifest==="single"){terms[key]=this.build(desc[key]);continue}if(typeof manifest==="object"){terms[key]={};for(const name in desc[key]){const value=desc[key][name];terms[key][name]=this.parse(value)}continue}terms[key]=this.build(desc[key])}if(desc.whens){terms.whens=desc.whens.map((when=>this.build(when)))}schema=def.manifest.build(schema,terms);schema.$_temp.ruleset=false;return schema}build(desc,options={}){if(desc===null){return null}if(Array.isArray(desc)){return desc.map((item=>this.build(item)))}if(desc instanceof Error){return desc}if(options.assign==="options"){return Clone(desc)}if(options.assign==="regex"){return internals.regex(desc)}if(options.assign==="ref"){return Ref.build(desc)}if(typeof desc!=="object"){return desc}if(Object.keys(desc).length===1){if(desc.buffer){Assert(Buffer,"Buffers are not supported");return Buffer&&Buffer.from(desc.buffer,"binary")}if(desc.function){return{[Common.symbols.literal]:true,literal:desc.function}}if(desc.override){return Common.symbols.override}if(desc.ref){return Ref.build(desc.ref)}if(desc.regex){return internals.regex(desc.regex)}if(desc.special){Assert(["deep"].includes(desc.special),"Unknown special value",desc.special);return Common.symbols.deepDefault}if(desc.value){return Clone(desc.value)}}if(desc.type){return this.parse(desc)}if(desc.template){return Template.build(desc)}const normalized={};for(const key in desc){normalized[key]=this.build(desc[key],{assign:key})}return normalized}};internals.regex=function(string){const end=string.lastIndexOf("/");const exp=string.slice(1,end);const flags=string.slice(end+1);return new RegExp(exp,flags)};internals.validate=function(joi,desc){Schemas=Schemas||__webpack_require__(8417);joi.assert(desc,Schemas.description)}},4941:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";const Assert=__webpack_require__(9647);const Clone=__webpack_require__(3737);const Template=__webpack_require__(6453);const internals={};exports.compile=function(messages,target){if(typeof messages==="string"){Assert(!target,"Cannot set single message string");return new Template(messages)}if(Template.isTemplate(messages)){Assert(!target,"Cannot set single message template");return messages}Assert(typeof messages==="object"&&!Array.isArray(messages),"Invalid message options");target=target?Clone(target):{};for(let code in messages){const message=messages[code];if(code==="root"||Template.isTemplate(message)){target[code]=message;continue}if(typeof message==="string"){target[code]=new Template(message);continue}Assert(typeof message==="object"&&!Array.isArray(message),"Invalid message for",code);const language=code;target[language]=target[language]||{};for(code in message){const localized=message[code];if(code==="root"||Template.isTemplate(localized)){target[language][code]=localized;continue}Assert(typeof localized==="string","Invalid message for",code,"in",language);target[language][code]=new Template(localized)}}return target};exports.decompile=function(messages){const target={};for(let code in messages){const message=messages[code];if(code==="root"){target.root=message;continue}if(Template.isTemplate(message)){target[code]=message.describe({compact:true});continue}const language=code;target[language]={};for(code in message){const localized=message[code];if(code==="root"){target[language].root=localized;continue}target[language][code]=localized.describe({compact:true})}}return target};exports.merge=function(base,extended){if(!base){return exports.compile(extended)}if(!extended){return base}if(typeof extended==="string"){return new Template(extended)}if(Template.isTemplate(extended)){return extended}const target=Clone(base);for(let code in extended){const message=extended[code];if(code==="root"||Template.isTemplate(message)){target[code]=message;continue}if(typeof message==="string"){target[code]=new Template(message);continue}Assert(typeof message==="object"&&!Array.isArray(message),"Invalid message for",code);const language=code;target[language]=target[language]||{};for(code in message){const localized=message[code];if(code==="root"||Template.isTemplate(localized)){target[language][code]=localized;continue}Assert(typeof localized==="string","Invalid message for",code,"in",language);target[language][code]=new Template(localized)}}return target}},6973:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";const Assert=__webpack_require__(9647);const Common=__webpack_require__(6615);const Ref=__webpack_require__(5263);const internals={};exports.Ids=internals.Ids=class{constructor(){this._byId=new Map;this._byKey=new Map;this._schemaChain=false}clone(){const clone=new internals.Ids;clone._byId=new Map(this._byId);clone._byKey=new Map(this._byKey);clone._schemaChain=this._schemaChain;return clone}concat(source){if(source._schemaChain){this._schemaChain=true}for(const[id,value]of source._byId.entries()){Assert(!this._byKey.has(id),"Schema id conflicts with existing key:",id);this._byId.set(id,value)}for(const[key,value]of source._byKey.entries()){Assert(!this._byId.has(key),"Schema key conflicts with existing id:",key);this._byKey.set(key,value)}}fork(path,adjuster,root){const chain=this._collect(path);chain.push({schema:root});const tail=chain.shift();let adjusted={id:tail.id,schema:adjuster(tail.schema)};Assert(Common.isSchema(adjusted.schema),"adjuster function failed to return a joi schema type");for(const node of chain){adjusted={id:node.id,schema:internals.fork(node.schema,adjusted.id,adjusted.schema)}}return adjusted.schema}labels(path,behind=[]){const current=path[0];const node=this._get(current);if(!node){return[...behind,...path].join(".")}const forward=path.slice(1);behind=[...behind,node.schema._flags.label||current];if(!forward.length){return behind.join(".")}return node.schema._ids.labels(forward,behind)}reach(path,behind=[]){const current=path[0];const node=this._get(current);Assert(node,"Schema does not contain path",[...behind,...path].join("."));const forward=path.slice(1);if(!forward.length){return node.schema}return node.schema._ids.reach(forward,[...behind,current])}register(schema,{key}={}){if(!schema||!Common.isSchema(schema)){return}if(schema.$_property("schemaChain")||schema._ids._schemaChain){this._schemaChain=true}const id=schema._flags.id;if(id){const existing=this._byId.get(id);Assert(!existing||existing.schema===schema,"Cannot add different schemas with the same id:",id);Assert(!this._byKey.has(id),"Schema id conflicts with existing key:",id);this._byId.set(id,{schema,id})}if(key){Assert(!this._byKey.has(key),"Schema already contains key:",key);Assert(!this._byId.has(key),"Schema key conflicts with existing id:",key);this._byKey.set(key,{schema,id:key})}}reset(){this._byId=new Map;this._byKey=new Map;this._schemaChain=false}_collect(path,behind=[],nodes=[]){const current=path[0];const node=this._get(current);Assert(node,"Schema does not contain path",[...behind,...path].join("."));nodes=[node,...nodes];const forward=path.slice(1);if(!forward.length){return nodes}return node.schema._ids._collect(forward,[...behind,current],nodes)}_get(id){return this._byId.get(id)||this._byKey.get(id)}};internals.fork=function(schema,id,replacement){const each=(item,{key})=>{if(id===(item._flags.id||key)){return replacement}};const obj=exports.schema(schema,{each,ref:false});return obj?obj.$_mutateRebuild():schema};exports.schema=function(schema,options){let obj;for(const name in schema._flags){if(name[0]==="_"){continue}const result=internals.scan(schema._flags[name],{source:"flags",name},options);if(result!==undefined){obj=obj||schema.clone();obj._flags[name]=result}}for(let i=0;i<schema._rules.length;++i){const rule=schema._rules[i];const result=internals.scan(rule.args,{source:"rules",name:rule.name},options);if(result!==undefined){obj=obj||schema.clone();const clone=Object.assign({},rule);clone.args=result;obj._rules[i]=clone;const existingUnique=obj._singleRules.get(rule.name);if(existingUnique===rule){obj._singleRules.set(rule.name,clone)}}}for(const name in schema.$_terms){if(name[0]==="_"){continue}const result=internals.scan(schema.$_terms[name],{source:"terms",name},options);if(result!==undefined){obj=obj||schema.clone();obj.$_terms[name]=result}}return obj};internals.scan=function(item,source,options,_path,_key){const path=_path||[];if(item===null||typeof item!=="object"){return}let clone;if(Array.isArray(item)){for(let i=0;i<item.length;++i){const key=source.source==="terms"&&source.name==="keys"&&item[i].key;const result=internals.scan(item[i],source,options,[i,...path],key);if(result!==undefined){clone=clone||item.slice();clone[i]=result}}return clone}if(options.schema!==false&&Common.isSchema(item)||options.ref!==false&&Ref.isRef(item)){const result=options.each(item,{...source,path,key:_key});if(result===item){return}return result}for(const key in item){if(key[0]==="_"){continue}const result=internals.scan(item[key],source,options,[key,...path],_key);if(result!==undefined){clone=clone||Object.assign({},item);clone[key]=result}}return clone}},5263:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";const Assert=__webpack_require__(9647);const Clone=__webpack_require__(3737);const Reach=__webpack_require__(6770);const Common=__webpack_require__(6615);let Template;const internals={symbol:Symbol("ref"),defaults:{adjust:null,in:false,iterables:null,map:null,separator:".",type:"value"}};exports.create=function(key,options={}){Assert(typeof key==="string","Invalid reference key:",key);Common.assertOptions(options,["adjust","ancestor","in","iterables","map","prefix","render","separator"]);Assert(!options.prefix||typeof options.prefix==="object","options.prefix must be of type object");const ref=Object.assign({},internals.defaults,options);delete ref.prefix;const separator=ref.separator;const context=internals.context(key,separator,options.prefix);ref.type=context.type;key=context.key;if(ref.type==="value"){if(context.root){Assert(!separator||key[0]!==separator,"Cannot specify relative path with root prefix");ref.ancestor="root";if(!key){key=null}}if(separator&&separator===key){key=null;ref.ancestor=0}else{if(ref.ancestor!==undefined){Assert(!separator||!key||key[0]!==separator,"Cannot combine prefix with ancestor option")}else{const[ancestor,slice]=internals.ancestor(key,separator);if(slice){key=key.slice(slice);if(key===""){key=null}}ref.ancestor=ancestor}}}ref.path=separator?key===null?[]:key.split(separator):[key];return new internals.Ref(ref)};exports["in"]=function(key,options={}){return exports.create(key,{...options,in:true})};exports.isRef=function(ref){return ref?!!ref[Common.symbols.ref]:false};internals.Ref=class{constructor(options){Assert(typeof options==="object","Invalid reference construction");Common.assertOptions(options,["adjust","ancestor","in","iterables","map","path","render","separator","type","depth","key","root","display"]);Assert([false,undefined].includes(options.separator)||typeof options.separator==="string"&&options.separator.length===1,"Invalid separator");Assert(!options.adjust||typeof options.adjust==="function","options.adjust must be a function");Assert(!options.map||Array.isArray(options.map),"options.map must be an array");Assert(!options.map||!options.adjust,"Cannot set both map and adjust options");Object.assign(this,internals.defaults,options);Assert(this.type==="value"||this.ancestor===undefined,"Non-value references cannot reference ancestors");if(Array.isArray(this.map)){this.map=new Map(this.map)}this.depth=this.path.length;this.key=this.path.length?this.path.join(this.separator):null;this.root=this.path[0];this.updateDisplay()}resolve(value,state,prefs,local,options={}){Assert(!this.in||options.in,"Invalid in() reference usage");if(this.type==="global"){return this._resolve(prefs.context,state,options)}if(this.type==="local"){return this._resolve(local,state,options)}if(!this.ancestor){return this._resolve(value,state,options)}if(this.ancestor==="root"){return this._resolve(state.ancestors[state.ancestors.length-1],state,options)}Assert(this.ancestor<=state.ancestors.length,"Invalid reference exceeds the schema root:",this.display);return this._resolve(state.ancestors[this.ancestor-1],state,options)}_resolve(target,state,options){let resolved;if(this.type==="value"&&state.mainstay.shadow&&options.shadow!==false){resolved=state.mainstay.shadow.get(this.absolute(state))}if(resolved===undefined){resolved=Reach(target,this.path,{iterables:this.iterables,functions:true})}if(this.adjust){resolved=this.adjust(resolved)}if(this.map){const mapped=this.map.get(resolved);if(mapped!==undefined){resolved=mapped}}if(state.mainstay){state.mainstay.tracer.resolve(state,this,resolved)}return resolved}toString(){return this.display}absolute(state){return[...state.path.slice(0,-this.ancestor),...this.path]}clone(){return new internals.Ref(this)}describe(){const ref={path:this.path};if(this.type!=="value"){ref.type=this.type}if(this.separator!=="."){ref.separator=this.separator}if(this.type==="value"&&this.ancestor!==1){ref.ancestor=this.ancestor}if(this.map){ref.map=[...this.map]}for(const key of["adjust","iterables","render"]){if(this[key]!==null&&this[key]!==undefined){ref[key]=this[key]}}if(this.in!==false){ref.in=true}return{ref}}updateDisplay(){const key=this.key!==null?this.key:"";if(this.type!=="value"){this.display=`ref:${this.type}:${key}`;return}if(!this.separator){this.display=`ref:${key}`;return}if(!this.ancestor){this.display=`ref:${this.separator}${key}`;return}if(this.ancestor==="root"){this.display=`ref:root:${key}`;return}if(this.ancestor===1){this.display=`ref:${key||".."}`;return}const lead=new Array(this.ancestor+1).fill(this.separator).join("");this.display=`ref:${lead}${key||""}`}};internals.Ref.prototype[Common.symbols.ref]=true;exports.build=function(desc){desc=Object.assign({},internals.defaults,desc);if(desc.type==="value"&&desc.ancestor===undefined){desc.ancestor=1}return new internals.Ref(desc)};internals.context=function(key,separator,prefix={}){key=key.trim();if(prefix){const globalp=prefix.global===undefined?"$":prefix.global;if(globalp!==separator&&key.startsWith(globalp)){return{key:key.slice(globalp.length),type:"global"}}const local=prefix.local===undefined?"#":prefix.local;if(local!==separator&&key.startsWith(local)){return{key:key.slice(local.length),type:"local"}}const root=prefix.root===undefined?"/":prefix.root;if(root!==separator&&key.startsWith(root)){return{key:key.slice(root.length),type:"value",root:true}}}return{key,type:"value"}};internals.ancestor=function(key,separator){if(!separator){return[1,0]}if(key[0]!==separator){return[1,0]}if(key[1]!==separator){return[0,1]}let i=2;while(key[i]===separator){++i}return[i-1,i]};exports.toSibling=0;exports.toParent=1;exports.Manager=class{constructor(){this.refs=[]}register(source,target){if(!source){return}target=target===undefined?exports.toParent:target;if(Array.isArray(source)){for(const ref of source){this.register(ref,target)}return}if(Common.isSchema(source)){for(const item of source._refs.refs){if(item.ancestor-target>=0){this.refs.push({ancestor:item.ancestor-target,root:item.root})}}return}if(exports.isRef(source)&&source.type==="value"&&source.ancestor-target>=0){this.refs.push({ancestor:source.ancestor-target,root:source.root})}Template=Template||__webpack_require__(6453);if(Template.isTemplate(source)){this.register(source.refs(),target)}}get length(){return this.refs.length}clone(){const copy=new exports.Manager;copy.refs=Clone(this.refs);return copy}reset(){this.refs=[]}roots(){return this.refs.filter((ref=>!ref.ancestor)).map((ref=>ref.root))}}},8417:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";const Joi=__webpack_require__(4354);const internals={};internals.wrap=Joi.string().min(1).max(2).allow(false);exports.preferences=Joi.object({allowUnknown:Joi.boolean(),abortEarly:Joi.boolean(),artifacts:Joi.boolean(),cache:Joi.boolean(),context:Joi.object(),convert:Joi.boolean(),dateFormat:Joi.valid("date","iso","string","time","utc"),debug:Joi.boolean(),errors:{escapeHtml:Joi.boolean(),label:Joi.valid("path","key",false),language:[Joi.string(),Joi.object().ref()],render:Joi.boolean(),stack:Joi.boolean(),wrap:{label:internals.wrap,array:internals.wrap,string:internals.wrap}},externals:Joi.boolean(),messages:Joi.object(),noDefaults:Joi.boolean(),nonEnumerables:Joi.boolean(),presence:Joi.valid("required","optional","forbidden"),skipFunctions:Joi.boolean(),stripUnknown:Joi.object({arrays:Joi.boolean(),objects:Joi.boolean()}).or("arrays","objects").allow(true,false),warnings:Joi.boolean()}).strict();internals.nameRx=/^[a-zA-Z0-9]\w*$/;internals.rule=Joi.object({alias:Joi.array().items(Joi.string().pattern(internals.nameRx)).single(),args:Joi.array().items(Joi.string(),Joi.object({name:Joi.string().pattern(internals.nameRx).required(),ref:Joi.boolean(),assert:Joi.alternatives([Joi.function(),Joi.object().schema()]).conditional("ref",{is:true,then:Joi.required()}),normalize:Joi.function(),message:Joi.string().when("assert",{is:Joi.function(),then:Joi.required()})})),convert:Joi.boolean(),manifest:Joi.boolean(),method:Joi.function().allow(false),multi:Joi.boolean(),validate:Joi.function()});exports.extension=Joi.object({type:Joi.alternatives([Joi.string(),Joi.object().regex()]).required(),args:Joi.function(),cast:Joi.object().pattern(internals.nameRx,Joi.object({from:Joi.function().maxArity(1).required(),to:Joi.function().minArity(1).maxArity(2).required()})),base:Joi.object().schema().when("type",{is:Joi.object().regex(),then:Joi.forbidden()}),coerce:[Joi.function().maxArity(3),Joi.object({method:Joi.function().maxArity(3).required(),from:Joi.array().items(Joi.string()).single()})],flags:Joi.object().pattern(internals.nameRx,Joi.object({setter:Joi.string(),default:Joi.any()})),manifest:{build:Joi.function().arity(2)},messages:[Joi.object(),Joi.string()],modifiers:Joi.object().pattern(internals.nameRx,Joi.function().minArity(1).maxArity(2)),overrides:Joi.object().pattern(internals.nameRx,Joi.function()),prepare:Joi.function().maxArity(3),rebuild:Joi.function().arity(1),rules:Joi.object().pattern(internals.nameRx,internals.rule),terms:Joi.object().pattern(internals.nameRx,Joi.object({init:Joi.array().allow(null).required(),manifest:Joi.object().pattern(/.+/,[Joi.valid("schema","single"),Joi.object({mapped:Joi.object({from:Joi.string().required(),to:Joi.string().required()}).required()})])})),validate:Joi.function().maxArity(3)}).strict();exports.extensions=Joi.array().items(Joi.object(),Joi.function().arity(1)).strict();internals.desc={buffer:Joi.object({buffer:Joi.string()}),func:Joi.object({function:Joi.function().required(),options:{literal:true}}),override:Joi.object({override:true}),ref:Joi.object({ref:Joi.object({type:Joi.valid("value","global","local"),path:Joi.array().required(),separator:Joi.string().length(1).allow(false),ancestor:Joi.number().min(0).integer().allow("root"),map:Joi.array().items(Joi.array().length(2)).min(1),adjust:Joi.function(),iterables:Joi.boolean(),in:Joi.boolean(),render:Joi.boolean()}).required()}),regex:Joi.object({regex:Joi.string().min(3)}),special:Joi.object({special:Joi.valid("deep").required()}),template:Joi.object({template:Joi.string().required(),options:Joi.object()}),value:Joi.object({value:Joi.alternatives([Joi.object(),Joi.array()]).required()})};internals.desc.entity=Joi.alternatives([Joi.array().items(Joi.link("...")),Joi.boolean(),Joi.function(),Joi.number(),Joi.string(),internals.desc.buffer,internals.desc.func,internals.desc.ref,internals.desc.regex,internals.desc.special,internals.desc.template,internals.desc.value,Joi.link("/")]);internals.desc.values=Joi.array().items(null,Joi.boolean(),Joi.function(),Joi.number().allow(Infinity,-Infinity),Joi.string().allow(""),Joi.symbol(),internals.desc.buffer,internals.desc.func,internals.desc.override,internals.desc.ref,internals.desc.regex,internals.desc.template,internals.desc.value);internals.desc.messages=Joi.object().pattern(/.+/,[Joi.string(),internals.desc.template,Joi.object().pattern(/.+/,[Joi.string(),internals.desc.template])]);exports.description=Joi.object({type:Joi.string().required(),flags:Joi.object({cast:Joi.string(),default:Joi.any(),description:Joi.string(),empty:Joi.link("/"),failover:internals.desc.entity,id:Joi.string(),label:Joi.string(),only:true,presence:["optional","required","forbidden"],result:["raw","strip"],strip:Joi.boolean(),unit:Joi.string()}).unknown(),preferences:{allowUnknown:Joi.boolean(),abortEarly:Joi.boolean(),artifacts:Joi.boolean(),cache:Joi.boolean(),convert:Joi.boolean(),dateFormat:["date","iso","string","time","utc"],errors:{escapeHtml:Joi.boolean(),label:["path","key"],language:[Joi.string(),internals.desc.ref],wrap:{label:internals.wrap,array:internals.wrap}},externals:Joi.boolean(),messages:internals.desc.messages,noDefaults:Joi.boolean(),nonEnumerables:Joi.boolean(),presence:["required","optional","forbidden"],skipFunctions:Joi.boolean(),stripUnknown:Joi.object({arrays:Joi.boolean(),objects:Joi.boolean()}).or("arrays","objects").allow(true,false),warnings:Joi.boolean()},allow:internals.desc.values,invalid:internals.desc.values,rules:Joi.array().min(1).items({name:Joi.string().required(),args:Joi.object().min(1),keep:Joi.boolean(),message:[Joi.string(),internals.desc.messages],warn:Joi.boolean()}),keys:Joi.object().pattern(/.*/,Joi.link("/")),link:internals.desc.ref}).pattern(/^[a-z]\w*$/,Joi.any())},5908:(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";const Clone=__webpack_require__(3737);const Reach=__webpack_require__(6770);const Common=__webpack_require__(6615);const internals={value:Symbol("value")};module.exports=internals.State=class{constructor(path,ancestors,state){this.path=path;this.ancestors=ancestors;this.mainstay=state.mainstay;this.schemas=state.schemas;this.debug=null}localize(path,ancestors=null,schema=null){const state=new internals.State(path,ancestors,this);if(schema&&state.schemas){state.schemas=[internals.schemas(schema),...state.schemas]}return state}nest(schema,debug){const state=new internals.State(this.path,this.ancestors,this);state.schemas=state.schemas&&[internals.schemas(schema),...state.schemas];state.debug=debug;return state}shadow(value,reason){this.mainstay.shadow=this.mainstay.shadow||new internals.Shadow;this.mainstay.shadow.set(this.path,value,reason)}snapshot(){if(this.mainstay.shadow){this._snapshot=Clone(this.mainstay.shadow.node(this.path))}this.mainstay.snapshot()}restore(){if(this.mainstay.shadow){this.mainstay.shadow.override(this.path,this._snapshot);this._snapshot=undefined}this.mainstay.restore()}commit(){if(this.mainstay.shadow){this.mainstay.shadow.override(this.path,this._snapshot);this._snapshot=undefined}this.mainstay.commit()}};internals.schemas=function(schema){if(Common.isSchema(schema)){return{schema}}return schema};internals.Shadow=class{constructor(){this._values=null}set(path,value,reason){if(!path.length){return}if(reason==="strip"&&typeof path[path.length-1]==="number"){return}this._values=this._values||new Map;let node=this._values;for(let i=0;i<path.length;++i){const segment=path[i];let next=node.get(segment);if(!next){next=new Map;node.set(segment,next)}node=next}node[internals.value]=value}get(path){const node=this.node(path);if(node){return node[internals.value]}}node(path){if(!this._values){return}return Reach(this._values,path,{iterables:true})}override(path,node){if(!this._values){return}const parents=path.slice(0,-1);const own=path[path.length-1];const parent=Reach(this._values,parents,{iterables:true});if(node){parent.set(own,node);return}if(parent){parent.delete(own)}}}},6453:(module,exports,__webpack_require__)=>{"use strict";const Assert=__webpack_require__(9647);const Clone=__webpack_require__(3737);const EscapeHtml=__webpack_require__(8438);const Formula=__webpack_require__(5278);const Common=__webpack_require__(6615);const Errors=__webpack_require__(9963);const Ref=__webpack_require__(5263);const internals={symbol:Symbol("template"),opens:new Array(1e3).join("\0"),closes:new Array(1e3).join(""),dateFormat:{date:Date.prototype.toDateString,iso:Date.prototype.toISOString,string:Date.prototype.toString,time:Date.prototype.toTimeString,utc:Date.prototype.toUTCString}};module.exports=exports=internals.Template=class{constructor(source,options){Assert(typeof source==="string","Template source must be a string");Assert(!source.includes("\0")&&!source.includes(""),"Template source cannot contain reserved control characters");this.source=source;this.rendered=source;this._template=null;if(options){const{functions,...opts}=options;this._settings=Object.keys(opts).length?Clone(opts):undefined;this._functions=functions;if(this._functions){Assert(Object.keys(this._functions).every((key=>typeof key==="string")),"Functions keys must be strings");Assert(Object.values(this._functions).every((key=>typeof key==="function")),"Functions values must be functions")}}else{this._settings=undefined;this._functions=undefined}this._parse()}_parse(){if(!this.source.includes("{")){return}const encoded=internals.encode(this.source);const parts=internals.split(encoded);let refs=false;const processed=[];const head=parts.shift();if(head){processed.push(head)}for(const part of parts){const raw=part[0]!=="{";const ender=raw?"}":"}}";const end=part.indexOf(ender);if(end===-1||part[1]==="{"){processed.push(`{${internals.decode(part)}`);continue}let variable=part.slice(raw?0:1,end);const wrapped=variable[0]===":";if(wrapped){variable=variable.slice(1)}const dynamic=this._ref(internals.decode(variable),{raw,wrapped});processed.push(dynamic);if(typeof dynamic!=="string"){refs=true}const rest=part.slice(end+ender.length);if(rest){processed.push(internals.decode(rest))}}if(!refs){this.rendered=processed.join("");return}this._template=processed}static date(date,prefs){return internals.dateFormat[prefs.dateFormat].call(date)}describe(options={}){if(!this._settings&&options.compact){return this.source}const desc={template:this.source};if(this._settings){desc.options=this._settings}if(this._functions){desc.functions=this._functions}return desc}static build(desc){return new internals.Template(desc.template,desc.options||desc.functions?{...desc.options,functions:desc.functions}:undefined)}isDynamic(){return!!this._template}static isTemplate(template){return template?!!template[Common.symbols.template]:false}refs(){if(!this._template){return}const refs=[];for(const part of this._template){if(typeof part!=="string"){refs.push(...part.refs)}}return refs}resolve(value,state,prefs,local){if(this._template&&this._template.length===1){return this._part(this._template[0],value,state,prefs,local,{})}return this.render(value,state,prefs,local)}_part(part,...args){if(part.ref){return part.ref.resolve(...args)}return part.formula.evaluate(args)}render(value,state,prefs,local,options={}){if(!this.isDynamic()){return this.rendered}const parts=[];for(const part of this._template){if(typeof part==="string"){parts.push(part)}else{const rendered=this._part(part,value,state,prefs,local,options);const string=internals.stringify(rendered,value,state,prefs,local,options);if(string!==undefined){const result=part.raw||(options.errors&&options.errors.escapeHtml)===false?string:EscapeHtml(string);parts.push(internals.wrap(result,part.wrapped&&prefs.errors.wrap.label))}}}return parts.join("")}_ref(content,{raw,wrapped}){const refs=[];const reference=variable=>{const ref=Ref.create(variable,this._settings);refs.push(ref);return context=>{const resolved=ref.resolve(...context);return resolved!==undefined?resolved:null}};try{const functions=this._functions?{...internals.functions,...this._functions}:internals.functions;var formula=new Formula.Parser(content,{reference,functions,constants:internals.constants})}catch(err){err.message=`Invalid template variable "${content}" fails due to: ${err.message}`;throw err}if(formula.single){if(formula.single.type==="reference"){const ref=refs[0];return{ref,raw,refs,wrapped:wrapped||ref.type==="local"&&ref.key==="label"}}return internals.stringify(formula.single.value)}return{formula,raw,refs}}toString(){return this.source}};internals.Template.prototype[Common.symbols.template]=true;internals.Template.prototype.isImmutable=true;internals.encode=function(string){return string.replace(/\\(\{+)/g,(($0,$1)=>internals.opens.slice(0,$1.length))).replace(/\\(\}+)/g,(($0,$1)=>internals.closes.slice(0,$1.length)))};internals.decode=function(string){return string.replace(/\u0000/g,"{").replace(/\u0001/g,"}")};internals.split=function(string){const parts=[];let current="";for(let i=0;i<string.length;++i){const char=string[i];if(char==="{"){let next="";while(i+1<string.length&&string[i+1]==="{"){next+="{";++i}parts.push(current);current=next}else{current+=char}}parts.push(current);return parts};internals.wrap=function(value,ends){if(!ends){return value}if(ends.length===1){return`${ends}${value}${ends}`}return`${ends[0]}${value}${ends[1]}`};internals.stringify=function(value,original,state,prefs,local,options={}){const type=typeof value;const wrap=prefs&&prefs.errors&&prefs.errors.wrap||{};let skipWrap=false;if(Ref.isRef(value)&&value.render){skipWrap=value.in;value=value.resolve(original,state,prefs,local,{in:value.in,...options})}if(value===null){return"null"}if(type==="string"){return internals.wrap(value,options.arrayItems&&wrap.string)}if(type==="number"||type==="function"||type==="symbol"){return value.toString()}if(type!=="object"){return JSON.stringify(value)}if(value instanceof Date){return internals.Template.date(value,prefs)}if(value instanceof Map){const pairs=[];for(const[key,sym]of value.entries()){pairs.push(`${key.toString()} -> ${sym.toString()}`)}value=pairs}if(!Array.isArray(value)){return value.toString()}const values=[];for(const item of value){values.push(internals.stringify(item,original,state,prefs,local,{arrayItems:true,...options}))}return internals.wrap(values.join(", "),!skipWrap&&wrap.array)};internals.constants={true:true,false:false,null:null,second:1e3,minute:60*1e3,hour:60*60*1e3,day:24*60*60*1e3};internals.functions={if(condition,then,otherwise){return condition?then:otherwise},length(item){if(typeof item==="string"){return item.length}if(!item||typeof item!=="object"){return null}if(Array.isArray(item)){return item.length}return Object.keys(item).length},msg(code){const[value,state,prefs,local,options]=this;const messages=options.messages;if(!messages){return""}const template=Errors.template(value,messages[0],code,state,prefs)||Errors.template(value,messages[1],code,state,prefs);if(!template){return""}return template.render(value,state,prefs,local,options)},number(value){if(typeof value==="number"){return value}if(typeof value==="string"){return parseFloat(value)}if(typeof value==="boolean"){return value?1:0}if(value instanceof Date){return value.getTime()}return null}}},5516:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";const DeepEqual=__webpack_require__(5245);const Pinpoint=__webpack_require__(9725);const Errors=__webpack_require__(9963);const internals={codes:{error:1,pass:2,full:3},labels:{0:"never used",1:"always error",2:"always pass"}};exports.setup=function(root){const trace=function(){root._tracer=root._tracer||new internals.Tracer;return root._tracer};root.trace=trace;root[Symbol.for("@hapi/lab/coverage/initialize")]=trace;root.untrace=()=>{root._tracer=null}};exports.location=function(schema){return schema.$_setFlag("_tracerLocation",Pinpoint.location(2))};internals.Tracer=class{constructor(){this.name="Joi";this._schemas=new Map}_register(schema){const existing=this._schemas.get(schema);if(existing){return existing.store}const store=new internals.Store(schema);const{filename,line}=schema._flags._tracerLocation||Pinpoint.location(5);this._schemas.set(schema,{filename,line,store});return store}_combine(merged,sources){for(const{store}of this._schemas.values()){store._combine(merged,sources)}}report(file){const coverage=[];for(const{filename,line,store}of this._schemas.values()){if(file&&file!==filename){continue}const missing=[];const skipped=[];for(const[schema,log]of store._sources.entries()){if(internals.sub(log.paths,skipped)){continue}if(!log.entry){missing.push({status:"never reached",paths:[...log.paths]});skipped.push(...log.paths);continue}for(const type of["valid","invalid"]){const set=schema[`_${type}s`];if(!set){continue}const values=new Set(set._values);const refs=new Set(set._refs);for(const{value,ref}of log[type]){values.delete(value);refs.delete(ref)}if(values.size||refs.size){missing.push({status:[...values,...[...refs].map((ref=>ref.display))],rule:`${type}s`})}}const rules=schema._rules.map((rule=>rule.name));for(const type of["default","failover"]){if(schema._flags[type]!==undefined){rules.push(type)}}for(const name of rules){const status=internals.labels[log.rule[name]||0];if(status){const report={rule:name,status};if(log.paths.size){report.paths=[...log.paths]}missing.push(report)}}}if(missing.length){coverage.push({filename,line,missing,severity:"error",message:`Schema missing tests for ${missing.map(internals.message).join(", ")}`})}}return coverage.length?coverage:null}};internals.Store=class{constructor(schema){this.active=true;this._sources=new Map;this._combos=new Map;this._scan(schema)}debug(state,source,name,result){state.mainstay.debug&&state.mainstay.debug.push({type:source,name,result,path:state.path})}entry(schema,state){internals.debug(state,{type:"entry"});this._record(schema,(log=>{log.entry=true}))}filter(schema,state,source,value){internals.debug(state,{type:source,...value});this._record(schema,(log=>{log[source].add(value)}))}log(schema,state,source,name,result){internals.debug(state,{type:source,name,result:result==="full"?"pass":result});this._record(schema,(log=>{log[source][name]=log[source][name]||0;log[source][name]|=internals.codes[result]}))}resolve(state,ref,to){if(!state.mainstay.debug){return}const log={type:"resolve",ref:ref.display,to,path:state.path};state.mainstay.debug.push(log)}value(state,by,from,to,name){if(!state.mainstay.debug||DeepEqual(from,to)){return}const log={type:"value",by,from,to,path:state.path};if(name){log.name=name}state.mainstay.debug.push(log)}_record(schema,each){const log=this._sources.get(schema);if(log){each(log);return}const sources=this._combos.get(schema);for(const source of sources){this._record(source,each)}}_scan(schema,_path){const path=_path||[];let log=this._sources.get(schema);if(!log){log={paths:new Set,entry:false,rule:{},valid:new Set,invalid:new Set};this._sources.set(schema,log)}if(path.length){log.paths.add(path)}const each=(sub,source)=>{const subId=internals.id(sub,source);this._scan(sub,path.concat(subId))};schema.$_modify({each,ref:false})}_combine(merged,sources){this._combos.set(merged,sources)}};internals.message=function(item){const path=item.paths?Errors.path(item.paths[0])+(item.rule?":":""):"";return`${path}${item.rule||""} (${item.status})`};internals.id=function(schema,{source,name,path,key}){if(schema._flags.id){return schema._flags.id}if(key){return key}name=`@${name}`;if(source==="terms"){return[name,path[Math.min(path.length-1,1)]]}return name};internals.sub=function(paths,skipped){for(const path of paths){for(const skip of skipped){if(DeepEqual(path.slice(0,skip.length),skip)){return true}}}return false};internals.debug=function(state,event){if(state.mainstay.debug){event.path=state.debug?[...state.path,state.debug]:state.path;state.mainstay.debug.push(event)}}},5775:(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";const Assert=__webpack_require__(9647);const Merge=__webpack_require__(7093);const Any=__webpack_require__(3059);const Common=__webpack_require__(6615);const Compile=__webpack_require__(2194);const Errors=__webpack_require__(9963);const Ref=__webpack_require__(5263);const internals={};module.exports=Any.extend({type:"alternatives",flags:{match:{default:"any"}},terms:{matches:{init:[],register:Ref.toSibling}},args(schema,...schemas){if(schemas.length===1){if(Array.isArray(schemas[0])){return schema.try(...schemas[0])}}return schema.try(...schemas)},validate(value,helpers){const{schema,error,state,prefs}=helpers;if(schema._flags.match){const matched=[];const failed=[];for(let i=0;i<schema.$_terms.matches.length;++i){const item=schema.$_terms.matches[i];const localState=state.nest(item.schema,`match.${i}`);localState.snapshot();const result=item.schema.$_validate(value,localState,prefs);if(!result.errors){matched.push(result.value);localState.commit()}else{failed.push(result.errors);localState.restore()}}if(matched.length===0){const context={details:failed.map((f=>Errors.details(f,{override:false})))};return{errors:error("alternatives.any",context)}}if(schema._flags.match==="one"){return matched.length===1?{value:matched[0]}:{errors:error("alternatives.one")}}if(matched.length!==schema.$_terms.matches.length){const context={details:failed.map((f=>Errors.details(f,{override:false})))};return{errors:error("alternatives.all",context)}}const isAnyObj=alternative=>alternative.$_terms.matches.some((v=>v.schema.type==="object"||v.schema.type==="alternatives"&&isAnyObj(v.schema)));return isAnyObj(schema)?{value:matched.reduce(((acc,v)=>Merge(acc,v,{mergeArrays:false})))}:{value:matched[matched.length-1]}}const errors=[];for(let i=0;i<schema.$_terms.matches.length;++i){const item=schema.$_terms.matches[i];if(item.schema){const localState=state.nest(item.schema,`match.${i}`);localState.snapshot();const result=item.schema.$_validate(value,localState,prefs);if(!result.errors){localState.commit();return result}localState.restore();errors.push({schema:item.schema,reports:result.errors});continue}const input=item.ref?item.ref.resolve(value,state,prefs):value;const tests=item.is?[item]:item.switch;for(let j=0;j<tests.length;++j){const test=tests[j];const{is,then,otherwise}=test;const id=`match.${i}${item.switch?"."+j:""}`;if(!is.$_match(input,state.nest(is,`${id}.is`),prefs)){if(otherwise){return otherwise.$_validate(value,state.nest(otherwise,`${id}.otherwise`),prefs)}}else if(then){return then.$_validate(value,state.nest(then,`${id}.then`),prefs)}}}return internals.errors(errors,helpers)},rules:{conditional:{method(condition,options){Assert(!this._flags._endedSwitch,"Unreachable condition");Assert(!this._flags.match,"Cannot combine match mode",this._flags.match,"with conditional rule");Assert(options.break===undefined,"Cannot use break option with alternatives conditional");const obj=this.clone();const match=Compile.when(obj,condition,options);const conditions=match.is?[match]:match.switch;for(const item of conditions){if(item.then&&item.otherwise){obj.$_setFlag("_endedSwitch",true,{clone:false});break}}obj.$_terms.matches.push(match);return obj.$_mutateRebuild()}},match:{method(mode){Assert(["any","one","all"].includes(mode),"Invalid alternatives match mode",mode);if(mode!=="any"){for(const match of this.$_terms.matches){Assert(match.schema,"Cannot combine match mode",mode,"with conditional rules")}}return this.$_setFlag("match",mode)}},try:{method(...schemas){Assert(schemas.length,"Missing alternative schemas");Common.verifyFlat(schemas,"try");Assert(!this._flags._endedSwitch,"Unreachable condition");const obj=this.clone();for(const schema of schemas){obj.$_terms.matches.push({schema:obj.$_compile(schema)})}return obj.$_mutateRebuild()}}},overrides:{label(name){const obj=this.$_parent("label",name);const each=(item,source)=>source.path[0]!=="is"?item.label(name):undefined;return obj.$_modify({each,ref:false})}},rebuild(schema){const each=item=>{if(Common.isSchema(item)&&item.type==="array"){schema.$_setFlag("_arrayItems",true,{clone:false})}};schema.$_modify({each})},manifest:{build(obj,desc){if(desc.matches){for(const match of desc.matches){const{schema,ref,is,not,then,otherwise}=match;if(schema){obj=obj.try(schema)}else if(ref){obj=obj.conditional(ref,{is,then,not,otherwise,switch:match.switch})}else{obj=obj.conditional(is,{then,otherwise})}}}return obj}},messages:{"alternatives.all":"{{#label}} does not match all of the required types","alternatives.any":"{{#label}} does not match any of the allowed types","alternatives.match":"{{#label}} does not match any of the allowed types","alternatives.one":"{{#label}} matches more than one allowed type","alternatives.types":"{{#label}} must be one of {{#types}}"}});internals.errors=function(failures,{error,state}){if(!failures.length){return{errors:error("alternatives.any")}}if(failures.length===1){return{errors:failures[0].reports}}const valids=new Set;const complex=[];for(const{reports,schema}of failures){if(reports.length>1){return internals.unmatched(failures,error)}const report=reports[0];if(report instanceof Errors.Report===false){return internals.unmatched(failures,error)}if(report.state.path.length!==state.path.length){complex.push({type:schema.type,report});continue}if(report.code==="any.only"){for(const valid of report.local.valids){valids.add(valid)}continue}const[type,code]=report.code.split(".");if(code!=="base"){complex.push({type:schema.type,report});continue}valids.add(type)}if(!complex.length){return{errors:error("alternatives.types",{types:[...valids]})}}if(complex.length===1){return{errors:complex[0].report}}return internals.unmatched(failures,error)};internals.unmatched=function(failures,error){const errors=[];for(const failure of failures){errors.push(...failure.reports)}return{errors:error("alternatives.match",Errors.details(errors,{override:false}))}}},3059:(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";const Assert=__webpack_require__(9647);const Base=__webpack_require__(1785);const Common=__webpack_require__(6615);const Messages=__webpack_require__(4941);const internals={};module.exports=Base.extend({type:"any",flags:{only:{default:false}},terms:{alterations:{init:null},examples:{init:null},externals:{init:null},metas:{init:[]},notes:{init:[]},shared:{init:null},tags:{init:[]},whens:{init:null}},rules:{custom:{method(method,description){Assert(typeof method==="function","Method must be a function");Assert(description===undefined||description&&typeof description==="string","Description must be a non-empty string");return this.$_addRule({name:"custom",args:{method,description}})},validate(value,helpers,{method}){try{return method(value,helpers)}catch(err){return helpers.error("any.custom",{error:err})}},args:["method","description"],multi:true},messages:{method(messages){return this.prefs({messages})}},shared:{method(schema){Assert(Common.isSchema(schema)&&schema._flags.id,"Schema must be a schema with an id");const obj=this.clone();obj.$_terms.shared=obj.$_terms.shared||[];obj.$_terms.shared.push(schema);obj.$_mutateRegister(schema);return obj}},warning:{method(code,local){Assert(code&&typeof code==="string","Invalid warning code");return this.$_addRule({name:"warning",args:{code,local},warn:true})},validate(value,helpers,{code,local}){return helpers.error(code,local)},args:["code","local"],multi:true}},modifiers:{keep(rule,enabled=true){rule.keep=enabled},message(rule,message){rule.message=Messages.compile(message)},warn(rule,enabled=true){rule.warn=enabled}},manifest:{build(obj,desc){for(const key in desc){const values=desc[key];if(["examples","externals","metas","notes","tags"].includes(key)){for(const value of values){obj=obj[key.slice(0,-1)](value)}continue}if(key==="alterations"){const alter={};for(const{target,adjuster}of values){alter[target]=adjuster}obj=obj.alter(alter);continue}if(key==="whens"){for(const value of values){const{ref,is,not,then,otherwise,concat}=value;if(concat){obj=obj.concat(concat)}else if(ref){obj=obj.when(ref,{is,not,then,otherwise,switch:value.switch,break:value.break})}else{obj=obj.when(is,{then,otherwise,break:value.break})}}continue}if(key==="shared"){for(const value of values){obj=obj.shared(value)}}}return obj}},messages:{"any.custom":"{{#label}} failed custom validation because {{#error.message}}","any.default":"{{#label}} threw an error when running default method","any.failover":"{{#label}} threw an error when running failover method","any.invalid":"{{#label}} contains an invalid value","any.only":'{{#label}} must be {if(#valids.length == 1, "", "one of ")}{{#valids}}',"any.ref":"{{#label}} {{#arg}} references {{:#ref}} which {{#reason}}","any.required":"{{#label}} is required","any.unknown":"{{#label}} is not allowed"}})},9606:(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";const Assert=__webpack_require__(9647);const DeepEqual=__webpack_require__(5245);const Reach=__webpack_require__(6770);const Any=__webpack_require__(3059);const Common=__webpack_require__(6615);const Compile=__webpack_require__(2194);const internals={};module.exports=Any.extend({type:"array",flags:{single:{default:false},sparse:{default:false}},terms:{items:{init:[],manifest:"schema"},ordered:{init:[],manifest:"schema"},_exclusions:{init:[]},_inclusions:{init:[]},_requireds:{init:[]}},coerce:{from:"object",method(value,{schema,state,prefs}){if(!Array.isArray(value)){return}const sort=schema.$_getRule("sort");if(!sort){return}return internals.sort(schema,value,sort.args.options,state,prefs)}},validate(value,{schema,error}){if(!Array.isArray(value)){if(schema._flags.single){const single=[value];single[Common.symbols.arraySingle]=true;return{value:single}}return{errors:error("array.base")}}if(!schema.$_getRule("items")&&!schema.$_terms.externals){return}return{value:value.slice()}},rules:{has:{method(schema){schema=this.$_compile(schema,{appendPath:true});const obj=this.$_addRule({name:"has",args:{schema}});obj.$_mutateRegister(schema);return obj},validate(value,{state,prefs,error},{schema:has}){const ancestors=[value,...state.ancestors];for(let i=0;i<value.length;++i){const localState=state.localize([...state.path,i],ancestors,has);if(has.$_match(value[i],localState,prefs)){return value}}const patternLabel=has._flags.label;if(patternLabel){return error("array.hasKnown",{patternLabel})}return error("array.hasUnknown",null)},multi:true},items:{method(...schemas){Common.verifyFlat(schemas,"items");const obj=this.$_addRule("items");for(let i=0;i<schemas.length;++i){const type=Common.tryWithPath((()=>this.$_compile(schemas[i])),i,{append:true});obj.$_terms.items.push(type)}return obj.$_mutateRebuild()},validate(value,{schema,error,state,prefs,errorsArray}){const requireds=schema.$_terms._requireds.slice();const ordereds=schema.$_terms.ordered.slice();const inclusions=[...schema.$_terms._inclusions,...requireds];const wasArray=!value[Common.symbols.arraySingle];delete value[Common.symbols.arraySingle];const errors=errorsArray();let il=value.length;for(let i=0;i<il;++i){const item=value[i];let errored=false;let isValid=false;const key=wasArray?i:new Number(i);const path=[...state.path,key];if(!schema._flags.sparse&&item===undefined){errors.push(error("array.sparse",{key,path,pos:i,value:undefined},state.localize(path)));if(prefs.abortEarly){return errors}ordereds.shift();continue}const ancestors=[value,...state.ancestors];for(const exclusion of schema.$_terms._exclusions){if(!exclusion.$_match(item,state.localize(path,ancestors,exclusion),prefs,{presence:"ignore"})){continue}errors.push(error("array.excludes",{pos:i,value:item},state.localize(path)));if(prefs.abortEarly){return errors}errored=true;ordereds.shift();break}if(errored){continue}if(schema.$_terms.ordered.length){if(ordereds.length){const ordered=ordereds.shift();const res=ordered.$_validate(item,state.localize(path,ancestors,ordered),prefs);if(!res.errors){if(ordered._flags.result==="strip"){internals.fastSplice(value,i);--i;--il}else if(!schema._flags.sparse&&res.value===undefined){errors.push(error("array.sparse",{key,path,pos:i,value:undefined},state.localize(path)));if(prefs.abortEarly){return errors}continue}else{value[i]=res.value}}else{errors.push(...res.errors);if(prefs.abortEarly){return errors}}continue}else if(!schema.$_terms.items.length){errors.push(error("array.orderedLength",{pos:i,limit:schema.$_terms.ordered.length}));if(prefs.abortEarly){return errors}break}}const requiredChecks=[];let jl=requireds.length;for(let j=0;j<jl;++j){const localState=state.localize(path,ancestors,requireds[j]);localState.snapshot();const res=requireds[j].$_validate(item,localState,prefs);requiredChecks[j]=res;if(!res.errors){localState.commit();value[i]=res.value;isValid=true;internals.fastSplice(requireds,j);--j;--jl;if(!schema._flags.sparse&&res.value===undefined){errors.push(error("array.sparse",{key,path,pos:i,value:undefined},state.localize(path)));if(prefs.abortEarly){return errors}}break}localState.restore()}if(isValid){continue}const stripUnknown=prefs.stripUnknown&&!!prefs.stripUnknown.arrays||false;jl=inclusions.length;for(const inclusion of inclusions){let res;const previousCheck=requireds.indexOf(inclusion);if(previousCheck!==-1){res=requiredChecks[previousCheck]}else{const localState=state.localize(path,ancestors,inclusion);localState.snapshot();res=inclusion.$_validate(item,localState,prefs);if(!res.errors){localState.commit();if(inclusion._flags.result==="strip"){internals.fastSplice(value,i);--i;--il}else if(!schema._flags.sparse&&res.value===undefined){errors.push(error("array.sparse",{key,path,pos:i,value:undefined},state.localize(path)));errored=true}else{value[i]=res.value}isValid=true;break}localState.restore()}if(jl===1){if(stripUnknown){internals.fastSplice(value,i);--i;--il;isValid=true;break}errors.push(...res.errors);if(prefs.abortEarly){return errors}errored=true;break}}if(errored){continue}if((schema.$_terms._inclusions.length||schema.$_terms._requireds.length)&&!isValid){if(stripUnknown){internals.fastSplice(value,i);--i;--il;continue}errors.push(error("array.includes",{pos:i,value:item},state.localize(path)));if(prefs.abortEarly){return errors}}}if(requireds.length){internals.fillMissedErrors(schema,errors,requireds,value,state,prefs)}if(ordereds.length){internals.fillOrderedErrors(schema,errors,ordereds,value,state,prefs);if(!errors.length){internals.fillDefault(ordereds,value,state,prefs)}}return errors.length?errors:value},priority:true,manifest:false},length:{method(limit){return this.$_addRule({name:"length",args:{limit},operator:"="})},validate(value,helpers,{limit},{name,operator,args}){if(Common.compare(value.length,limit,operator)){return value}return helpers.error("array."+name,{limit:args.limit,value})},args:[{name:"limit",ref:true,assert:Common.limit,message:"must be a positive integer"}]},max:{method(limit){return this.$_addRule({name:"max",method:"length",args:{limit},operator:"<="})}},min:{method(limit){return this.$_addRule({name:"min",method:"length",args:{limit},operator:">="})}},ordered:{method(...schemas){Common.verifyFlat(schemas,"ordered");const obj=this.$_addRule("items");for(let i=0;i<schemas.length;++i){const type=Common.tryWithPath((()=>this.$_compile(schemas[i])),i,{append:true});internals.validateSingle(type,obj);obj.$_mutateRegister(type);obj.$_terms.ordered.push(type)}return obj.$_mutateRebuild()}},single:{method(enabled){const value=enabled===undefined?true:!!enabled;Assert(!value||!this._flags._arrayItems,"Cannot specify single rule when array has array items");return this.$_setFlag("single",value)}},sort:{method(options={}){Common.assertOptions(options,["by","order"]);const settings={order:options.order||"ascending"};if(options.by){settings.by=Compile.ref(options.by,{ancestor:0});Assert(!settings.by.ancestor,"Cannot sort by ancestor")}return this.$_addRule({name:"sort",args:{options:settings}})},validate(value,{error,state,prefs,schema},{options}){const{value:sorted,errors}=internals.sort(schema,value,options,state,prefs);if(errors){return errors}for(let i=0;i<value.length;++i){if(value[i]!==sorted[i]){return error("array.sort",{order:options.order,by:options.by?options.by.key:"value"})}}return value},convert:true},sparse:{method(enabled){const value=enabled===undefined?true:!!enabled;if(this._flags.sparse===value){return this}const obj=value?this.clone():this.$_addRule("items");return obj.$_setFlag("sparse",value,{clone:false})}},unique:{method(comparator,options={}){Assert(!comparator||typeof comparator==="function"||typeof comparator==="string","comparator must be a function or a string");Common.assertOptions(options,["ignoreUndefined","separator"]);const rule={name:"unique",args:{options,comparator}};if(comparator){if(typeof comparator==="string"){const separator=Common.default(options.separator,".");rule.path=separator?comparator.split(separator):[comparator]}else{rule.comparator=comparator}}return this.$_addRule(rule)},validate(value,{state,error,schema},{comparator:raw,options},{comparator,path}){const found={string:Object.create(null),number:Object.create(null),undefined:Object.create(null),boolean:Object.create(null),object:new Map,function:new Map,custom:new Map};const compare=comparator||DeepEqual;const ignoreUndefined=options.ignoreUndefined;for(let i=0;i<value.length;++i){const item=path?Reach(value[i],path):value[i];const records=comparator?found.custom:found[typeof item];Assert(records,"Failed to find unique map container for type",typeof item);if(records instanceof Map){const entries=records.entries();let current;while(!(current=entries.next()).done){if(compare(current.value[0],item)){const localState=state.localize([...state.path,i],[value,...state.ancestors]);const context={pos:i,value:value[i],dupePos:current.value[1],dupeValue:value[current.value[1]]};if(path){context.path=raw}return error("array.unique",context,localState)}}records.set(item,i)}else{if((!ignoreUndefined||item!==undefined)&&records[item]!==undefined){const context={pos:i,value:value[i],dupePos:records[item],dupeValue:value[records[item]]};if(path){context.path=raw}const localState=state.localize([...state.path,i],[value,...state.ancestors]);return error("array.unique",context,localState)}records[item]=i}}return value},args:["comparator","options"],multi:true}},cast:{set:{from:Array.isArray,to(value,helpers){return new Set(value)}}},rebuild(schema){schema.$_terms._inclusions=[];schema.$_terms._exclusions=[];schema.$_terms._requireds=[];for(const type of schema.$_terms.items){internals.validateSingle(type,schema);if(type._flags.presence==="required"){schema.$_terms._requireds.push(type)}else if(type._flags.presence==="forbidden"){schema.$_terms._exclusions.push(type)}else{schema.$_terms._inclusions.push(type)}}for(const type of schema.$_terms.ordered){internals.validateSingle(type,schema)}},manifest:{build(obj,desc){if(desc.items){obj=obj.items(...desc.items)}if(desc.ordered){obj=obj.ordered(...desc.ordered)}return obj}},messages:{"array.base":"{{#label}} must be an array","array.excludes":"{{#label}} contains an excluded value","array.hasKnown":"{{#label}} does not contain at least one required match for type {:#patternLabel}","array.hasUnknown":"{{#label}} does not contain at least one required match","array.includes":"{{#label}} does not match any of the allowed types","array.includesRequiredBoth":"{{#label}} does not contain {{#knownMisses}} and {{#unknownMisses}} other required value(s)","array.includesRequiredKnowns":"{{#label}} does not contain {{#knownMisses}}","array.includesRequiredUnknowns":"{{#label}} does not contain {{#unknownMisses}} required value(s)","array.length":"{{#label}} must contain {{#limit}} items","array.max":"{{#label}} must contain less than or equal to {{#limit}} items","array.min":"{{#label}} must contain at least {{#limit}} items","array.orderedLength":"{{#label}} must contain at most {{#limit}} items","array.sort":"{{#label}} must be sorted in {#order} order by {{#by}}","array.sort.mismatching":"{{#label}} cannot be sorted due to mismatching types","array.sort.unsupported":"{{#label}} cannot be sorted due to unsupported type {#type}","array.sparse":"{{#label}} must not be a sparse array item","array.unique":"{{#label}} contains a duplicate value"}});internals.fillMissedErrors=function(schema,errors,requireds,value,state,prefs){const knownMisses=[];let unknownMisses=0;for(const required of requireds){const label=required._flags.label;if(label){knownMisses.push(label)}else{++unknownMisses}}if(knownMisses.length){if(unknownMisses){errors.push(schema.$_createError("array.includesRequiredBoth",value,{knownMisses,unknownMisses},state,prefs))}else{errors.push(schema.$_createError("array.includesRequiredKnowns",value,{knownMisses},state,prefs))}}else{errors.push(schema.$_createError("array.includesRequiredUnknowns",value,{unknownMisses},state,prefs))}};internals.fillOrderedErrors=function(schema,errors,ordereds,value,state,prefs){const requiredOrdereds=[];for(const ordered of ordereds){if(ordered._flags.presence==="required"){requiredOrdereds.push(ordered)}}if(requiredOrdereds.length){internals.fillMissedErrors(schema,errors,requiredOrdereds,value,state,prefs)}};internals.fillDefault=function(ordereds,value,state,prefs){const overrides=[];let trailingUndefined=true;for(let i=ordereds.length-1;i>=0;--i){const ordered=ordereds[i];const ancestors=[value,...state.ancestors];const override=ordered.$_validate(undefined,state.localize(state.path,ancestors,ordered),prefs).value;if(trailingUndefined){if(override===undefined){continue}trailingUndefined=false}overrides.unshift(override)}if(overrides.length){value.push(...overrides)}};internals.fastSplice=function(arr,i){let pos=i;while(pos<arr.length){arr[pos++]=arr[pos]}--arr.length};internals.validateSingle=function(type,obj){if(type.type==="array"||type._flags._arrayItems){Assert(!obj._flags.single,"Cannot specify array item with single rule enabled");obj.$_setFlag("_arrayItems",true,{clone:false})}};internals.sort=function(schema,value,settings,state,prefs){const order=settings.order==="ascending"?1:-1;const aFirst=-1*order;const bFirst=order;const sort=(a,b)=>{let compare=internals.compare(a,b,aFirst,bFirst);if(compare!==null){return compare}if(settings.by){a=settings.by.resolve(a,state,prefs);b=settings.by.resolve(b,state,prefs)}compare=internals.compare(a,b,aFirst,bFirst);if(compare!==null){return compare}const type=typeof a;if(type!==typeof b){throw schema.$_createError("array.sort.mismatching",value,null,state,prefs)}if(type!=="number"&&type!=="string"){throw schema.$_createError("array.sort.unsupported",value,{type},state,prefs)}if(type==="number"){return(a-b)*order}return a<b?aFirst:bFirst};try{return{value:value.slice().sort(sort)}}catch(err){return{errors:err}}};internals.compare=function(a,b,aFirst,bFirst){if(a===b){return 0}if(a===undefined){return 1}if(b===undefined){return-1}if(a===null){return bFirst}if(b===null){return aFirst}return null}},4788:(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";const Assert=__webpack_require__(9647);const Any=__webpack_require__(3059);const Common=__webpack_require__(6615);const internals={};module.exports=Any.extend({type:"binary",coerce:{from:["string","object"],method(value,{schema}){if(typeof value==="string"||value!==null&&value.type==="Buffer"){try{return{value:Buffer.from(value,schema._flags.encoding)}}catch(ignoreErr){}}}},validate(value,{error}){if(!Buffer.isBuffer(value)){return{value,errors:error("binary.base")}}},rules:{encoding:{method(encoding){Assert(Buffer.isEncoding(encoding),"Invalid encoding:",encoding);return this.$_setFlag("encoding",encoding)}},length:{method(limit){return this.$_addRule({name:"length",method:"length",args:{limit},operator:"="})},validate(value,helpers,{limit},{name,operator,args}){if(Common.compare(value.length,limit,operator)){return value}return helpers.error("binary."+name,{limit:args.limit,value})},args:[{name:"limit",ref:true,assert:Common.limit,message:"must be a positive integer"}]},max:{method(limit){return this.$_addRule({name:"max",method:"length",args:{limit},operator:"<="})}},min:{method(limit){return this.$_addRule({name:"min",method:"length",args:{limit},operator:">="})}}},cast:{string:{from:value=>Buffer.isBuffer(value),to(value,helpers){return value.toString()}}},messages:{"binary.base":"{{#label}} must be a buffer or a string","binary.length":"{{#label}} must be {{#limit}} bytes","binary.max":"{{#label}} must be less than or equal to {{#limit}} bytes","binary.min":"{{#label}} must be at least {{#limit}} bytes"}})},9853:(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";const Assert=__webpack_require__(9647);const Any=__webpack_require__(3059);const Common=__webpack_require__(6615);const Values=__webpack_require__(6417);const internals={};internals.isBool=function(value){return typeof value==="boolean"};module.exports=Any.extend({type:"boolean",flags:{sensitive:{default:false}},terms:{falsy:{init:null,manifest:"values"},truthy:{init:null,manifest:"values"}},coerce(value,{schema}){if(typeof value==="boolean"){return}if(typeof value==="string"){const normalized=schema._flags.sensitive?value:value.toLowerCase();value=normalized==="true"?true:normalized==="false"?false:value}if(typeof value!=="boolean"){value=schema.$_terms.truthy&&schema.$_terms.truthy.has(value,null,null,!schema._flags.sensitive)||(schema.$_terms.falsy&&schema.$_terms.falsy.has(value,null,null,!schema._flags.sensitive)?false:value)}return{value}},validate(value,{error}){if(typeof value!=="boolean"){return{value,errors:error("boolean.base")}}},rules:{truthy:{method(...values){Common.verifyFlat(values,"truthy");const obj=this.clone();obj.$_terms.truthy=obj.$_terms.truthy||new Values;for(let i=0;i<values.length;++i){const value=values[i];Assert(value!==undefined,"Cannot call truthy with undefined");obj.$_terms.truthy.add(value)}return obj}},falsy:{method(...values){Common.verifyFlat(values,"falsy");const obj=this.clone();obj.$_terms.falsy=obj.$_terms.falsy||new Values;for(let i=0;i<values.length;++i){const value=values[i];Assert(value!==undefined,"Cannot call falsy with undefined");obj.$_terms.falsy.add(value)}return obj}},sensitive:{method(enabled=true){return this.$_setFlag("sensitive",enabled)}}},cast:{number:{from:internals.isBool,to(value,helpers){return value?1:0}},string:{from:internals.isBool,to(value,helpers){return value?"true":"false"}}},manifest:{build(obj,desc){if(desc.truthy){obj=obj.truthy(...desc.truthy)}if(desc.falsy){obj=obj.falsy(...desc.falsy)}return obj}},messages:{"boolean.base":"{{#label}} must be a boolean"}})},4340:(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";const Assert=__webpack_require__(9647);const Any=__webpack_require__(3059);const Common=__webpack_require__(6615);const Template=__webpack_require__(6453);const internals={};internals.isDate=function(value){return value instanceof Date};module.exports=Any.extend({type:"date",coerce:{from:["number","string"],method(value,{schema}){return{value:internals.parse(value,schema._flags.format)||value}}},validate(value,{schema,error,prefs}){if(value instanceof Date&&!isNaN(value.getTime())){return}const format=schema._flags.format;if(!prefs.convert||!format||typeof value!=="string"){return{value,errors:error("date.base")}}return{value,errors:error("date.format",{format})}},rules:{compare:{method:false,validate(value,helpers,{date},{name,operator,args}){const to=date==="now"?Date.now():date.getTime();if(Common.compare(value.getTime(),to,operator)){return value}return helpers.error("date."+name,{limit:args.date,value})},args:[{name:"date",ref:true,normalize:date=>date==="now"?date:internals.parse(date),assert:date=>date!==null,message:"must have a valid date format"}]},format:{method(format){Assert(["iso","javascript","unix"].includes(format),"Unknown date format",format);return this.$_setFlag("format",format)}},greater:{method(date){return this.$_addRule({name:"greater",method:"compare",args:{date},operator:">"})}},iso:{method(){return this.format("iso")}},less:{method(date){return this.$_addRule({name:"less",method:"compare",args:{date},operator:"<"})}},max:{method(date){return this.$_addRule({name:"max",method:"compare",args:{date},operator:"<="})}},min:{method(date){return this.$_addRule({name:"min",method:"compare",args:{date},operator:">="})}},timestamp:{method(type="javascript"){Assert(["javascript","unix"].includes(type),'"type" must be one of "javascript, unix"');return this.format(type)}}},cast:{number:{from:internals.isDate,to(value,helpers){return value.getTime()}},string:{from:internals.isDate,to(value,{prefs}){return Template.date(value,prefs)}}},messages:{"date.base":"{{#label}} must be a valid date","date.format":'{{#label}} must be in {msg("date.format." + #format) || #format} format',"date.greater":"{{#label}} must be greater than {{:#limit}}","date.less":"{{#label}} must be less than {{:#limit}}","date.max":"{{#label}} must be less than or equal to {{:#limit}}","date.min":"{{#label}} must be greater than or equal to {{:#limit}}","date.format.iso":"ISO 8601 date","date.format.javascript":"timestamp or number of milliseconds","date.format.unix":"timestamp or number of seconds"}});internals.parse=function(value,format){if(value instanceof Date){return value}if(typeof value!=="string"&&(isNaN(value)||!isFinite(value))){return null}if(/^\s*$/.test(value)){return null}if(format==="iso"){if(!Common.isIsoDate(value)){return null}return internals.date(value.toString())}const original=value;if(typeof value==="string"&&/^[+-]?\d+(\.\d+)?$/.test(value)){value=parseFloat(value)}if(format){if(format==="javascript"){return internals.date(1*value)}if(format==="unix"){return internals.date(1e3*value)}if(typeof original==="string"){return null}}return internals.date(value)};internals.date=function(value){const date=new Date(value);if(!isNaN(date.getTime())){return date}return null}},8601:(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";const Assert=__webpack_require__(9647);const Keys=__webpack_require__(6383);const internals={};module.exports=Keys.extend({type:"function",properties:{typeof:"function"},rules:{arity:{method(n){Assert(Number.isSafeInteger(n)&&n>=0,"n must be a positive integer");return this.$_addRule({name:"arity",args:{n}})},validate(value,helpers,{n}){if(value.length===n){return value}return helpers.error("function.arity",{n})}},class:{method(){return this.$_addRule("class")},validate(value,helpers){if(/^\s*class\s/.test(value.toString())){return value}return helpers.error("function.class",{value})}},minArity:{method(n){Assert(Number.isSafeInteger(n)&&n>0,"n must be a strict positive integer");return this.$_addRule({name:"minArity",args:{n}})},validate(value,helpers,{n}){if(value.length>=n){return value}return helpers.error("function.minArity",{n})}},maxArity:{method(n){Assert(Number.isSafeInteger(n)&&n>=0,"n must be a positive integer");return this.$_addRule({name:"maxArity",args:{n}})},validate(value,helpers,{n}){if(value.length<=n){return value}return helpers.error("function.maxArity",{n})}}},messages:{"function.arity":"{{#label}} must have an arity of {{#n}}","function.class":"{{#label}} must be a class","function.maxArity":"{{#label}} must have an arity lesser or equal to {{#n}}","function.minArity":"{{#label}} must have an arity greater or equal to {{#n}}"}})},6383:(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";const ApplyToDefaults=__webpack_require__(3176);const Assert=__webpack_require__(9647);const Clone=__webpack_require__(3737);const Topo=__webpack_require__(9484);const Any=__webpack_require__(3059);const Common=__webpack_require__(6615);const Compile=__webpack_require__(2194);const Errors=__webpack_require__(9963);const Ref=__webpack_require__(5263);const Template=__webpack_require__(6453);const internals={renameDefaults:{alias:false,multiple:false,override:false}};module.exports=Any.extend({type:"_keys",properties:{typeof:"object"},flags:{unknown:{default:false}},terms:{dependencies:{init:null},keys:{init:null,manifest:{mapped:{from:"schema",to:"key"}}},patterns:{init:null},renames:{init:null}},args(schema,keys){return schema.keys(keys)},validate(value,{schema,error,state,prefs}){if(!value||typeof value!==schema.$_property("typeof")||Array.isArray(value)){return{value,errors:error("object.base",{type:schema.$_property("typeof")})}}if(!schema.$_terms.renames&&!schema.$_terms.dependencies&&!schema.$_terms.keys&&!schema.$_terms.patterns&&!schema.$_terms.externals){return}value=internals.clone(value,prefs);const errors=[];if(schema.$_terms.renames&&!internals.rename(schema,value,state,prefs,errors)){return{value,errors}}if(!schema.$_terms.keys&&!schema.$_terms.patterns&&!schema.$_terms.dependencies){return{value,errors}}const unprocessed=new Set(Object.keys(value));if(schema.$_terms.keys){const ancestors=[value,...state.ancestors];for(const child of schema.$_terms.keys){const key=child.key;const item=value[key];unprocessed.delete(key);const localState=state.localize([...state.path,key],ancestors,child);const result=child.schema.$_validate(item,localState,prefs);if(result.errors){if(prefs.abortEarly){return{value,errors:result.errors}}if(result.value!==undefined){value[key]=result.value}errors.push(...result.errors)}else if(child.schema._flags.result==="strip"||result.value===undefined&&item!==undefined){delete value[key]}else if(result.value!==undefined){value[key]=result.value}}}if(unprocessed.size||schema._flags._hasPatternMatch){const early=internals.unknown(schema,value,unprocessed,errors,state,prefs);if(early){return early}}if(schema.$_terms.dependencies){for(const dep of schema.$_terms.dependencies){if(dep.key!==null&&internals.isPresent(dep.options)(dep.key.resolve(value,state,prefs,null,{shadow:false}))===false){continue}const failed=internals.dependencies[dep.rel](schema,dep,value,state,prefs);if(failed){const report=schema.$_createError(failed.code,value,failed.context,state,prefs);if(prefs.abortEarly){return{value,errors:report}}errors.push(report)}}}return{value,errors}},rules:{and:{method(...peers){Common.verifyFlat(peers,"and");return internals.dependency(this,"and",null,peers)}},append:{method(schema){if(schema===null||schema===undefined||Object.keys(schema).length===0){return this}return this.keys(schema)}},assert:{method(subject,schema,message){if(!Template.isTemplate(subject)){subject=Compile.ref(subject)}Assert(message===undefined||typeof message==="string","Message must be a string");schema=this.$_compile(schema,{appendPath:true});const obj=this.$_addRule({name:"assert",args:{subject,schema,message}});obj.$_mutateRegister(subject);obj.$_mutateRegister(schema);return obj},validate(value,{error,prefs,state},{subject,schema,message}){const about=subject.resolve(value,state,prefs);const path=Ref.isRef(subject)?subject.absolute(state):[];if(schema.$_match(about,state.localize(path,[value,...state.ancestors],schema),prefs)){return value}return error("object.assert",{subject,message})},args:["subject","schema","message"],multi:true},instance:{method(constructor,name){Assert(typeof constructor==="function","constructor must be a function");name=name||constructor.name;return this.$_addRule({name:"instance",args:{constructor,name}})},validate(value,helpers,{constructor,name}){if(value instanceof constructor){return value}return helpers.error("object.instance",{type:name,value})},args:["constructor","name"]},keys:{method(schema){Assert(schema===undefined||typeof schema==="object","Object schema must be a valid object");Assert(!Common.isSchema(schema),"Object schema cannot be a joi schema");const obj=this.clone();if(!schema){obj.$_terms.keys=null}else if(!Object.keys(schema).length){obj.$_terms.keys=new internals.Keys}else{obj.$_terms.keys=obj.$_terms.keys?obj.$_terms.keys.filter((child=>!schema.hasOwnProperty(child.key))):new internals.Keys;for(const key in schema){Common.tryWithPath((()=>obj.$_terms.keys.push({key,schema:this.$_compile(schema[key])})),key)}}return obj.$_mutateRebuild()}},length:{method(limit){return this.$_addRule({name:"length",args:{limit},operator:"="})},validate(value,helpers,{limit},{name,operator,args}){if(Common.compare(Object.keys(value).length,limit,operator)){return value}return helpers.error("object."+name,{limit:args.limit,value})},args:[{name:"limit",ref:true,assert:Common.limit,message:"must be a positive integer"}]},max:{method(limit){return this.$_addRule({name:"max",method:"length",args:{limit},operator:"<="})}},min:{method(limit){return this.$_addRule({name:"min",method:"length",args:{limit},operator:">="})}},nand:{method(...peers){Common.verifyFlat(peers,"nand");return internals.dependency(this,"nand",null,peers)}},or:{method(...peers){Common.verifyFlat(peers,"or");return internals.dependency(this,"or",null,peers)}},oxor:{method(...peers){return internals.dependency(this,"oxor",null,peers)}},pattern:{method(pattern,schema,options={}){const isRegExp=pattern instanceof RegExp;if(!isRegExp){pattern=this.$_compile(pattern,{appendPath:true})}Assert(schema!==undefined,"Invalid rule");Common.assertOptions(options,["fallthrough","matches"]);if(isRegExp){Assert(!pattern.flags.includes("g")&&!pattern.flags.includes("y"),"pattern should not use global or sticky mode")}schema=this.$_compile(schema,{appendPath:true});const obj=this.clone();obj.$_terms.patterns=obj.$_terms.patterns||[];const config={[isRegExp?"regex":"schema"]:pattern,rule:schema};if(options.matches){config.matches=this.$_compile(options.matches);if(config.matches.type!=="array"){config.matches=config.matches.$_root.array().items(config.matches)}obj.$_mutateRegister(config.matches);obj.$_setFlag("_hasPatternMatch",true,{clone:false})}if(options.fallthrough){config.fallthrough=true}obj.$_terms.patterns.push(config);obj.$_mutateRegister(schema);return obj}},ref:{method(){return this.$_addRule("ref")},validate(value,helpers){if(Ref.isRef(value)){return value}return helpers.error("object.refType",{value})}},regex:{method(){return this.$_addRule("regex")},validate(value,helpers){if(value instanceof RegExp){return value}return helpers.error("object.regex",{value})}},rename:{method(from,to,options={}){Assert(typeof from==="string"||from instanceof RegExp,"Rename missing the from argument");Assert(typeof to==="string"||to instanceof Template,"Invalid rename to argument");Assert(to!==from,"Cannot rename key to same name:",from);Common.assertOptions(options,["alias","ignoreUndefined","override","multiple"]);const obj=this.clone();obj.$_terms.renames=obj.$_terms.renames||[];for(const rename of obj.$_terms.renames){Assert(rename.from!==from,"Cannot rename the same key multiple times")}if(to instanceof Template){obj.$_mutateRegister(to)}obj.$_terms.renames.push({from,to,options:ApplyToDefaults(internals.renameDefaults,options)});return obj}},schema:{method(type="any"){return this.$_addRule({name:"schema",args:{type}})},validate(value,helpers,{type}){if(Common.isSchema(value)&&(type==="any"||value.type===type)){return value}return helpers.error("object.schema",{type})}},unknown:{method(allow){return this.$_setFlag("unknown",allow!==false)}},with:{method(key,peers,options={}){return internals.dependency(this,"with",key,peers,options)}},without:{method(key,peers,options={}){return internals.dependency(this,"without",key,peers,options)}},xor:{method(...peers){Common.verifyFlat(peers,"xor");return internals.dependency(this,"xor",null,peers)}}},overrides:{default(value,options){if(value===undefined){value=Common.symbols.deepDefault}return this.$_parent("default",value,options)}},rebuild(schema){if(schema.$_terms.keys){const topo=new Topo.Sorter;for(const child of schema.$_terms.keys){Common.tryWithPath((()=>topo.add(child,{after:child.schema.$_rootReferences(),group:child.key})),child.key)}schema.$_terms.keys=new internals.Keys(...topo.nodes)}},manifest:{build(obj,desc){if(desc.keys){obj=obj.keys(desc.keys)}if(desc.dependencies){for(const{rel,key=null,peers,options}of desc.dependencies){obj=internals.dependency(obj,rel,key,peers,options)}}if(desc.patterns){for(const{regex,schema,rule,fallthrough,matches}of desc.patterns){obj=obj.pattern(regex||schema,rule,{fallthrough,matches})}}if(desc.renames){for(const{from,to,options}of desc.renames){obj=obj.rename(from,to,options)}}return obj}},messages:{"object.and":"{{#label}} contains {{#presentWithLabels}} without its required peers {{#missingWithLabels}}","object.assert":'{{#label}} is invalid because {if(#subject.key, `"` + #subject.key + `" failed to ` + (#message || "pass the assertion test"), #message || "the assertion failed")}',"object.base":"{{#label}} must be of type {{#type}}","object.instance":"{{#label}} must be an instance of {{:#type}}","object.length":'{{#label}} must have {{#limit}} key{if(#limit == 1, "", "s")}',"object.max":'{{#label}} must have less than or equal to {{#limit}} key{if(#limit == 1, "", "s")}',"object.min":'{{#label}} must have at least {{#limit}} key{if(#limit == 1, "", "s")}',"object.missing":"{{#label}} must contain at least one of {{#peersWithLabels}}","object.nand":"{{:#mainWithLabel}} must not exist simultaneously with {{#peersWithLabels}}","object.oxor":"{{#label}} contains a conflict between optional exclusive peers {{#peersWithLabels}}","object.pattern.match":"{{#label}} keys failed to match pattern requirements","object.refType":"{{#label}} must be a Joi reference","object.regex":"{{#label}} must be a RegExp object","object.rename.multiple":"{{#label}} cannot rename {{:#from}} because multiple renames are disabled and another key was already renamed to {{:#to}}","object.rename.override":"{{#label}} cannot rename {{:#from}} because override is disabled and target {{:#to}} exists","object.schema":"{{#label}} must be a Joi schema of {{#type}} type","object.unknown":"{{#label}} is not allowed","object.with":"{{:#mainWithLabel}} missing required peer {{:#peerWithLabel}}","object.without":"{{:#mainWithLabel}} conflict with forbidden peer {{:#peerWithLabel}}","object.xor":"{{#label}} contains a conflict between exclusive peers {{#peersWithLabels}}"}});internals.clone=function(value,prefs){if(typeof value==="object"){if(prefs.nonEnumerables){return Clone(value,{shallow:true})}const clone=Object.create(Object.getPrototypeOf(value));Object.assign(clone,value);return clone}const clone=function(...args){return value.apply(this,args)};clone.prototype=Clone(value.prototype);Object.defineProperty(clone,"name",{value:value.name,writable:false});Object.defineProperty(clone,"length",{value:value.length,writable:false});Object.assign(clone,value);return clone};internals.dependency=function(schema,rel,key,peers,options){Assert(key===null||typeof key==="string",rel,"key must be a strings");if(!options){options=peers.length>1&&typeof peers[peers.length-1]==="object"?peers.pop():{}}Common.assertOptions(options,["separator","isPresent"]);peers=[].concat(peers);const separator=Common.default(options.separator,".");const paths=[];for(const peer of peers){Assert(typeof peer==="string",rel,"peers must be strings");paths.push(Compile.ref(peer,{separator,ancestor:0,prefix:false}))}if(key!==null){key=Compile.ref(key,{separator,ancestor:0,prefix:false})}const obj=schema.clone();obj.$_terms.dependencies=obj.$_terms.dependencies||[];obj.$_terms.dependencies.push(new internals.Dependency(rel,key,paths,peers,options));return obj};internals.dependencies={and(schema,dep,value,state,prefs){const missing=[];const present=[];const count=dep.peers.length;const isPresent=internals.isPresent(dep.options);for(const peer of dep.peers){if(isPresent(peer.resolve(value,state,prefs,null,{shadow:false}))===false){missing.push(peer.key)}else{present.push(peer.key)}}if(missing.length!==count&&present.length!==count){return{code:"object.and",context:{present,presentWithLabels:internals.keysToLabels(schema,present),missing,missingWithLabels:internals.keysToLabels(schema,missing)}}}},nand(schema,dep,value,state,prefs){const present=[];const isPresent=internals.isPresent(dep.options);for(const peer of dep.peers){if(isPresent(peer.resolve(value,state,prefs,null,{shadow:false}))){present.push(peer.key)}}if(present.length!==dep.peers.length){return}const main=dep.paths[0];const values=dep.paths.slice(1);return{code:"object.nand",context:{main,mainWithLabel:internals.keysToLabels(schema,main),peers:values,peersWithLabels:internals.keysToLabels(schema,values)}}},or(schema,dep,value,state,prefs){const isPresent=internals.isPresent(dep.options);for(const peer of dep.peers){if(isPresent(peer.resolve(value,state,prefs,null,{shadow:false}))){return}}return{code:"object.missing",context:{peers:dep.paths,peersWithLabels:internals.keysToLabels(schema,dep.paths)}}},oxor(schema,dep,value,state,prefs){const present=[];const isPresent=internals.isPresent(dep.options);for(const peer of dep.peers){if(isPresent(peer.resolve(value,state,prefs,null,{shadow:false}))){present.push(peer.key)}}if(!present.length||present.length===1){return}const context={peers:dep.paths,peersWithLabels:internals.keysToLabels(schema,dep.paths)};context.present=present;context.presentWithLabels=internals.keysToLabels(schema,present);return{code:"object.oxor",context}},with(schema,dep,value,state,prefs){const isPresent=internals.isPresent(dep.options);for(const peer of dep.peers){if(isPresent(peer.resolve(value,state,prefs,null,{shadow:false}))===false){return{code:"object.with",context:{main:dep.key.key,mainWithLabel:internals.keysToLabels(schema,dep.key.key),peer:peer.key,peerWithLabel:internals.keysToLabels(schema,peer.key)}}}}},without(schema,dep,value,state,prefs){const isPresent=internals.isPresent(dep.options);for(const peer of dep.peers){if(isPresent(peer.resolve(value,state,prefs,null,{shadow:false}))){return{code:"object.without",context:{main:dep.key.key,mainWithLabel:internals.keysToLabels(schema,dep.key.key),peer:peer.key,peerWithLabel:internals.keysToLabels(schema,peer.key)}}}}},xor(schema,dep,value,state,prefs){const present=[];const isPresent=internals.isPresent(dep.options);for(const peer of dep.peers){if(isPresent(peer.resolve(value,state,prefs,null,{shadow:false}))){present.push(peer.key)}}if(present.length===1){return}const context={peers:dep.paths,peersWithLabels:internals.keysToLabels(schema,dep.paths)};if(present.length===0){return{code:"object.missing",context}}context.present=present;context.presentWithLabels=internals.keysToLabels(schema,present);return{code:"object.xor",context}}};internals.keysToLabels=function(schema,keys){if(Array.isArray(keys)){return keys.map((key=>schema.$_mapLabels(key)))}return schema.$_mapLabels(keys)};internals.isPresent=function(options){return typeof options.isPresent==="function"?options.isPresent:resolved=>resolved!==undefined};internals.rename=function(schema,value,state,prefs,errors){const renamed={};for(const rename of schema.$_terms.renames){const matches=[];const pattern=typeof rename.from!=="string";if(!pattern){if(Object.prototype.hasOwnProperty.call(value,rename.from)&&(value[rename.from]!==undefined||!rename.options.ignoreUndefined)){matches.push(rename)}}else{for(const from in value){if(value[from]===undefined&&rename.options.ignoreUndefined){continue}if(from===rename.to){continue}const match=rename.from.exec(from);if(!match){continue}matches.push({from,to:rename.to,match})}}for(const match of matches){const from=match.from;let to=match.to;if(to instanceof Template){to=to.render(value,state,prefs,match.match)}if(from===to){continue}if(!rename.options.multiple&&renamed[to]){errors.push(schema.$_createError("object.rename.multiple",value,{from,to,pattern},state,prefs));if(prefs.abortEarly){return false}}if(Object.prototype.hasOwnProperty.call(value,to)&&!rename.options.override&&!renamed[to]){errors.push(schema.$_createError("object.rename.override",value,{from,to,pattern},state,prefs));if(prefs.abortEarly){return false}}if(value[from]===undefined){delete value[to]}else{value[to]=value[from]}renamed[to]=true;if(!rename.options.alias){delete value[from]}}}return true};internals.unknown=function(schema,value,unprocessed,errors,state,prefs){if(schema.$_terms.patterns){let hasMatches=false;const matches=schema.$_terms.patterns.map((pattern=>{if(pattern.matches){hasMatches=true;return[]}}));const ancestors=[value,...state.ancestors];for(const key of unprocessed){const item=value[key];const path=[...state.path,key];for(let i=0;i<schema.$_terms.patterns.length;++i){const pattern=schema.$_terms.patterns[i];if(pattern.regex){const match=pattern.regex.test(key);state.mainstay.tracer.debug(state,"rule",`pattern.${i}`,match?"pass":"error");if(!match){continue}}else{if(!pattern.schema.$_match(key,state.nest(pattern.schema,`pattern.${i}`),prefs)){continue}}unprocessed.delete(key);const localState=state.localize(path,ancestors,{schema:pattern.rule,key});const result=pattern.rule.$_validate(item,localState,prefs);if(result.errors){if(prefs.abortEarly){return{value,errors:result.errors}}errors.push(...result.errors)}if(pattern.matches){matches[i].push(key)}value[key]=result.value;if(!pattern.fallthrough){break}}}if(hasMatches){for(let i=0;i<matches.length;++i){const match=matches[i];if(!match){continue}const stpm=schema.$_terms.patterns[i].matches;const localState=state.localize(state.path,ancestors,stpm);const result=stpm.$_validate(match,localState,prefs);if(result.errors){const details=Errors.details(result.errors,{override:false});details.matches=match;const report=schema.$_createError("object.pattern.match",value,details,state,prefs);if(prefs.abortEarly){return{value,errors:report}}errors.push(report)}}}}if(!unprocessed.size||!schema.$_terms.keys&&!schema.$_terms.patterns){return}if(prefs.stripUnknown&&!schema._flags.unknown||prefs.skipFunctions){const stripUnknown=prefs.stripUnknown?prefs.stripUnknown===true?true:!!prefs.stripUnknown.objects:false;for(const key of unprocessed){if(stripUnknown){delete value[key];unprocessed.delete(key)}else if(typeof value[key]==="function"){unprocessed.delete(key)}}}const forbidUnknown=!Common.default(schema._flags.unknown,prefs.allowUnknown);if(forbidUnknown){for(const unprocessedKey of unprocessed){const localState=state.localize([...state.path,unprocessedKey],[]);const report=schema.$_createError("object.unknown",value[unprocessedKey],{child:unprocessedKey},localState,prefs,{flags:false});if(prefs.abortEarly){return{value,errors:report}}errors.push(report)}}};internals.Dependency=class{constructor(rel,key,peers,paths,options){this.rel=rel;this.key=key;this.peers=peers;this.paths=paths;this.options=options}describe(){const desc={rel:this.rel,peers:this.paths};if(this.key!==null){desc.key=this.key.key}if(this.peers[0].separator!=="."){desc.options={...desc.options,separator:this.peers[0].separator}}if(this.options.isPresent){desc.options={...desc.options,isPresent:this.options.isPresent}}return desc}};internals.Keys=class extends Array{concat(source){const result=this.slice();const keys=new Map;for(let i=0;i<result.length;++i){keys.set(result[i].key,i)}for(const item of source){const key=item.key;const pos=keys.get(key);if(pos!==undefined){result[pos]={key,schema:result[pos].schema.concat(item.schema)}}else{result.push(item)}}return result}}},2544:(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";const Assert=__webpack_require__(9647);const Any=__webpack_require__(3059);const Common=__webpack_require__(6615);const Compile=__webpack_require__(2194);const Errors=__webpack_require__(9963);const internals={};module.exports=Any.extend({type:"link",properties:{schemaChain:true},terms:{link:{init:null,manifest:"single",register:false}},args(schema,ref){return schema.ref(ref)},validate(value,{schema,state,prefs}){Assert(schema.$_terms.link,"Uninitialized link schema");const linked=internals.generate(schema,value,state,prefs);const ref=schema.$_terms.link[0].ref;return linked.$_validate(value,state.nest(linked,`link:${ref.display}:${linked.type}`),prefs)},generate(schema,value,state,prefs){return internals.generate(schema,value,state,prefs)},rules:{ref:{method(ref){Assert(!this.$_terms.link,"Cannot reinitialize schema");ref=Compile.ref(ref);Assert(ref.type==="value"||ref.type==="local","Invalid reference type:",ref.type);Assert(ref.type==="local"||ref.ancestor==="root"||ref.ancestor>0,"Link cannot reference itself");const obj=this.clone();obj.$_terms.link=[{ref}];return obj}},relative:{method(enabled=true){return this.$_setFlag("relative",enabled)}}},overrides:{concat(source){Assert(this.$_terms.link,"Uninitialized link schema");Assert(Common.isSchema(source),"Invalid schema object");Assert(source.type!=="link","Cannot merge type link with another link");const obj=this.clone();if(!obj.$_terms.whens){obj.$_terms.whens=[]}obj.$_terms.whens.push({concat:source});return obj.$_mutateRebuild()}},manifest:{build(obj,desc){Assert(desc.link,"Invalid link description missing link");return obj.ref(desc.link)}}});internals.generate=function(schema,value,state,prefs){let linked=state.mainstay.links.get(schema);if(linked){return linked._generate(value,state,prefs).schema}const ref=schema.$_terms.link[0].ref;const{perspective,path}=internals.perspective(ref,state);internals.assert(perspective,"which is outside of schema boundaries",ref,schema,state,prefs);try{linked=path.length?perspective.$_reach(path):perspective}catch(ignoreErr){internals.assert(false,"to non-existing schema",ref,schema,state,prefs)}internals.assert(linked.type!=="link","which is another link",ref,schema,state,prefs);if(!schema._flags.relative){state.mainstay.links.set(schema,linked)}return linked._generate(value,state,prefs).schema};internals.perspective=function(ref,state){if(ref.type==="local"){for(const{schema,key}of state.schemas){const id=schema._flags.id||key;if(id===ref.path[0]){return{perspective:schema,path:ref.path.slice(1)}}if(schema.$_terms.shared){for(const shared of schema.$_terms.shared){if(shared._flags.id===ref.path[0]){return{perspective:shared,path:ref.path.slice(1)}}}}}return{perspective:null,path:null}}if(ref.ancestor==="root"){return{perspective:state.schemas[state.schemas.length-1].schema,path:ref.path}}return{perspective:state.schemas[ref.ancestor]&&state.schemas[ref.ancestor].schema,path:ref.path}};internals.assert=function(condition,message,ref,schema,state,prefs){if(condition){return}Assert(false,`"${Errors.label(schema._flags,state,prefs)}" contains link reference "${ref.display}" ${message}`)}},4264:(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";const Assert=__webpack_require__(9647);const Any=__webpack_require__(3059);const Common=__webpack_require__(6615);const internals={numberRx:/^\s*[+-]?(?:(?:\d+(?:\.\d*)?)|(?:\.\d+))(?:e([+-]?\d+))?\s*$/i,precisionRx:/(?:\.(\d+))?(?:[eE]([+-]?\d+))?$/,exponentialPartRegex:/[eE][+-]?\d+$/,leadingSignAndZerosRegex:/^[+-]?(0*)?/,dotRegex:/\./,trailingZerosRegex:/0+$/};module.exports=Any.extend({type:"number",flags:{unsafe:{default:false}},coerce:{from:"string",method(value,{schema,error}){const matches=value.match(internals.numberRx);if(!matches){return}value=value.trim();const result={value:parseFloat(value)};if(result.value===0){result.value=0}if(!schema._flags.unsafe){if(value.match(/e/i)){if(internals.extractSignificantDigits(value)!==internals.extractSignificantDigits(String(result.value))){result.errors=error("number.unsafe");return result}}else{const string=result.value.toString();if(string.match(/e/i)){return result}if(string!==internals.normalizeDecimal(value)){result.errors=error("number.unsafe");return result}}}return result}},validate(value,{schema,error,prefs}){if(value===Infinity||value===-Infinity){return{value,errors:error("number.infinity")}}if(!Common.isNumber(value)){return{value,errors:error("number.base")}}const result={value};if(prefs.convert){const rule=schema.$_getRule("precision");if(rule){const precision=Math.pow(10,rule.args.limit);result.value=Math.round(result.value*precision)/precision}}if(result.value===0){result.value=0}if(!schema._flags.unsafe&&(value>Number.MAX_SAFE_INTEGER||value<Number.MIN_SAFE_INTEGER)){result.errors=error("number.unsafe")}return result},rules:{compare:{method:false,validate(value,helpers,{limit},{name,operator,args}){if(Common.compare(value,limit,operator)){return value}return helpers.error("number."+name,{limit:args.limit,value})},args:[{name:"limit",ref:true,assert:Common.isNumber,message:"must be a number"}]},greater:{method(limit){return this.$_addRule({name:"greater",method:"compare",args:{limit},operator:">"})}},integer:{method(){return this.$_addRule("integer")},validate(value,helpers){if(Math.trunc(value)-value===0){return value}return helpers.error("number.integer")}},less:{method(limit){return this.$_addRule({name:"less",method:"compare",args:{limit},operator:"<"})}},max:{method(limit){return this.$_addRule({name:"max",method:"compare",args:{limit},operator:"<="})}},min:{method(limit){return this.$_addRule({name:"min",method:"compare",args:{limit},operator:">="})}},multiple:{method(base){return this.$_addRule({name:"multiple",args:{base}})},validate(value,helpers,{base},options){if(value*(1/base)%1===0){return value}return helpers.error("number.multiple",{multiple:options.args.base,value})},args:[{name:"base",ref:true,assert:value=>typeof value==="number"&&isFinite(value)&&value>0,message:"must be a positive number"}],multi:true},negative:{method(){return this.sign("negative")}},port:{method(){return this.$_addRule("port")},validate(value,helpers){if(Number.isSafeInteger(value)&&value>=0&&value<=65535){return value}return helpers.error("number.port")}},positive:{method(){return this.sign("positive")}},precision:{method(limit){Assert(Number.isSafeInteger(limit),"limit must be an integer");return this.$_addRule({name:"precision",args:{limit}})},validate(value,helpers,{limit}){const places=value.toString().match(internals.precisionRx);const decimals=Math.max((places[1]?places[1].length:0)-(places[2]?parseInt(places[2],10):0),0);if(decimals<=limit){return value}return helpers.error("number.precision",{limit,value})},convert:true},sign:{method(sign){Assert(["negative","positive"].includes(sign),"Invalid sign",sign);return this.$_addRule({name:"sign",args:{sign}})},validate(value,helpers,{sign}){if(sign==="negative"&&value<0||sign==="positive"&&value>0){return value}return helpers.error(`number.${sign}`)}},unsafe:{method(enabled=true){Assert(typeof enabled==="boolean","enabled must be a boolean");return this.$_setFlag("unsafe",enabled)}}},cast:{string:{from:value=>typeof value==="number",to(value,helpers){return value.toString()}}},messages:{"number.base":"{{#label}} must be a number","number.greater":"{{#label}} must be greater than {{#limit}}","number.infinity":"{{#label}} cannot be infinity","number.integer":"{{#label}} must be an integer","number.less":"{{#label}} must be less than {{#limit}}","number.max":"{{#label}} must be less than or equal to {{#limit}}","number.min":"{{#label}} must be greater than or equal to {{#limit}}","number.multiple":"{{#label}} must be a multiple of {{#multiple}}","number.negative":"{{#label}} must be a negative number","number.port":"{{#label}} must be a valid port","number.positive":"{{#label}} must be a positive number","number.precision":"{{#label}} must have no more than {{#limit}} decimal places","number.unsafe":"{{#label}} must be a safe number"}});internals.extractSignificantDigits=function(value){return value.replace(internals.exponentialPartRegex,"").replace(internals.dotRegex,"").replace(internals.trailingZerosRegex,"").replace(internals.leadingSignAndZerosRegex,"")};internals.normalizeDecimal=function(str){str=str.replace(/^\+/,"").replace(/\.0*$/,"").replace(/^(-?)\.([^\.]*)$/,"$10.$2").replace(/^(-?)0+([0-9])/,"$1$2");if(str.includes(".")&&str.endsWith("0")){str=str.replace(/0+$/,"")}if(str==="-0"){return"0"}return str}},1942:(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";const Keys=__webpack_require__(6383);const internals={};module.exports=Keys.extend({type:"object",cast:{map:{from:value=>value&&typeof value==="object",to(value,helpers){return new Map(Object.entries(value))}}}})},8439:(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";const Assert=__webpack_require__(9647);const Domain=__webpack_require__(9253);const Email=__webpack_require__(7558);const Ip=__webpack_require__(7531);const EscapeRegex=__webpack_require__(2573);const Tlds=__webpack_require__(1254);const Uri=__webpack_require__(1747);const Any=__webpack_require__(3059);const Common=__webpack_require__(6615);const internals={tlds:Tlds instanceof Set?{tlds:{allow:Tlds,deny:null}}:false,base64Regex:{true:{true:/^(?:[\w\-]{2}[\w\-]{2})*(?:[\w\-]{2}==|[\w\-]{3}=)?$/,false:/^(?:[A-Za-z0-9+\/]{2}[A-Za-z0-9+\/]{2})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$/},false:{true:/^(?:[\w\-]{2}[\w\-]{2})*(?:[\w\-]{2}(==)?|[\w\-]{3}=?)?$/,false:/^(?:[A-Za-z0-9+\/]{2}[A-Za-z0-9+\/]{2})*(?:[A-Za-z0-9+\/]{2}(==)?|[A-Za-z0-9+\/]{3}=?)?$/}},dataUriRegex:/^data:[\w+.-]+\/[\w+.-]+;((charset=[\w-]+|base64),)?(.*)$/,hexRegex:/^[a-f0-9]+$/i,ipRegex:Ip.regex({cidr:"forbidden"}).regex,isoDurationRegex:/^P(?!$)(\d+Y)?(\d+M)?(\d+W)?(\d+D)?(T(?=\d)(\d+H)?(\d+M)?(\d+S)?)?$/,guidBrackets:{"{":"}","[":"]","(":")","":""},guidVersions:{uuidv1:"1",uuidv2:"2",uuidv3:"3",uuidv4:"4",uuidv5:"5",uuidv6:"6",uuidv7:"7",uuidv8:"8"},guidSeparators:new Set([undefined,true,false,"-",":"]),normalizationForms:["NFC","NFD","NFKC","NFKD"]};module.exports=Any.extend({type:"string",flags:{insensitive:{default:false},truncate:{default:false}},terms:{replacements:{init:null}},coerce:{from:"string",method(value,{schema,state,prefs}){const normalize=schema.$_getRule("normalize");if(normalize){value=value.normalize(normalize.args.form)}const casing=schema.$_getRule("case");if(casing){value=casing.args.direction==="upper"?value.toLocaleUpperCase():value.toLocaleLowerCase()}const trim=schema.$_getRule("trim");if(trim&&trim.args.enabled){value=value.trim()}if(schema.$_terms.replacements){for(const replacement of schema.$_terms.replacements){value=value.replace(replacement.pattern,replacement.replacement)}}const hex=schema.$_getRule("hex");if(hex&&hex.args.options.byteAligned&&value.length%2!==0){value=`0${value}`}if(schema.$_getRule("isoDate")){const iso=internals.isoDate(value);if(iso){value=iso}}if(schema._flags.truncate){const rule=schema.$_getRule("max");if(rule){let limit=rule.args.limit;if(Common.isResolvable(limit)){limit=limit.resolve(value,state,prefs);if(!Common.limit(limit)){return{value,errors:schema.$_createError("any.ref",limit,{ref:rule.args.limit,arg:"limit",reason:"must be a positive integer"},state,prefs)}}}value=value.slice(0,limit)}}return{value}}},validate(value,{schema,error}){if(typeof value!=="string"){return{value,errors:error("string.base")}}if(value===""){const min=schema.$_getRule("min");if(min&&min.args.limit===0){return}return{value,errors:error("string.empty")}}},rules:{alphanum:{method(){return this.$_addRule("alphanum")},validate(value,helpers){if(/^[a-zA-Z0-9]+$/.test(value)){return value}return helpers.error("string.alphanum")}},base64:{method(options={}){Common.assertOptions(options,["paddingRequired","urlSafe"]);options={urlSafe:false,paddingRequired:true,...options};Assert(typeof options.paddingRequired==="boolean","paddingRequired must be boolean");Assert(typeof options.urlSafe==="boolean","urlSafe must be boolean");return this.$_addRule({name:"base64",args:{options}})},validate(value,helpers,{options}){const regex=internals.base64Regex[options.paddingRequired][options.urlSafe];if(regex.test(value)){return value}return helpers.error("string.base64")}},case:{method(direction){Assert(["lower","upper"].includes(direction),"Invalid case:",direction);return this.$_addRule({name:"case",args:{direction}})},validate(value,helpers,{direction}){if(direction==="lower"&&value===value.toLocaleLowerCase()||direction==="upper"&&value===value.toLocaleUpperCase()){return value}return helpers.error(`string.${direction}case`)},convert:true},creditCard:{method(){return this.$_addRule("creditCard")},validate(value,helpers){let i=value.length;let sum=0;let mul=1;while(i--){const char=value.charAt(i)*mul;sum=sum+(char-(char>9)*9);mul=mul^3}if(sum>0&&sum%10===0){return value}return helpers.error("string.creditCard")}},dataUri:{method(options={}){Common.assertOptions(options,["paddingRequired"]);options={paddingRequired:true,...options};Assert(typeof options.paddingRequired==="boolean","paddingRequired must be boolean");return this.$_addRule({name:"dataUri",args:{options}})},validate(value,helpers,{options}){const matches=value.match(internals.dataUriRegex);if(matches){if(!matches[2]){return value}if(matches[2]!=="base64"){return value}const base64regex=internals.base64Regex[options.paddingRequired].false;if(base64regex.test(matches[3])){return value}}return helpers.error("string.dataUri")}},domain:{method(options){if(options){Common.assertOptions(options,["allowFullyQualified","allowUnicode","maxDomainSegments","minDomainSegments","tlds"])}const address=internals.addressOptions(options);return this.$_addRule({name:"domain",args:{options},address})},validate(value,helpers,args,{address}){if(Domain.isValid(value,address)){return value}return helpers.error("string.domain")}},email:{method(options={}){Common.assertOptions(options,["allowFullyQualified","allowUnicode","ignoreLength","maxDomainSegments","minDomainSegments","multiple","separator","tlds"]);Assert(options.multiple===undefined||typeof options.multiple==="boolean","multiple option must be an boolean");const address=internals.addressOptions(options);const regex=new RegExp(`\\s*[${options.separator?EscapeRegex(options.separator):","}]\\s*`);return this.$_addRule({name:"email",args:{options},regex,address})},validate(value,helpers,{options},{regex,address}){const emails=options.multiple?value.split(regex):[value];const invalids=[];for(const email of emails){if(!Email.isValid(email,address)){invalids.push(email)}}if(!invalids.length){return value}return helpers.error("string.email",{value,invalids})}},guid:{alias:"uuid",method(options={}){Common.assertOptions(options,["version","separator"]);let versionNumbers="";if(options.version){const versions=[].concat(options.version);Assert(versions.length>=1,"version must have at least 1 valid version specified");const set=new Set;for(let i=0;i<versions.length;++i){const version=versions[i];Assert(typeof version==="string","version at position "+i+" must be a string");const versionNumber=internals.guidVersions[version.toLowerCase()];Assert(versionNumber,"version at position "+i+" must be one of "+Object.keys(internals.guidVersions).join(", "));Assert(!set.has(versionNumber),"version at position "+i+" must not be a duplicate");versionNumbers+=versionNumber;set.add(versionNumber)}}Assert(internals.guidSeparators.has(options.separator),'separator must be one of true, false, "-", or ":"');const separator=options.separator===undefined?"[:-]?":options.separator===true?"[:-]":options.separator===false?"[]?":`\\${options.separator}`;const regex=new RegExp(`^([\\[{\\(]?)[0-9A-F]{8}(${separator})[0-9A-F]{4}\\2?[${versionNumbers||"0-9A-F"}][0-9A-F]{3}\\2?[${versionNumbers?"89AB":"0-9A-F"}][0-9A-F]{3}\\2?[0-9A-F]{12}([\\]}\\)]?)$`,"i");return this.$_addRule({name:"guid",args:{options},regex})},validate(value,helpers,args,{regex}){const results=regex.exec(value);if(!results){return helpers.error("string.guid")}if(internals.guidBrackets[results[1]]!==results[results.length-1]){return helpers.error("string.guid")}return value}},hex:{method(options={}){Common.assertOptions(options,["byteAligned"]);options={byteAligned:false,...options};Assert(typeof options.byteAligned==="boolean","byteAligned must be boolean");return this.$_addRule({name:"hex",args:{options}})},validate(value,helpers,{options}){if(!internals.hexRegex.test(value)){return helpers.error("string.hex")}if(options.byteAligned&&value.length%2!==0){return helpers.error("string.hexAlign")}return value}},hostname:{method(){return this.$_addRule("hostname")},validate(value,helpers){if(Domain.isValid(value,{minDomainSegments:1})||internals.ipRegex.test(value)){return value}return helpers.error("string.hostname")}},insensitive:{method(){return this.$_setFlag("insensitive",true)}},ip:{method(options={}){Common.assertOptions(options,["cidr","version"]);const{cidr,versions,regex}=Ip.regex(options);const version=options.version?versions:undefined;return this.$_addRule({name:"ip",args:{options:{cidr,version}},regex})},validate(value,helpers,{options},{regex}){if(regex.test(value)){return value}if(options.version){return helpers.error("string.ipVersion",{value,cidr:options.cidr,version:options.version})}return helpers.error("string.ip",{value,cidr:options.cidr})}},isoDate:{method(){return this.$_addRule("isoDate")},validate(value,{error}){if(internals.isoDate(value)){return value}return error("string.isoDate")}},isoDuration:{method(){return this.$_addRule("isoDuration")},validate(value,helpers){if(internals.isoDurationRegex.test(value)){return value}return helpers.error("string.isoDuration")}},length:{method(limit,encoding){return internals.length(this,"length",limit,"=",encoding)},validate(value,helpers,{limit,encoding},{name,operator,args}){const length=encoding?Buffer&&Buffer.byteLength(value,encoding):value.length;if(Common.compare(length,limit,operator)){return value}return helpers.error("string."+name,{limit:args.limit,value,encoding})},args:[{name:"limit",ref:true,assert:Common.limit,message:"must be a positive integer"},"encoding"]},lowercase:{method(){return this.case("lower")}},max:{method(limit,encoding){return internals.length(this,"max",limit,"<=",encoding)},args:["limit","encoding"]},min:{method(limit,encoding){return internals.length(this,"min",limit,">=",encoding)},args:["limit","encoding"]},normalize:{method(form="NFC"){Assert(internals.normalizationForms.includes(form),"normalization form must be one of "+internals.normalizationForms.join(", "));return this.$_addRule({name:"normalize",args:{form}})},validate(value,{error},{form}){if(value===value.normalize(form)){return value}return error("string.normalize",{value,form})},convert:true},pattern:{alias:"regex",method(regex,options={}){Assert(regex instanceof RegExp,"regex must be a RegExp");Assert(!regex.flags.includes("g")&&!regex.flags.includes("y"),"regex should not use global or sticky mode");if(typeof options==="string"){options={name:options}}Common.assertOptions(options,["invert","name"]);const errorCode=["string.pattern",options.invert?".invert":"",options.name?".name":".base"].join("");return this.$_addRule({name:"pattern",args:{regex,options},errorCode})},validate(value,helpers,{regex,options},{errorCode}){const patternMatch=regex.test(value);if(patternMatch^options.invert){return value}return helpers.error(errorCode,{name:options.name,regex,value})},args:["regex","options"],multi:true},replace:{method(pattern,replacement){if(typeof pattern==="string"){pattern=new RegExp(EscapeRegex(pattern),"g")}Assert(pattern instanceof RegExp,"pattern must be a RegExp");Assert(typeof replacement==="string","replacement must be a String");const obj=this.clone();if(!obj.$_terms.replacements){obj.$_terms.replacements=[]}obj.$_terms.replacements.push({pattern,replacement});return obj}},token:{method(){return this.$_addRule("token")},validate(value,helpers){if(/^\w+$/.test(value)){return value}return helpers.error("string.token")}},trim:{method(enabled=true){Assert(typeof enabled==="boolean","enabled must be a boolean");return this.$_addRule({name:"trim",args:{enabled}})},validate(value,helpers,{enabled}){if(!enabled||value===value.trim()){return value}return helpers.error("string.trim")},convert:true},truncate:{method(enabled=true){Assert(typeof enabled==="boolean","enabled must be a boolean");return this.$_setFlag("truncate",enabled)}},uppercase:{method(){return this.case("upper")}},uri:{method(options={}){Common.assertOptions(options,["allowRelative","allowQuerySquareBrackets","domain","relativeOnly","scheme"]);if(options.domain){Common.assertOptions(options.domain,["allowFullyQualified","allowUnicode","maxDomainSegments","minDomainSegments","tlds"])}const{regex,scheme}=Uri.regex(options);const domain=options.domain?internals.addressOptions(options.domain):null;return this.$_addRule({name:"uri",args:{options},regex,domain,scheme})},validate(value,helpers,{options},{regex,domain,scheme}){if(["http:/","https:/"].includes(value)){return helpers.error("string.uri")}const match=regex.exec(value);if(match){const matched=match[1]||match[2];if(domain&&(!options.allowRelative||matched)&&!Domain.isValid(matched,domain)){return helpers.error("string.domain",{value:matched})}return value}if(options.relativeOnly){return helpers.error("string.uriRelativeOnly")}if(options.scheme){return helpers.error("string.uriCustomScheme",{scheme,value})}return helpers.error("string.uri")}}},manifest:{build(obj,desc){if(desc.replacements){for(const{pattern,replacement}of desc.replacements){obj=obj.replace(pattern,replacement)}}return obj}},messages:{"string.alphanum":"{{#label}} must only contain alpha-numeric characters","string.base":"{{#label}} must be a string","string.base64":"{{#label}} must be a valid base64 string","string.creditCard":"{{#label}} must be a credit card","string.dataUri":"{{#label}} must be a valid dataUri string","string.domain":"{{#label}} must contain a valid domain name","string.email":"{{#label}} must be a valid email","string.empty":"{{#label}} is not allowed to be empty","string.guid":"{{#label}} must be a valid GUID","string.hex":"{{#label}} must only contain hexadecimal characters","string.hexAlign":"{{#label}} hex decoded representation must be byte aligned","string.hostname":"{{#label}} must be a valid hostname","string.ip":"{{#label}} must be a valid ip address with a {{#cidr}} CIDR","string.ipVersion":"{{#label}} must be a valid ip address of one of the following versions {{#version}} with a {{#cidr}} CIDR","string.isoDate":"{{#label}} must be in iso format","string.isoDuration":"{{#label}} must be a valid ISO 8601 duration","string.length":"{{#label}} length must be {{#limit}} characters long","string.lowercase":"{{#label}} must only contain lowercase characters","string.max":"{{#label}} length must be less than or equal to {{#limit}} characters long","string.min":"{{#label}} length must be at least {{#limit}} characters long","string.normalize":"{{#label}} must be unicode normalized in the {{#form}} form","string.token":"{{#label}} must only contain alpha-numeric and underscore characters","string.pattern.base":"{{#label}} with value {:[.]} fails to match the required pattern: {{#regex}}","string.pattern.name":"{{#label}} with value {:[.]} fails to match the {{#name}} pattern","string.pattern.invert.base":"{{#label}} with value {:[.]} matches the inverted pattern: {{#regex}}","string.pattern.invert.name":"{{#label}} with value {:[.]} matches the inverted {{#name}} pattern","string.trim":"{{#label}} must not have leading or trailing whitespace","string.uri":"{{#label}} must be a valid uri","string.uriCustomScheme":"{{#label}} must be a valid uri with a scheme matching the {{#scheme}} pattern","string.uriRelativeOnly":"{{#label}} must be a valid relative uri","string.uppercase":"{{#label}} must only contain uppercase characters"}});internals.addressOptions=function(options){if(!options){return options}Assert(options.minDomainSegments===undefined||Number.isSafeInteger(options.minDomainSegments)&&options.minDomainSegments>0,"minDomainSegments must be a positive integer");Assert(options.maxDomainSegments===undefined||Number.isSafeInteger(options.maxDomainSegments)&&options.maxDomainSegments>0,"maxDomainSegments must be a positive integer");if(options.tlds===false){return options}if(options.tlds===true||options.tlds===undefined){Assert(internals.tlds,"Built-in TLD list disabled");return Object.assign({},options,internals.tlds)}Assert(typeof options.tlds==="object","tlds must be true, false, or an object");const deny=options.tlds.deny;if(deny){if(Array.isArray(deny)){options=Object.assign({},options,{tlds:{deny:new Set(deny)}})}Assert(options.tlds.deny instanceof Set,"tlds.deny must be an array, Set, or boolean");Assert(!options.tlds.allow,"Cannot specify both tlds.allow and tlds.deny lists");internals.validateTlds(options.tlds.deny,"tlds.deny");return options}const allow=options.tlds.allow;if(!allow){return options}if(allow===true){Assert(internals.tlds,"Built-in TLD list disabled");return Object.assign({},options,internals.tlds)}if(Array.isArray(allow)){options=Object.assign({},options,{tlds:{allow:new Set(allow)}})}Assert(options.tlds.allow instanceof Set,"tlds.allow must be an array, Set, or boolean");internals.validateTlds(options.tlds.allow,"tlds.allow");return options};internals.validateTlds=function(set,source){for(const tld of set){Assert(Domain.isValid(tld,{minDomainSegments:1,maxDomainSegments:1}),`${source} must contain valid top level domain names`)}};internals.isoDate=function(value){if(!Common.isIsoDate(value)){return null}if(/.*T.*[+-]\d\d$/.test(value)){value+="00"}const date=new Date(value);if(isNaN(date.getTime())){return null}return date.toISOString()};internals.length=function(schema,name,limit,operator,encoding){Assert(!encoding||Buffer&&Buffer.isEncoding(encoding),"Invalid encoding:",encoding);return schema.$_addRule({name,method:"length",args:{limit,encoding},operator})}},7896:(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";const Assert=__webpack_require__(9647);const Any=__webpack_require__(3059);const internals={};internals.Map=class extends Map{slice(){return new internals.Map(this)}};module.exports=Any.extend({type:"symbol",terms:{map:{init:new internals.Map}},coerce:{method(value,{schema,error}){const lookup=schema.$_terms.map.get(value);if(lookup){value=lookup}if(!schema._flags.only||typeof value==="symbol"){return{value}}return{value,errors:error("symbol.map",{map:schema.$_terms.map})}}},validate(value,{error}){if(typeof value!=="symbol"){return{value,errors:error("symbol.base")}}},rules:{map:{method(iterable){if(iterable&&!iterable[Symbol.iterator]&&typeof iterable==="object"){iterable=Object.entries(iterable)}Assert(iterable&&iterable[Symbol.iterator],"Iterable must be an iterable or object");const obj=this.clone();const symbols=[];for(const entry of iterable){Assert(entry&&entry[Symbol.iterator],"Entry must be an iterable");const[key,value]=entry;Assert(typeof key!=="object"&&typeof key!=="function"&&typeof key!=="symbol","Key must not be of type object, function, or Symbol");Assert(typeof value==="symbol","Value must be a Symbol");obj.$_terms.map.set(key,value);symbols.push(value)}return obj.valid(...symbols)}}},manifest:{build(obj,desc){if(desc.map){obj=obj.map(desc.map)}return obj}},messages:{"symbol.base":"{{#label}} must be a symbol","symbol.map":"{{#label}} must be one of {{#map}}"}})},6652:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";const Assert=__webpack_require__(9647);const Clone=__webpack_require__(3737);const Ignore=__webpack_require__(4298);const Reach=__webpack_require__(6770);const Common=__webpack_require__(6615);const Errors=__webpack_require__(9963);const State=__webpack_require__(5908);const internals={result:Symbol("result")};exports.entry=function(value,schema,prefs){let settings=Common.defaults;if(prefs){Assert(prefs.warnings===undefined,"Cannot override warnings preference in synchronous validation");Assert(prefs.artifacts===undefined,"Cannot override artifacts preference in synchronous validation");settings=Common.preferences(Common.defaults,prefs)}const result=internals.entry(value,schema,settings);Assert(!result.mainstay.externals.length,"Schema with external rules must use validateAsync()");const outcome={value:result.value};if(result.error){outcome.error=result.error}if(result.mainstay.warnings.length){outcome.warning=Errors.details(result.mainstay.warnings)}if(result.mainstay.debug){outcome.debug=result.mainstay.debug}if(result.mainstay.artifacts){outcome.artifacts=result.mainstay.artifacts}return outcome};exports.entryAsync=async function(value,schema,prefs){let settings=Common.defaults;if(prefs){settings=Common.preferences(Common.defaults,prefs)}const result=internals.entry(value,schema,settings);const mainstay=result.mainstay;if(result.error){if(mainstay.debug){result.error.debug=mainstay.debug}throw result.error}if(mainstay.externals.length){let root=result.value;const errors=[];for(const external of mainstay.externals){const path=external.state.path;const linked=external.schema.type==="link"?mainstay.links.get(external.schema):null;let node=root;let key;let parent;const ancestors=path.length?[root]:[];const original=path.length?Reach(value,path):value;if(path.length){key=path[path.length-1];let current=root;for(const segment of path.slice(0,-1)){current=current[segment];ancestors.unshift(current)}parent=ancestors[0];node=parent[key]}try{const createError=(code,local)=>(linked||external.schema).$_createError(code,node,local,external.state,settings);const output=await external.method(node,{schema:external.schema,linked,state:external.state,prefs,original,error:createError,errorsArray:internals.errorsArray,warn:(code,local)=>mainstay.warnings.push((linked||external.schema).$_createError(code,node,local,external.state,settings)),message:(messages,local)=>(linked||external.schema).$_createError("external",node,local,external.state,settings,{messages})});if(output===undefined||output===node){continue}if(output instanceof Errors.Report){mainstay.tracer.log(external.schema,external.state,"rule","external","error");errors.push(output);if(settings.abortEarly){break}continue}if(Array.isArray(output)&&output[Common.symbols.errors]){mainstay.tracer.log(external.schema,external.state,"rule","external","error");errors.push(...output);if(settings.abortEarly){break}continue}if(parent){mainstay.tracer.value(external.state,"rule",node,output,"external");parent[key]=output}else{mainstay.tracer.value(external.state,"rule",root,output,"external");root=output}}catch(err){if(settings.errors.label){err.message+=` (${external.label})`}throw err}}result.value=root;if(errors.length){result.error=Errors.process(errors,value,settings);if(mainstay.debug){result.error.debug=mainstay.debug}throw result.error}}if(!settings.warnings&&!settings.debug&&!settings.artifacts){return result.value}const outcome={value:result.value};if(mainstay.warnings.length){outcome.warning=Errors.details(mainstay.warnings)}if(mainstay.debug){outcome.debug=mainstay.debug}if(mainstay.artifacts){outcome.artifacts=mainstay.artifacts}return outcome};internals.Mainstay=class{constructor(tracer,debug,links){this.externals=[];this.warnings=[];this.tracer=tracer;this.debug=debug;this.links=links;this.shadow=null;this.artifacts=null;this._snapshots=[]}snapshot(){this._snapshots.push({externals:this.externals.slice(),warnings:this.warnings.slice()})}restore(){const snapshot=this._snapshots.pop();this.externals=snapshot.externals;this.warnings=snapshot.warnings}commit(){this._snapshots.pop()}};internals.entry=function(value,schema,prefs){const{tracer,cleanup}=internals.tracer(schema,prefs);const debug=prefs.debug?[]:null;const links=schema._ids._schemaChain?new Map:null;const mainstay=new internals.Mainstay(tracer,debug,links);const schemas=schema._ids._schemaChain?[{schema}]:null;const state=new State([],[],{mainstay,schemas});const result=exports.validate(value,schema,state,prefs);if(cleanup){schema.$_root.untrace()}const error=Errors.process(result.errors,value,prefs);return{value:result.value,error,mainstay}};internals.tracer=function(schema,prefs){if(schema.$_root._tracer){return{tracer:schema.$_root._tracer._register(schema)}}if(prefs.debug){Assert(schema.$_root.trace,"Debug mode not supported");return{tracer:schema.$_root.trace()._register(schema),cleanup:true}}return{tracer:internals.ignore}};exports.validate=function(value,schema,state,prefs,overrides={}){if(schema.$_terms.whens){schema=schema._generate(value,state,prefs).schema}if(schema._preferences){prefs=internals.prefs(schema,prefs)}if(schema._cache&&prefs.cache){const result=schema._cache.get(value);state.mainstay.tracer.debug(state,"validate","cached",!!result);if(result){return result}}const createError=(code,local,localState)=>schema.$_createError(code,value,local,localState||state,prefs);const helpers={original:value,prefs,schema,state,error:createError,errorsArray:internals.errorsArray,warn:(code,local,localState)=>state.mainstay.warnings.push(createError(code,local,localState)),message:(messages,local)=>schema.$_createError("custom",value,local,state,prefs,{messages})};state.mainstay.tracer.entry(schema,state);const def=schema._definition;if(def.prepare&&value!==undefined&&prefs.convert){const prepared=def.prepare(value,helpers);if(prepared){state.mainstay.tracer.value(state,"prepare",value,prepared.value);if(prepared.errors){return internals.finalize(prepared.value,[].concat(prepared.errors),helpers)}value=prepared.value}}if(def.coerce&&value!==undefined&&prefs.convert&&(!def.coerce.from||def.coerce.from.includes(typeof value))){const coerced=def.coerce.method(value,helpers);if(coerced){state.mainstay.tracer.value(state,"coerced",value,coerced.value);if(coerced.errors){return internals.finalize(coerced.value,[].concat(coerced.errors),helpers)}value=coerced.value}}const empty=schema._flags.empty;if(empty&&empty.$_match(internals.trim(value,schema),state.nest(empty),Common.defaults)){state.mainstay.tracer.value(state,"empty",value,undefined);value=undefined}const presence=overrides.presence||schema._flags.presence||(schema._flags._endedSwitch?null:prefs.presence);if(value===undefined){if(presence==="forbidden"){return internals.finalize(value,null,helpers)}if(presence==="required"){return internals.finalize(value,[schema.$_createError("any.required",value,null,state,prefs)],helpers)}if(presence==="optional"){if(schema._flags.default!==Common.symbols.deepDefault){return internals.finalize(value,null,helpers)}state.mainstay.tracer.value(state,"default",value,{});value={}}}else if(presence==="forbidden"){return internals.finalize(value,[schema.$_createError("any.unknown",value,null,state,prefs)],helpers)}const errors=[];if(schema._valids){const match=schema._valids.get(value,state,prefs,schema._flags.insensitive);if(match){if(prefs.convert){state.mainstay.tracer.value(state,"valids",value,match.value);value=match.value}state.mainstay.tracer.filter(schema,state,"valid",match);return internals.finalize(value,null,helpers)}if(schema._flags.only){const report=schema.$_createError("any.only",value,{valids:schema._valids.values({display:true})},state,prefs);if(prefs.abortEarly){return internals.finalize(value,[report],helpers)}errors.push(report)}}if(schema._invalids){const match=schema._invalids.get(value,state,prefs,schema._flags.insensitive);if(match){state.mainstay.tracer.filter(schema,state,"invalid",match);const report=schema.$_createError("any.invalid",value,{invalids:schema._invalids.values({display:true})},state,prefs);if(prefs.abortEarly){return internals.finalize(value,[report],helpers)}errors.push(report)}}if(def.validate){const base=def.validate(value,helpers);if(base){state.mainstay.tracer.value(state,"base",value,base.value);value=base.value;if(base.errors){if(!Array.isArray(base.errors)){errors.push(base.errors);return internals.finalize(value,errors,helpers)}if(base.errors.length){errors.push(...base.errors);return internals.finalize(value,errors,helpers)}}}}if(!schema._rules.length){return internals.finalize(value,errors,helpers)}return internals.rules(value,errors,helpers)};internals.rules=function(value,errors,helpers){const{schema,state,prefs}=helpers;for(const rule of schema._rules){const definition=schema._definition.rules[rule.method];if(definition.convert&&prefs.convert){state.mainstay.tracer.log(schema,state,"rule",rule.name,"full");continue}let ret;let args=rule.args;if(rule._resolve.length){args=Object.assign({},args);for(const key of rule._resolve){const resolver=definition.argsByName.get(key);const resolved=args[key].resolve(value,state,prefs);const normalized=resolver.normalize?resolver.normalize(resolved):resolved;const invalid=Common.validateArg(normalized,null,resolver);if(invalid){ret=schema.$_createError("any.ref",resolved,{arg:key,ref:args[key],reason:invalid},state,prefs);break}args[key]=normalized}}ret=ret||definition.validate(value,helpers,args,rule);const result=internals.rule(ret,rule);if(result.errors){state.mainstay.tracer.log(schema,state,"rule",rule.name,"error");if(rule.warn){state.mainstay.warnings.push(...result.errors);continue}if(prefs.abortEarly){return internals.finalize(value,result.errors,helpers)}errors.push(...result.errors)}else{state.mainstay.tracer.log(schema,state,"rule",rule.name,"pass");state.mainstay.tracer.value(state,"rule",value,result.value,rule.name);value=result.value}}return internals.finalize(value,errors,helpers)};internals.rule=function(ret,rule){if(ret instanceof Errors.Report){internals.error(ret,rule);return{errors:[ret],value:null}}if(Array.isArray(ret)&&ret[Common.symbols.errors]){ret.forEach((report=>internals.error(report,rule)));return{errors:ret,value:null}}return{errors:null,value:ret}};internals.error=function(report,rule){if(rule.message){report._setTemplate(rule.message)}return report};internals.finalize=function(value,errors,helpers){errors=errors||[];const{schema,state,prefs}=helpers;if(errors.length){const failover=internals.default("failover",undefined,errors,helpers);if(failover!==undefined){state.mainstay.tracer.value(state,"failover",value,failover);value=failover;errors=[]}}if(errors.length&&schema._flags.error){if(typeof schema._flags.error==="function"){errors=schema._flags.error(errors);if(!Array.isArray(errors)){errors=[errors]}for(const error of errors){Assert(error instanceof Error||error instanceof Errors.Report,"error() must return an Error object")}}else{errors=[schema._flags.error]}}if(value===undefined){const defaulted=internals.default("default",value,errors,helpers);state.mainstay.tracer.value(state,"default",value,defaulted);value=defaulted}if(schema._flags.cast&&value!==undefined){const caster=schema._definition.cast[schema._flags.cast];if(caster.from(value)){const casted=caster.to(value,helpers);state.mainstay.tracer.value(state,"cast",value,casted,schema._flags.cast);value=casted}}if(schema.$_terms.externals&&prefs.externals&&prefs._externals!==false){for(const{method}of schema.$_terms.externals){state.mainstay.externals.push({method,schema,state,label:Errors.label(schema._flags,state,prefs)})}}const result={value,errors:errors.length?errors:null};if(schema._flags.result){result.value=schema._flags.result==="strip"?undefined:helpers.original;state.mainstay.tracer.value(state,schema._flags.result,value,result.value);state.shadow(value,schema._flags.result)}if(schema._cache&&prefs.cache!==false&&!schema._refs.length){schema._cache.set(helpers.original,result)}if(value!==undefined&&!result.errors&&schema._flags.artifact!==undefined){state.mainstay.artifacts=state.mainstay.artifacts||new Map;if(!state.mainstay.artifacts.has(schema._flags.artifact)){state.mainstay.artifacts.set(schema._flags.artifact,[])}state.mainstay.artifacts.get(schema._flags.artifact).push(state.path)}return result};internals.prefs=function(schema,prefs){const isDefaultOptions=prefs===Common.defaults;if(isDefaultOptions&&schema._preferences[Common.symbols.prefs]){return schema._preferences[Common.symbols.prefs]}prefs=Common.preferences(prefs,schema._preferences);if(isDefaultOptions){schema._preferences[Common.symbols.prefs]=prefs}return prefs};internals.default=function(flag,value,errors,helpers){const{schema,state,prefs}=helpers;const source=schema._flags[flag];if(prefs.noDefaults||source===undefined){return value}state.mainstay.tracer.log(schema,state,"rule",flag,"full");if(!source){return source}if(typeof source==="function"){const args=source.length?[Clone(state.ancestors[0]),helpers]:[];try{return source(...args)}catch(err){errors.push(schema.$_createError(`any.${flag}`,null,{error:err},state,prefs));return}}if(typeof source!=="object"){return source}if(source[Common.symbols.literal]){return source.literal}if(Common.isResolvable(source)){return source.resolve(value,state,prefs)}return Clone(source)};internals.trim=function(value,schema){if(typeof value!=="string"){return value}const trim=schema.$_getRule("trim");if(!trim||!trim.args.enabled){return value}return value.trim()};internals.ignore={active:false,debug:Ignore,entry:Ignore,filter:Ignore,log:Ignore,resolve:Ignore,value:Ignore};internals.errorsArray=function(){const errors=[];errors[Common.symbols.errors]=true;return errors}},6417:(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";const Assert=__webpack_require__(9647);const DeepEqual=__webpack_require__(5245);const Common=__webpack_require__(6615);const internals={};module.exports=internals.Values=class{constructor(values,refs){this._values=new Set(values);this._refs=new Set(refs);this._lowercase=internals.lowercases(values);this._override=false}get length(){return this._values.size+this._refs.size}add(value,refs){if(Common.isResolvable(value)){if(!this._refs.has(value)){this._refs.add(value);if(refs){refs.register(value)}}return}if(!this.has(value,null,null,false)){this._values.add(value);if(typeof value==="string"){this._lowercase.set(value.toLowerCase(),value)}}}static merge(target,source,remove){target=target||new internals.Values;if(source){if(source._override){return source.clone()}for(const item of[...source._values,...source._refs]){target.add(item)}}if(remove){for(const item of[...remove._values,...remove._refs]){target.remove(item)}}return target.length?target:null}remove(value){if(Common.isResolvable(value)){this._refs.delete(value);return}this._values.delete(value);if(typeof value==="string"){this._lowercase.delete(value.toLowerCase())}}has(value,state,prefs,insensitive){return!!this.get(value,state,prefs,insensitive)}get(value,state,prefs,insensitive){if(!this.length){return false}if(this._values.has(value)){return{value}}if(typeof value==="string"&&value&&insensitive){const found=this._lowercase.get(value.toLowerCase());if(found){return{value:found}}}if(!this._refs.size&&typeof value!=="object"){return false}if(typeof value==="object"){for(const item of this._values){if(DeepEqual(item,value)){return{value:item}}}}if(state){for(const ref of this._refs){const resolved=ref.resolve(value,state,prefs,null,{in:true});if(resolved===undefined){continue}const items=!ref.in||typeof resolved!=="object"?[resolved]:Array.isArray(resolved)?resolved:Object.keys(resolved);for(const item of items){if(typeof item!==typeof value){continue}if(insensitive&&value&&typeof value==="string"){if(item.toLowerCase()===value.toLowerCase()){return{value:item,ref}}}else{if(DeepEqual(item,value)){return{value:item,ref}}}}}}return false}override(){this._override=true}values(options){if(options&&options.display){const values=[];for(const item of[...this._values,...this._refs]){if(item!==undefined){values.push(item)}}return values}return Array.from([...this._values,...this._refs])}clone(){const set=new internals.Values(this._values,this._refs);set._override=this._override;return set}concat(source){Assert(!source._override,"Cannot concat override set of values");const set=new internals.Values([...this._values,...source._values],[...this._refs,...source._refs]);set._override=this._override;return set}describe(){const normalized=[];if(this._override){normalized.push({override:true})}for(const value of this._values.values()){normalized.push(value&&typeof value==="object"?{value}:value)}for(const value of this._refs.values()){normalized.push(value.describe())}return normalized}};internals.Values.prototype[Common.symbols.values]=true;internals.Values.prototype.slice=internals.Values.prototype.clone;internals.lowercases=function(from){const map=new Map;if(from){for(const value of from){if(typeof value==="string"){map.set(value.toLowerCase(),value)}}}return map}},4977:(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__(9857)},8903:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";var db=__webpack_require__(4977);var extname=__webpack_require__(1017).extname;var EXTRACT_TYPE_REGEXP=/^\s*([^;\s]*)(?:;|\s|$)/;var TEXT_TYPE_REGEXP=/^text\//i;exports.charset=charset;exports.charsets={lookup:charset};exports.contentType=contentType;exports.extension=extension;exports.extensions=Object.create(null);exports.lookup=lookup;exports.types=Object.create(null);populateMaps(exports.extensions,exports.types);function charset(type){if(!type||typeof type!=="string"){return false}var match=EXTRACT_TYPE_REGEXP.exec(type);var mime=match&&db[match[1].toLowerCase()];if(mime&&mime.charset){return mime.charset}if(match&&TEXT_TYPE_REGEXP.test(match[1])){return"UTF-8"}return false}function contentType(str){if(!str||typeof str!=="string"){return false}var mime=str.indexOf("/")===-1?exports.lookup(str):str;if(!mime){return false}if(mime.indexOf("charset")===-1){var charset=exports.charset(mime);if(charset)mime+="; charset="+charset.toLowerCase()}return mime}function extension(type){if(!type||typeof type!=="string"){return false}var match=EXTRACT_TYPE_REGEXP.exec(type);var exts=match&&exports.extensions[match[1].toLowerCase()];if(!exts||!exts.length){return false}return exts[0]}function lookup(path){if(!path||typeof path!=="string"){return false}var extension=extname("x."+path).toLowerCase().substr(1);if(!extension){return false}return exports.types[extension]||false}function populateMaps(extensions,types){var preference=["nginx","apache",undefined,"iana"];Object.keys(db).forEach((function forEachMimeType(type){var mime=db[type];var exts=mime.extensions;if(!exts||!exts.length){return}extensions[type]=exts;for(var i=0;i<exts.length;i++){var extension=exts[i];if(types[extension]){var from=preference.indexOf(db[types[extension]].source);var to=preference.indexOf(mime.source);if(types[extension]!=="application/octet-stream"&&(from>to||from===to&&types[extension].substr(0,12)==="application/")){continue}}types[extension]=type}}))}},5273:module=>{var s=1e3;var m=s*60;var h=m*60;var d=h*24;var w=d*7;var y=d*365.25;module.exports=function(val,options){options=options||{};var type=typeof val;if(type==="string"&&val.length>0){return parse(val)}else if(type==="number"&&isFinite(val)){return options.long?fmtLong(val):fmtShort(val)}throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(val))};function parse(str){str=String(str);if(str.length>100){return}var match=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(str);if(!match){return}var n=parseFloat(match[1]);var type=(match[2]||"ms").toLowerCase();switch(type){case"years":case"year":case"yrs":case"yr":case"y":return n*y;case"weeks":case"week":case"w":return n*w;case"days":case"day":case"d":return n*d;case"hours":case"hour":case"hrs":case"hr":case"h":return n*h;case"minutes":case"minute":case"mins":case"min":case"m":return n*m;case"seconds":case"second":case"secs":case"sec":case"s":return n*s;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return n;default:return undefined}}function fmtShort(ms){var msAbs=Math.abs(ms);if(msAbs>=d){return Math.round(ms/d)+"d"}if(msAbs>=h){return Math.round(ms/h)+"h"}if(msAbs>=m){return Math.round(ms/m)+"m"}if(msAbs>=s){return Math.round(ms/s)+"s"}return ms+"ms"}function fmtLong(ms){var msAbs=Math.abs(ms);if(msAbs>=d){return plural(ms,msAbs,d,"day")}if(msAbs>=h){return plural(ms,msAbs,h,"hour")}if(msAbs>=m){return plural(ms,msAbs,m,"minute")}if(msAbs>=s){return plural(ms,msAbs,s,"second")}return ms+" ms"}function plural(ms,msAbs,n,name){var isPlural=msAbs>=n*1.5;return Math.round(ms/n)+" "+name+(isPlural?"s":"")}},131:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";var parseUrl=__webpack_require__(7310).parse;var DEFAULT_PORTS={ftp:21,gopher:70,http:80,https:443,ws:80,wss:443};var stringEndsWith=String.prototype.endsWith||function(s){return s.length<=this.length&&this.indexOf(s,this.length-s.length)!==-1};function getProxyForUrl(url){var parsedUrl=typeof url==="string"?parseUrl(url):url||{};var proto=parsedUrl.protocol;var hostname=parsedUrl.host;var port=parsedUrl.port;if(typeof hostname!=="string"||!hostname||typeof proto!=="string"){return""}proto=proto.split(":",1)[0];hostname=hostname.replace(/:\d*$/,"");port=parseInt(port)||DEFAULT_PORTS[proto]||0;if(!shouldProxy(hostname,port)){return""}var proxy=getEnv("npm_config_"+proto+"_proxy")||getEnv(proto+"_proxy")||getEnv("npm_config_proxy")||getEnv("all_proxy");if(proxy&&proxy.indexOf("://")===-1){proxy=proto+"://"+proxy}return proxy}function shouldProxy(hostname,port){var NO_PROXY=(getEnv("npm_config_no_proxy")||getEnv("no_proxy")).toLowerCase();if(!NO_PROXY){return true}if(NO_PROXY==="*"){return false}return NO_PROXY.split(/[,\s]/).every((function(proxy){if(!proxy){return true}var parsedProxy=proxy.match(/^(.+):(\d+)$/);var parsedProxyHostname=parsedProxy?parsedProxy[1]:proxy;var parsedProxyPort=parsedProxy?parseInt(parsedProxy[2]):0;if(parsedProxyPort&&parsedProxyPort!==port){return true}if(!/^[.*]/.test(parsedProxyHostname)){return hostname!==parsedProxyHostname}if(parsedProxyHostname.charAt(0)==="*"){parsedProxyHostname=parsedProxyHostname.slice(1)}return!stringEndsWith.call(hostname,parsedProxyHostname)}))}function getEnv(key){return process.env[key.toLowerCase()]||process.env[key.toUpperCase()]||""}exports.getProxyForUrl=getProxyForUrl},8060:()=>{var Reflect;(function(Reflect){(function(factory){var root=typeof global==="object"?global:typeof self==="object"?self:typeof this==="object"?this:Function("return this;")();var exporter=makeExporter(Reflect);if(typeof root.Reflect==="undefined"){root.Reflect=Reflect}else{exporter=makeExporter(root.Reflect,exporter)}factory(exporter);function makeExporter(target,previous){return function(key,value){if(typeof target[key]!=="function"){Object.defineProperty(target,key,{configurable:true,writable:true,value})}if(previous)previous(key,value)}}})((function(exporter){var hasOwn=Object.prototype.hasOwnProperty;var supportsSymbol=typeof Symbol==="function";var toPrimitiveSymbol=supportsSymbol&&typeof Symbol.toPrimitive!=="undefined"?Symbol.toPrimitive:"@@toPrimitive";var iteratorSymbol=supportsSymbol&&typeof Symbol.iterator!=="undefined"?Symbol.iterator:"@@iterator";var supportsCreate=typeof Object.create==="function";var supportsProto={__proto__:[]}instanceof Array;var downLevel=!supportsCreate&&!supportsProto;var HashMap={create:supportsCreate?function(){return MakeDictionary(Object.create(null))}:supportsProto?function(){return MakeDictionary({__proto__:null})}:function(){return MakeDictionary({})},has:downLevel?function(map,key){return hasOwn.call(map,key)}:function(map,key){return key in map},get:downLevel?function(map,key){return hasOwn.call(map,key)?map[key]:undefined}:function(map,key){return map[key]}};var functionPrototype=Object.getPrototypeOf(Function);var usePolyfill=typeof process==="object"&&process.env&&process.env["REFLECT_METADATA_USE_MAP_POLYFILL"]==="true";var _Map=!usePolyfill&&typeof Map==="function"&&typeof Map.prototype.entries==="function"?Map:CreateMapPolyfill();var _Set=!usePolyfill&&typeof Set==="function"&&typeof Set.prototype.entries==="function"?Set:CreateSetPolyfill();var _WeakMap=!usePolyfill&&typeof WeakMap==="function"?WeakMap:CreateWeakMapPolyfill();var Metadata=new _WeakMap;function decorate(decorators,target,propertyKey,attributes){if(!IsUndefined(propertyKey)){if(!IsArray(decorators))throw new TypeError;if(!IsObject(target))throw new TypeError;if(!IsObject(attributes)&&!IsUndefined(attributes)&&!IsNull(attributes))throw new TypeError;if(IsNull(attributes))attributes=undefined;propertyKey=ToPropertyKey(propertyKey);return DecorateProperty(decorators,target,propertyKey,attributes)}else{if(!IsArray(decorators))throw new TypeError;if(!IsConstructor(target))throw new TypeError;return DecorateConstructor(decorators,target)}}exporter("decorate",decorate);function metadata(metadataKey,metadataValue){function decorator(target,propertyKey){if(!IsObject(target))throw new TypeError;if(!IsUndefined(propertyKey)&&!IsPropertyKey(propertyKey))throw new TypeError;OrdinaryDefineOwnMetadata(metadataKey,metadataValue,target,propertyKey)}return decorator}exporter("metadata",metadata);function defineMetadata(metadataKey,metadataValue,target,propertyKey){if(!IsObject(target))throw new TypeError;if(!IsUndefined(propertyKey))propertyKey=ToPropertyKey(propertyKey);return OrdinaryDefineOwnMetadata(metadataKey,metadataValue,target,propertyKey)}exporter("defineMetadata",defineMetadata);function hasMetadata(metadataKey,target,propertyKey){if(!IsObject(target))throw new TypeError;if(!IsUndefined(propertyKey))propertyKey=ToPropertyKey(propertyKey);return OrdinaryHasMetadata(metadataKey,target,propertyKey)}exporter("hasMetadata",hasMetadata);function hasOwnMetadata(metadataKey,target,propertyKey){if(!IsObject(target))throw new TypeError;if(!IsUndefined(propertyKey))propertyKey=ToPropertyKey(propertyKey);return OrdinaryHasOwnMetadata(metadataKey,target,propertyKey)}exporter("hasOwnMetadata",hasOwnMetadata);function getMetadata(metadataKey,target,propertyKey){if(!IsObject(target))throw new TypeError;if(!IsUndefined(propertyKey))propertyKey=ToPropertyKey(propertyKey);return OrdinaryGetMetadata(metadataKey,target,propertyKey)}exporter("getMetadata",getMetadata);function getOwnMetadata(metadataKey,target,propertyKey){if(!IsObject(target))throw new TypeError;if(!IsUndefined(propertyKey))propertyKey=ToPropertyKey(propertyKey);return OrdinaryGetOwnMetadata(metadataKey,target,propertyKey)}exporter("getOwnMetadata",getOwnMetadata);function getMetadataKeys(target,propertyKey){if(!IsObject(target))throw new TypeError;if(!IsUndefined(propertyKey))propertyKey=ToPropertyKey(propertyKey);return OrdinaryMetadataKeys(target,propertyKey)}exporter("getMetadataKeys",getMetadataKeys);function getOwnMetadataKeys(target,propertyKey){if(!IsObject(target))throw new TypeError;if(!IsUndefined(propertyKey))propertyKey=ToPropertyKey(propertyKey);return OrdinaryOwnMetadataKeys(target,propertyKey)}exporter("getOwnMetadataKeys",getOwnMetadataKeys);function deleteMetadata(metadataKey,target,propertyKey){if(!IsObject(target))throw new TypeError;if(!IsUndefined(propertyKey))propertyKey=ToPropertyKey(propertyKey);var metadataMap=GetOrCreateMetadataMap(target,propertyKey,false);if(IsUndefined(metadataMap))return false;if(!metadataMap.delete(metadataKey))return false;if(metadataMap.size>0)return true;var targetMetadata=Metadata.get(target);targetMetadata.delete(propertyKey);if(targetMetadata.size>0)return true;Metadata.delete(target);return true}exporter("deleteMetadata",deleteMetadata);function DecorateConstructor(decorators,target){for(var i=decorators.length-1;i>=0;--i){var decorator=decorators[i];var decorated=decorator(target);if(!IsUndefined(decorated)&&!IsNull(decorated)){if(!IsConstructor(decorated))throw new TypeError;target=decorated}}return target}function DecorateProperty(decorators,target,propertyKey,descriptor){for(var i=decorators.length-1;i>=0;--i){var decorator=decorators[i];var decorated=decorator(target,propertyKey,descriptor);if(!IsUndefined(decorated)&&!IsNull(decorated)){if(!IsObject(decorated))throw new TypeError;descriptor=decorated}}return descriptor}function GetOrCreateMetadataMap(O,P,Create){var targetMetadata=Metadata.get(O);if(IsUndefined(targetMetadata)){if(!Create)return undefined;targetMetadata=new _Map;Metadata.set(O,targetMetadata)}var metadataMap=targetMetadata.get(P);if(IsUndefined(metadataMap)){if(!Create)return undefined;metadataMap=new _Map;targetMetadata.set(P,metadataMap)}return metadataMap}function OrdinaryHasMetadata(MetadataKey,O,P){var hasOwn=OrdinaryHasOwnMetadata(MetadataKey,O,P);if(hasOwn)return true;var parent=OrdinaryGetPrototypeOf(O);if(!IsNull(parent))return OrdinaryHasMetadata(MetadataKey,parent,P);return false}function OrdinaryHasOwnMetadata(MetadataKey,O,P){var metadataMap=GetOrCreateMetadataMap(O,P,false);if(IsUndefined(metadataMap))return false;return ToBoolean(metadataMap.has(MetadataKey))}function OrdinaryGetMetadata(MetadataKey,O,P){var hasOwn=OrdinaryHasOwnMetadata(MetadataKey,O,P);if(hasOwn)return OrdinaryGetOwnMetadata(MetadataKey,O,P);var parent=OrdinaryGetPrototypeOf(O);if(!IsNull(parent))return OrdinaryGetMetadata(MetadataKey,parent,P);return undefined}function OrdinaryGetOwnMetadata(MetadataKey,O,P){var metadataMap=GetOrCreateMetadataMap(O,P,false);if(IsUndefined(metadataMap))return undefined;return metadataMap.get(MetadataKey)}function OrdinaryDefineOwnMetadata(MetadataKey,MetadataValue,O,P){var metadataMap=GetOrCreateMetadataMap(O,P,true);metadataMap.set(MetadataKey,MetadataValue)}function OrdinaryMetadataKeys(O,P){var ownKeys=OrdinaryOwnMetadataKeys(O,P);var parent=OrdinaryGetPrototypeOf(O);if(parent===null)return ownKeys;var parentKeys=OrdinaryMetadataKeys(parent,P);if(parentKeys.length<=0)return ownKeys;if(ownKeys.length<=0)return parentKeys;var set=new _Set;var keys=[];for(var _i=0,ownKeys_1=ownKeys;_i<ownKeys_1.length;_i++){var key=ownKeys_1[_i];var hasKey=set.has(key);if(!hasKey){set.add(key);keys.push(key)}}for(var _a=0,parentKeys_1=parentKeys;_a<parentKeys_1.length;_a++){var key=parentKeys_1[_a];var hasKey=set.has(key);if(!hasKey){set.add(key);keys.push(key)}}return keys}function OrdinaryOwnMetadataKeys(O,P){var keys=[];var metadataMap=GetOrCreateMetadataMap(O,P,false);if(IsUndefined(metadataMap))return keys;var keysObj=metadataMap.keys();var iterator=GetIterator(keysObj);var k=0;while(true){var next=IteratorStep(iterator);if(!next){keys.length=k;return keys}var nextValue=IteratorValue(next);try{keys[k]=nextValue}catch(e){try{IteratorClose(iterator)}finally{throw e}}k++}}function Type(x){if(x===null)return 1;switch(typeof x){case"undefined":return 0;case"boolean":return 2;case"string":return 3;case"symbol":return 4;case"number":return 5;case"object":return x===null?1:6;default:return 6}}function IsUndefined(x){return x===undefined}function IsNull(x){return x===null}function IsSymbol(x){return typeof x==="symbol"}function IsObject(x){return typeof x==="object"?x!==null:typeof x==="function"}function ToPrimitive(input,PreferredType){switch(Type(input)){case 0:return input;case 1:return input;case 2:return input;case 3:return input;case 4:return input;case 5:return input}var hint=PreferredType===3?"string":PreferredType===5?"number":"default";var exoticToPrim=GetMethod(input,toPrimitiveSymbol);if(exoticToPrim!==undefined){var result=exoticToPrim.call(input,hint);if(IsObject(result))throw new TypeError;return result}return OrdinaryToPrimitive(input,hint==="default"?"number":hint)}function OrdinaryToPrimitive(O,hint){if(hint==="string"){var toString_1=O.toString;if(IsCallable(toString_1)){var result=toString_1.call(O);if(!IsObject(result))return result}var valueOf=O.valueOf;if(IsCallable(valueOf)){var result=valueOf.call(O);if(!IsObject(result))return result}}else{var valueOf=O.valueOf;if(IsCallable(valueOf)){var result=valueOf.call(O);if(!IsObject(result))return result}var toString_2=O.toString;if(IsCallable(toString_2)){var result=toString_2.call(O);if(!IsObject(result))return result}}throw new TypeError}function ToBoolean(argument){return!!argument}function ToString(argument){return""+argument}function ToPropertyKey(argument){var key=ToPrimitive(argument,3);if(IsSymbol(key))return key;return ToString(key)}function IsArray(argument){return Array.isArray?Array.isArray(argument):argument instanceof Object?argument instanceof Array:Object.prototype.toString.call(argument)==="[object Array]"}function IsCallable(argument){return typeof argument==="function"}function IsConstructor(argument){return typeof argument==="function"}function IsPropertyKey(argument){switch(Type(argument)){case 3:return true;case 4:return true;default:return false}}function GetMethod(V,P){var func=V[P];if(func===undefined||func===null)return undefined;if(!IsCallable(func))throw new TypeError;return func}function GetIterator(obj){var method=GetMethod(obj,iteratorSymbol);if(!IsCallable(method))throw new TypeError;var iterator=method.call(obj);if(!IsObject(iterator))throw new TypeError;return iterator}function IteratorValue(iterResult){return iterResult.value}function IteratorStep(iterator){var result=iterator.next();return result.done?false:result}function IteratorClose(iterator){var f=iterator["return"];if(f)f.call(iterator)}function OrdinaryGetPrototypeOf(O){var proto=Object.getPrototypeOf(O);if(typeof O!=="function"||O===functionPrototype)return proto;if(proto!==functionPrototype)return proto;var prototype=O.prototype;var prototypeProto=prototype&&Object.getPrototypeOf(prototype);if(prototypeProto==null||prototypeProto===Object.prototype)return proto;var constructor=prototypeProto.constructor;if(typeof constructor!=="function")return proto;if(constructor===O)return proto;return constructor}function CreateMapPolyfill(){var cacheSentinel={};var arraySentinel=[];var MapIterator=function(){function MapIterator(keys,values,selector){this._index=0;this._keys=keys;this._values=values;this._selector=selector}MapIterator.prototype["@@iterator"]=function(){return this};MapIterator.prototype[iteratorSymbol]=function(){return this};MapIterator.prototype.next=function(){var index=this._index;if(index>=0&&index<this._keys.length){var result=this._selector(this._keys[index],this._values[index]);if(index+1>=this._keys.length){this._index=-1;this._keys=arraySentinel;this._values=arraySentinel}else{this._index++}return{value:result,done:false}}return{value:undefined,done:true}};MapIterator.prototype.throw=function(error){if(this._index>=0){this._index=-1;this._keys=arraySentinel;this._values=arraySentinel}throw error};MapIterator.prototype.return=function(value){if(this._index>=0){this._index=-1;this._keys=arraySentinel;this._values=arraySentinel}return{value,done:true}};return MapIterator}();return function(){function Map(){this._keys=[];this._values=[];this._cacheKey=cacheSentinel;this._cacheIndex=-2}Object.defineProperty(Map.prototype,"size",{get:function(){return this._keys.length},enumerable:true,configurable:true});Map.prototype.has=function(key){return this._find(key,false)>=0};Map.prototype.get=function(key){var index=this._find(key,false);return index>=0?this._values[index]:undefined};Map.prototype.set=function(key,value){var index=this._find(key,true);this._values[index]=value;return this};Map.prototype.delete=function(key){var index=this._find(key,false);if(index>=0){var size=this._keys.length;for(var i=index+1;i<size;i++){this._keys[i-1]=this._keys[i];this._values[i-1]=this._values[i]}this._keys.length--;this._values.length--;if(key===this._cacheKey){this._cacheKey=cacheSentinel;this._cacheIndex=-2}return true}return false};Map.prototype.clear=function(){this._keys.length=0;this._values.length=0;this._cacheKey=cacheSentinel;this._cacheIndex=-2};Map.prototype.keys=function(){return new MapIterator(this._keys,this._values,getKey)};Map.prototype.values=function(){return new MapIterator(this._keys,this._values,getValue)};Map.prototype.entries=function(){return new MapIterator(this._keys,this._values,getEntry)};Map.prototype["@@iterator"]=function(){return this.entries()};Map.prototype[iteratorSymbol]=function(){return this.entries()};Map.prototype._find=function(key,insert){if(this._cacheKey!==key){this._cacheIndex=this._keys.indexOf(this._cacheKey=key)}if(this._cacheIndex<0&&insert){this._cacheIndex=this._keys.length;this._keys.push(key);this._values.push(undefined)}return this._cacheIndex};return Map}();function getKey(key,_){return key}function getValue(_,value){return value}function getEntry(key,value){return[key,value]}}function CreateSetPolyfill(){return function(){function Set(){this._map=new _Map}Object.defineProperty(Set.prototype,"size",{get:function(){return this._map.size},enumerable:true,configurable:true});Set.prototype.has=function(value){return this._map.has(value)};Set.prototype.add=function(value){return this._map.set(value,value),this};Set.prototype.delete=function(value){return this._map.delete(value)};Set.prototype.clear=function(){this._map.clear()};Set.prototype.keys=function(){return this._map.keys()};Set.prototype.values=function(){return this._map.values()};Set.prototype.entries=function(){return this._map.entries()};Set.prototype["@@iterator"]=function(){return this.keys()};Set.prototype[iteratorSymbol]=function(){return this.keys()};return Set}()}function CreateWeakMapPolyfill(){var UUID_SIZE=16;var keys=HashMap.create();var rootKey=CreateUniqueKey();return function(){function WeakMap(){this._key=CreateUniqueKey()}WeakMap.prototype.has=function(target){var table=GetOrCreateWeakMapTable(target,false);return table!==undefined?HashMap.has(table,this._key):false};WeakMap.prototype.get=function(target){var table=GetOrCreateWeakMapTable(target,false);return table!==undefined?HashMap.get(table,this._key):undefined};WeakMap.prototype.set=function(target,value){var table=GetOrCreateWeakMapTable(target,true);table[this._key]=value;return this};WeakMap.prototype.delete=function(target){var table=GetOrCreateWeakMapTable(target,false);return table!==undefined?delete table[this._key]:false};WeakMap.prototype.clear=function(){this._key=CreateUniqueKey()};return WeakMap}();function CreateUniqueKey(){var key;do{key="@@WeakMap@@"+CreateUUID()}while(HashMap.has(keys,key));keys[key]=true;return key}function GetOrCreateWeakMapTable(target,create){if(!hasOwn.call(target,rootKey)){if(!create)return undefined;Object.defineProperty(target,rootKey,{value:HashMap.create()})}return target[rootKey]}function FillRandomBytes(buffer,size){for(var i=0;i<size;++i)buffer[i]=Math.random()*255|0;return buffer}function GenRandomBytes(size){if(typeof Uint8Array==="function"){if(typeof crypto!=="undefined")return crypto.getRandomValues(new Uint8Array(size));if(typeof msCrypto!=="undefined")return msCrypto.getRandomValues(new Uint8Array(size));return FillRandomBytes(new Uint8Array(size),size)}return FillRandomBytes(new Array(size),size)}function CreateUUID(){var data=GenRandomBytes(UUID_SIZE);data[6]=data[6]&79|64;data[8]=data[8]&191|128;var result="";for(var offset=0;offset<UUID_SIZE;++offset){var byte=data[offset];if(offset===4||offset===6||offset===8)result+="-";if(byte<16)result+="0";result+=byte.toString(16).toLowerCase()}return result}}function MakeDictionary(obj){obj.__=undefined;delete obj.__;return obj}}))})(Reflect||(Reflect={}))},6162:(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";const os=__webpack_require__(2037);const tty=__webpack_require__(6224);const hasFlag=__webpack_require__(4325);const{env}=process;let forceColor;if(hasFlag("no-color")||hasFlag("no-colors")||hasFlag("color=false")||hasFlag("color=never")){forceColor=0}else if(hasFlag("color")||hasFlag("colors")||hasFlag("color=true")||hasFlag("color=always")){forceColor=1}if("FORCE_COLOR"in env){if(env.FORCE_COLOR==="true"){forceColor=1}else if(env.FORCE_COLOR==="false"){forceColor=0}else{forceColor=env.FORCE_COLOR.length===0?1:Math.min(parseInt(env.FORCE_COLOR,10),3)}}function translateLevel(level){if(level===0){return false}return{level,hasBasic:true,has256:level>=2,has16m:level>=3}}function supportsColor(haveStream,streamIsTTY){if(forceColor===0){return 0}if(hasFlag("color=16m")||hasFlag("color=full")||hasFlag("color=truecolor")){return 3}if(hasFlag("color=256")){return 2}if(haveStream&&!streamIsTTY&&forceColor===undefined){return 0}const min=forceColor||0;if(env.TERM==="dumb"){return min}if(process.platform==="win32"){const osRelease=os.release().split(".");if(Number(osRelease[0])>=10&&Number(osRelease[2])>=10586){return Number(osRelease[2])>=14931?3:2}return 1}if("CI"in env){if(["TRAVIS","CIRCLECI","APPVEYOR","GITLAB_CI","GITHUB_ACTIONS","BUILDKITE"].some((sign=>sign in env))||env.CI_NAME==="codeship"){return 1}return min}if("TEAMCITY_VERSION"in env){return/^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(env.TEAMCITY_VERSION)?1:0}if(env.COLORTERM==="truecolor"){return 3}if("TERM_PROGRAM"in env){const version=parseInt((env.TERM_PROGRAM_VERSION||"").split(".")[0],10);switch(env.TERM_PROGRAM){case"iTerm.app":return version>=3?3:2;case"Apple_Terminal":return 2}}if(/-256(color)?$/i.test(env.TERM)){return 2}if(/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)){return 1}if("COLORTERM"in env){return 1}return min}function getSupportLevel(stream){const level=supportsColor(stream,stream&&stream.isTTY);return translateLevel(level)}module.exports={supportsColor:getSupportLevel,stdout:translateLevel(supportsColor(true,tty.isatty(1))),stderr:translateLevel(supportsColor(true,tty.isatty(2)))}},409:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.BaseTool=exports.BaseOutput=exports.BaseInput=void 0;const tslib_1=__webpack_require__(2712);const ShinkaiToolkitLib_1=__webpack_require__(4952);class BaseInput{}exports.BaseInput=BaseInput;class BaseOutput{processOutput(){return tslib_1.__awaiter(this,void 0,void 0,(function*(){const config=yield ShinkaiToolkitLib_1.ShinkaiToolkitLib.emitConfig();const toolName=ShinkaiToolkitLib_1.ShinkaiToolkitLib.findToolByOutput(this.constructor.name);const tool=config.tools.find((t=>t.name===toolName));if(!tool){throw new Error(`Tool ${toolName} not found`)}return tool.output.map((o=>{o.result=this[o.name];return o}))}))}}exports.BaseOutput=BaseOutput;class BaseTool{validateInputs(input){return tslib_1.__awaiter(this,void 0,void 0,(function*(){const validator=yield ShinkaiToolkitLib_1.ShinkaiToolkitLib.getInputValidator(this.constructor.name);const inputValidation=validator.validate(input);if(inputValidation.error){throw new Error(String(inputValidation.error))}return inputValidation.value}))}}exports.BaseTool=BaseTool},8973:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.ShinkaiSetup=void 0;const tslib_1=__webpack_require__(2712);const ShinkaiToolkitLib_1=__webpack_require__(4952);class ShinkaiSetup{constructor(){this.dev=false}validateHeaders(headers){return tslib_1.__awaiter(this,void 0,void 0,(function*(){yield this.processRawHeaderValues(headers);return true}))}processRawHeaderValues(rawHeader){return tslib_1.__awaiter(this,void 0,void 0,(function*(){const v=yield ShinkaiToolkitLib_1.ShinkaiToolkitLib.getHeadersValidator();const headers={};Object.keys(rawHeader).forEach((key=>{if(!v.transformer[key]){}else{const transformedValue=v.transformer[key](rawHeader[key]);Object.assign(headers,transformedValue)}}));const headerValidation=v.validator.validate(headers);if(headerValidation.error){throw new Error(String(headerValidation.error))}return headerValidation.value}))}}exports.ShinkaiSetup=ShinkaiSetup},4952:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.ShinkaiToolkitLib=void 0;const tslib_1=__webpack_require__(2712);__webpack_require__(8060);const Joi=tslib_1.__importStar(__webpack_require__(4354));const types_1=__webpack_require__(3471);const DEBUG=typeof process!=="undefined"&&!!process.env["DEBUG_TOOLKIT"];class ShinkaiToolkitLib{static waitForLib(){return tslib_1.__awaiter(this,void 0,void 0,(function*(){const wait=(ms=0)=>new Promise((resolve=>setTimeout(resolve,ms)));while(!ShinkaiToolkitLib.isLibReady){yield wait(1)}}))}static getInputValidator(toolName){return tslib_1.__awaiter(this,void 0,void 0,(function*(){yield ShinkaiToolkitLib.waitForLib();const validator=ShinkaiToolkitLib.validators[toolName];if(!validator){throw new Error(`No validator for ${toolName}`)}return validator}))}static getHeadersValidator(){return tslib_1.__awaiter(this,void 0,void 0,(function*(){yield ShinkaiToolkitLib.waitForLib();return{validator:ShinkaiToolkitLib.headerValidator,transformer:ShinkaiToolkitLib.headerTransformer}}))}static start(){return tslib_1.__awaiter(this,void 0,void 0,(function*(){const wait=ms=>new Promise((resolve=>setTimeout((()=>resolve(null)),ms)));let maxRetries=100;while(!ShinkaiToolkitLib.toolkit){yield wait(10);maxRetries-=1;if(maxRetries===0){throw new Error(`No toolkit description provided.\n1. Verify that @isToolKit is used. \n2. Verify that Tool is imported through /registry.js and not directly from the /package/tool)'`)}}try{yield ShinkaiToolkitLib.validate();yield ShinkaiToolkitLib.generateValidator();yield ShinkaiToolkitLib.generateHeaderValidator()}catch(e){console.log("Error at lib autosetup",e);throw e}if(DEBUG){console.log("ShinkaiToolkitLib: Toolkit ready")}ShinkaiToolkitLib.isLibReady=true}))}static emitConfig(){return tslib_1.__awaiter(this,void 0,void 0,(function*(){yield ShinkaiToolkitLib.waitForLib();return ShinkaiToolkitLib.generateConfig()}))}static buildFieldJoiValidator(type,required,isArray,enumList){switch(type){case types_1.DATA_TYPES.BOOLEAN:{const val=required?Joi.boolean().required():Joi.boolean();if(required&&isArray)return Joi.array().min(1).items(val).required();return isArray?Joi.array().items(val):val}case types_1.DATA_TYPES.INTEGER:{const val=required?Joi.number().integer().required():Joi.number().integer();if(required&&isArray)return Joi.array().min(1).items(val).required();return isArray?Joi.array().items(val):val}case types_1.DATA_TYPES.FLOAT:{const val=required?Joi.number().required():Joi.number();if(required&&isArray)return Joi.array().min(1).items(val).required();return isArray?Joi.array().items(val):val}case types_1.DATA_TYPES.OAUTH:case types_1.DATA_TYPES.STRING:{const val=required?Joi.string().required():Joi.string();if(required&&isArray)return Joi.array().min(1).items(val).required();return isArray?Joi.array().items(val):val}case types_1.DATA_TYPES.ENUM:{if(!enumList)throw new Error("Enum list is requried.");const val=required?Joi.string().valid(...enumList).required():Joi.string().valid(...enumList);if(required&&isArray)return Joi.array().min(1).items(val).required();return isArray?Joi.array().items(val):val}case types_1.DATA_TYPES.CHAR:{const val=required?Joi.string().length(1).required():Joi.string().length(1);if(required&&isArray)return Joi.array().min(1).items(val).required();return isArray?Joi.array().items(val):val}case types_1.DATA_TYPES.JSON:{const val=required?Joi.object().required():Joi.object();if(required&&isArray)return Joi.array().min(1).items(val).required();return isArray?Joi.array().items(val):val}case types_1.DATA_TYPES.ISODATE:{const val=required?Joi.date().iso().required():Joi.date().iso();if(required&&isArray)return Joi.array().min(1).items(val).required();return isArray?Joi.array().items(val):val}default:throw new Error(`Unknown type ${type}`)}}static generateHeaderValidator(){return tslib_1.__awaiter(this,void 0,void 0,(function*(){const joiObjects={};const fields=ShinkaiToolkitLib.toolkit.toolkitHeaders||[];fields.forEach((field=>{const header=ShinkaiToolkitLib.fieldNameToHeaderName(field.name);if(field.oauth)field.type=types_1.DATA_TYPES.OAUTH;switch(field.type){case types_1.DATA_TYPES.CHAR:case types_1.DATA_TYPES.ENUM:case types_1.DATA_TYPES.OAUTH:case types_1.DATA_TYPES.STRING:{ShinkaiToolkitLib.headerTransformer[header]=input=>{const transformerFn=value=>value;const transformedValue=ShinkaiToolkitLib.baseHeaderTransformer(field,input,transformerFn);return{[header]:transformedValue,[field.name]:transformedValue}};break}case types_1.DATA_TYPES.BOOLEAN:{ShinkaiToolkitLib.headerTransformer[header]=input=>{const transformerFn=value=>value==="true"?true:value==="false"?false:"?";const transformedValue=ShinkaiToolkitLib.baseHeaderTransformer(field,input,transformerFn);return{[header]:transformedValue,[field.name]:transformedValue}};break}case types_1.DATA_TYPES.INTEGER:case types_1.DATA_TYPES.FLOAT:{ShinkaiToolkitLib.headerTransformer[header]=input=>{const transformerFn=value=>+value;const transformedValue=ShinkaiToolkitLib.baseHeaderTransformer(field,input,transformerFn);return{[header]:transformedValue,[field.name]:transformedValue}};break}case types_1.DATA_TYPES.JSON:{ShinkaiToolkitLib.headerTransformer[header]=input=>{const transformerFn=value=>{try{return JSON.parse(value)}catch(e){throw new Error(`${header} can't be parsed as JSON type. ${e}`)}};const transformedValue=ShinkaiToolkitLib.baseHeaderTransformer(field,input,transformerFn);return{[header]:transformedValue,[field.name]:transformedValue}};break}case types_1.DATA_TYPES.ISODATE:{ShinkaiToolkitLib.headerTransformer[header]=input=>{const transformerFn=value=>{try{return new Date(value).toISOString()}catch(e){throw new Error(`${header} can't be parsed as Date type. ${e}`)}};const transformedValue=ShinkaiToolkitLib.baseHeaderTransformer(field,input,transformerFn);return{[header]:transformedValue,[field.name]:transformedValue}};break}default:throw new Error(`Unknown type ${JSON.stringify(field)}`)}}));fields.forEach((field=>{const header=ShinkaiToolkitLib.fieldNameToHeaderName(field.name);const validator=ShinkaiToolkitLib.buildFieldJoiValidator(field.type,!field.isOptional,field.wrapperType===types_1.WRAPPER_TYPES.Array,field.enum||[]);joiObjects[field.name]=validator;joiObjects[header]=validator}));ShinkaiToolkitLib.headerValidator=Joi.object(joiObjects)}))}static generateValidator(){return tslib_1.__awaiter(this,void 0,void 0,(function*(){const joiObjects={};const fieldNames=Object.keys(this.ebnf);fieldNames.forEach((fullFieldName=>{const[prefix,fieldName]=fullFieldName.split(".");const fieldData=this.ebnf[fullFieldName];let toolName="";Object.keys(ShinkaiToolkitLib.toolsInOut).forEach((toolName_=>{const inputName=ShinkaiToolkitLib.toolsInOut[toolName_][0];if(inputName===fieldData.context){toolName=toolName_;if(!joiObjects[toolName]){joiObjects[toolName]={}}}}));if(!toolName){return}joiObjects[toolName][fieldName]=ShinkaiToolkitLib.buildFieldJoiValidator(fieldData.type,!fieldData.isOptional,fieldData.wrapperType===types_1.WRAPPER_TYPES.Array,fieldData.enum||[])}));Object.keys(ShinkaiToolkitLib.inputClass).forEach((className=>{ShinkaiToolkitLib.validators[className]=Joi.object(joiObjects[className])}))}))}static validate(){return tslib_1.__awaiter(this,void 0,void 0,(function*(){const interfaces=Object.keys(ShinkaiToolkitLib.toolsInOut).map((toolName=>ShinkaiToolkitLib.toolsInOut[toolName])).flat();const fieldNames=Object.keys(this.ebnf);fieldNames.forEach((fieldName=>{const fieldData=this.ebnf[fieldName];if(!fieldData.context||!interfaces.includes(fieldData.context)){throw new Error(`Field "${fieldName}" has no valid context. \nUse @input or @output to mark the class.`)}if(!fieldData.type){throw new Error(`Field "${fieldName}" has no valid type.\nUse @isBoolean, @isInteger, @isFloat, @isString, @isChar, @isEnum([]) or @isJSON`)}if(!fieldData.description){throw new Error(`Field "${fieldName}" requires a description.\nUse @description('') to add a description.`)}}))}))}static generateBNF(fieldName,field){const op=field.isOptional?"?":"";const array=field.wrapperType===types_1.WRAPPER_TYPES.Array;const buildBNF=type=>`${array?`[${type} {, ${type}}]`:type}${op}`;switch(field.type){case types_1.DATA_TYPES.BOOLEAN:{return buildBNF('("true"|"false")')}case types_1.DATA_TYPES.INTEGER:return buildBNF("(-?[0-9]+)");case types_1.DATA_TYPES.FLOAT:return buildBNF("(-?[0-9]+(.[0-9]+)?)");case types_1.DATA_TYPES.OAUTH:case types_1.DATA_TYPES.STRING:return buildBNF("([a-zA-Z0-9_]+)");case types_1.DATA_TYPES.ENUM:if(!field.enum)throw new Error("Enum types not defined for "+fieldName);return buildBNF("("+field.enum.map((x=>`"${x}"`)).join(" | ")+")");case types_1.DATA_TYPES.CHAR:return buildBNF("([a-zA-Z0-9_])");case types_1.DATA_TYPES.JSON:return buildBNF('(( "{" .* "}" ) | ( "[" .* "]" ))');case types_1.DATA_TYPES.ISODATE:return buildBNF("([0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]+:[0-9]+Z)");default:throw new Error("Unknown type "+field.type)}}static fieldNameToHeaderName(fieldName){const validHeader=fieldName.toLocaleLowerCase().replace(/[^a-z0-9_-]/g,"").replace(/_/g,"-");return`x-shinkai-${validHeader}`}static generatetoolkitHeadersFields(){const setup=JSON.parse(JSON.stringify(ShinkaiToolkitLib.toolkit));if(!setup.toolkitHeaders)return[];setup.toolkitHeaders.forEach((field=>{field.header=ShinkaiToolkitLib.fieldNameToHeaderName(field.name);if(field.oauth){field.type=types_1.DATA_TYPES.OAUTH;field.description=field.description||field.oauth.description}}));return setup.toolkitHeaders}static generateConfig(){const inputEBNF=[];const toolData=Object.keys(ShinkaiToolkitLib.tools).map((toolName=>{const extract=(contextName,allowUndefined=false)=>{if(!contextName){if(allowUndefined){return[]}throw new Error("No context name provided")}return Object.keys(ShinkaiToolkitLib.ebnf).filter((field=>ShinkaiToolkitLib.ebnf[field].context===contextName)).map((field=>{const[prefix,fieldName]=field.split(".");const f=ShinkaiToolkitLib.ebnf[field];inputEBNF.push(`${fieldName} ::= ${ShinkaiToolkitLib.generateBNF(fieldName,f)}`);return{name:fieldName,type:f.type,description:f.description,isOptional:f.isOptional||false,wrapperType:f.wrapperType||types_1.WRAPPER_TYPES.None,enum:f.enum,ebnf:ShinkaiToolkitLib.generateBNF(fieldName,f)}}))};const input=extract(ShinkaiToolkitLib.toolsInOut[toolName][0]);const output=extract(ShinkaiToolkitLib.toolsInOut[toolName][1]);return{name:toolName,description:ShinkaiToolkitLib.tools[toolName].description,input,output,inputEBNF:inputEBNF.join("\n")}}));return Object.assign(Object.assign({},ShinkaiToolkitLib.toolkit),{toolkitHeaders:ShinkaiToolkitLib.generatetoolkitHeadersFields(),tools:toolData})}static registerField(key,contextName){if(!ShinkaiToolkitLib.ebnf[key]){ShinkaiToolkitLib.ebnf[key]={name:key,context:contextName}}}static registerFieldAutoType(key,contextName,type){ShinkaiToolkitLib.registerField(key,contextName);if(!ShinkaiToolkitLib.ebnf[key].type){ShinkaiToolkitLib.ebnf[key].type=type}}static registerFieldArray(key,contextName){ShinkaiToolkitLib.registerField(key,contextName);ShinkaiToolkitLib.ebnf[key].wrapperType=types_1.WRAPPER_TYPES.Array}static registerFieldType(key,contextName,type){ShinkaiToolkitLib.registerField(key,contextName);ShinkaiToolkitLib.ebnf[key].type=type}static registerFieldEnumData(key,enumValues){ShinkaiToolkitLib.ebnf[key].enum=enumValues}static registerFieldOptional(key,contextName){ShinkaiToolkitLib.registerField(key,contextName);ShinkaiToolkitLib.ebnf[key].isOptional=true}static registerFieldRequired(key,contextName){ShinkaiToolkitLib.registerField(key,contextName);ShinkaiToolkitLib.ebnf[key].isOptional=false}static registerFieldDescription(key,contextName,description){ShinkaiToolkitLib.registerField(key,contextName);ShinkaiToolkitLib.ebnf[key].description=description}static registerToolKit(setup){if(DEBUG){}ShinkaiToolkitLib.toolkit=setup}static registerTool(toolName,description){if(ShinkaiToolkitLib.tools[toolName]){throw new Error(`Duplicated tool name: "${toolName}"`)}if(DEBUG){console.log(`Registering tool: ${toolName}`)}ShinkaiToolkitLib.tools[toolName]={name:toolName,description}}static registerInputClass(className,classRef){if(ShinkaiToolkitLib.inputClass[className]){throw new Error(`Duplicated input class name: "${className}"`)}if(DEBUG){console.log(`Registering input class: ${className}`)}ShinkaiToolkitLib.inputClass[className]=classRef}static registerToolInput(inputOutputName,toolName){var _a;if((_a=ShinkaiToolkitLib.toolsInOut[toolName])===null||_a===void 0?void 0:_a[0]){throw new Error(`Duplicated input name: "${toolName}"`)}if(DEBUG){console.log(`Registering input: ${inputOutputName} for ${toolName}`)}ShinkaiToolkitLib.toolsInOut[toolName]=[inputOutputName,ShinkaiToolkitLib.toolsInOut[toolName]?ShinkaiToolkitLib.toolsInOut[toolName][1]:undefined]}static registerToolOutput(inputOutputName,toolName){var _a;if((_a=ShinkaiToolkitLib.toolsInOut[toolName])===null||_a===void 0?void 0:_a[1]){throw new Error(`Duplicated output name: "${toolName}"`)}if(DEBUG){console.log(`Registering output: ${inputOutputName} for ${toolName}`)}ShinkaiToolkitLib.toolsInOut[toolName]=[ShinkaiToolkitLib.toolsInOut[toolName]?ShinkaiToolkitLib.toolsInOut[toolName][0]:undefined,inputOutputName]}static findToolByOutput(name){const classes=Object.keys(ShinkaiToolkitLib.toolsInOut);const target=classes.find((c=>ShinkaiToolkitLib.toolsInOut[c][1]===name));if(!target)throw new Error("Tool not found for "+name);return target}}exports.ShinkaiToolkitLib=ShinkaiToolkitLib;ShinkaiToolkitLib.tools={};ShinkaiToolkitLib.toolsInOut={};ShinkaiToolkitLib.inputClass={};ShinkaiToolkitLib.validators={};ShinkaiToolkitLib.headerValidator=Joi.object();ShinkaiToolkitLib.headerTransformer={};ShinkaiToolkitLib.ebnf={};ShinkaiToolkitLib.isLibReady=false;ShinkaiToolkitLib.baseHeaderTransformer=(field,input,transformerFn)=>{let fixedInput=input;const needRemoveScapedQuotes=field.type===types_1.DATA_TYPES.ENUM||field.type===types_1.DATA_TYPES.ISODATE;if(needRemoveScapedQuotes&&field.wrapperType===types_1.WRAPPER_TYPES.Array){fixedInput=input.replace(/\\/g,"")}else if(needRemoveScapedQuotes){fixedInput=input.replace(/\\"/g,"")}if(field.wrapperType===types_1.WRAPPER_TYPES.Array){let arrayInput;try{arrayInput=JSON.parse(fixedInput)}catch(e){throw new Error(`Error parsing ${input} as json. ${e}`)}return arrayInput.map((arrayInputValue=>transformerFn(arrayInputValue)))}return transformerFn(fixedInput)}},1501:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.isRequired=exports.isOptional=exports.isFloat=exports.isInteger=exports.isBoolean=exports.isJSON=exports.isChar=exports.isEnum=exports.isString=exports.isArray=exports.description=exports.isOutput=exports.isInput=exports.isTool=exports.isToolKit=void 0;const ShinkaiToolkitLib_1=__webpack_require__(4952);const types_1=__webpack_require__(3471);__webpack_require__(8060);function isToolKit(classDef){ShinkaiToolkitLib_1.ShinkaiToolkitLib.registerToolKit(new classDef)}exports.isToolKit=isToolKit;function isTool(classDef){const tool=new classDef;ShinkaiToolkitLib_1.ShinkaiToolkitLib.registerTool(classDef.name,tool.description)}exports.isTool=isTool;function isInput(className){return function(classDef){const key=classDef.name;ShinkaiToolkitLib_1.ShinkaiToolkitLib.registerToolInput(key,className);ShinkaiToolkitLib_1.ShinkaiToolkitLib.registerInputClass(className,classDef)}}exports.isInput=isInput;function isOutput(className){return function(classDef){const key=classDef.name;ShinkaiToolkitLib_1.ShinkaiToolkitLib.registerToolOutput(key,className)}}exports.isOutput=isOutput;function description(description){return function(context,propertyKey){const contextName=context.constructor.name;const fieldName=buildFieldName(context,propertyKey);ShinkaiToolkitLib_1.ShinkaiToolkitLib.registerFieldDescription(fieldName,contextName,description);const type=extractTypeFromDecorator(context,propertyKey);if(type){ShinkaiToolkitLib_1.ShinkaiToolkitLib.registerFieldAutoType(fieldName,contextName,type)}}}exports.description=description;function buildFieldName(context,propertyKey){return`${context.constructor.name}.${propertyKey}`}function isArray(context,propertyKey){const contextName=context.constructor.name;const fieldName=buildFieldName(context,propertyKey);ShinkaiToolkitLib_1.ShinkaiToolkitLib.registerFieldArray(fieldName,contextName)}exports.isArray=isArray;function isString(description){return function(context,propertyKey){const contextName=context.constructor.name;const fieldName=buildFieldName(context,propertyKey);ShinkaiToolkitLib_1.ShinkaiToolkitLib.registerFieldType(fieldName,contextName,types_1.DATA_TYPES.STRING);if(description){ShinkaiToolkitLib_1.ShinkaiToolkitLib.registerFieldDescription(fieldName,contextName,description)}}}exports.isString=isString;function isEnum(enumValues,description){return(context,propertyKey)=>{const fieldName=buildFieldName(context,propertyKey);const contextName=context.constructor.name;ShinkaiToolkitLib_1.ShinkaiToolkitLib.registerFieldType(fieldName,contextName,types_1.DATA_TYPES.ENUM);ShinkaiToolkitLib_1.ShinkaiToolkitLib.registerFieldEnumData(fieldName,enumValues);if(description){ShinkaiToolkitLib_1.ShinkaiToolkitLib.registerFieldDescription(fieldName,contextName,description)}}}exports.isEnum=isEnum;function isChar(enumValues,description){return(context,propertyKey)=>{const contextName=context.constructor.name;const fieldName=buildFieldName(context,propertyKey);ShinkaiToolkitLib_1.ShinkaiToolkitLib.registerFieldType(fieldName,contextName,types_1.DATA_TYPES.CHAR);if(description){ShinkaiToolkitLib_1.ShinkaiToolkitLib.registerFieldDescription(fieldName,contextName,description)}}}exports.isChar=isChar;function isJSON(description){return(context,propertyKey)=>{const contextName=context.constructor.name;const fieldName=buildFieldName(context,propertyKey);ShinkaiToolkitLib_1.ShinkaiToolkitLib.registerFieldType(fieldName,contextName,types_1.DATA_TYPES.JSON);if(description){ShinkaiToolkitLib_1.ShinkaiToolkitLib.registerFieldDescription(fieldName,contextName,description)}}}exports.isJSON=isJSON;function isBoolean(description){return function(context,propertyKey){const contextName=context.constructor.name;const fieldName=buildFieldName(context,propertyKey);ShinkaiToolkitLib_1.ShinkaiToolkitLib.registerFieldType(fieldName,contextName,types_1.DATA_TYPES.BOOLEAN);if(description){ShinkaiToolkitLib_1.ShinkaiToolkitLib.registerFieldDescription(fieldName,contextName,description)}}}exports.isBoolean=isBoolean;function isInteger(description){return function(context,propertyKey){const contextName=context.constructor.name;const fieldName=buildFieldName(context,propertyKey);ShinkaiToolkitLib_1.ShinkaiToolkitLib.registerFieldType(fieldName,contextName,types_1.DATA_TYPES.INTEGER);if(description){ShinkaiToolkitLib_1.ShinkaiToolkitLib.registerFieldDescription(fieldName,contextName,description)}}}exports.isInteger=isInteger;function isFloat(description){return function(context,propertyKey){const contextName=context.constructor.name;const fieldName=buildFieldName(context,propertyKey);ShinkaiToolkitLib_1.ShinkaiToolkitLib.registerFieldType(fieldName,contextName,types_1.DATA_TYPES.FLOAT);if(description){ShinkaiToolkitLib_1.ShinkaiToolkitLib.registerFieldDescription(fieldName,contextName,description)}}}exports.isFloat=isFloat;function isOptional(context,propertyKey){const contextName=context.constructor.name;const fieldName=buildFieldName(context,propertyKey);ShinkaiToolkitLib_1.ShinkaiToolkitLib.registerFieldOptional(fieldName,contextName);const type=extractTypeFromDecorator(context,propertyKey);if(type){ShinkaiToolkitLib_1.ShinkaiToolkitLib.registerFieldAutoType(fieldName,contextName,type)}}exports.isOptional=isOptional;function isRequired(context,propertyKey){const contextName=context.constructor.name;const fieldName=buildFieldName(context,propertyKey);ShinkaiToolkitLib_1.ShinkaiToolkitLib.registerFieldRequired(fieldName,contextName);const type=extractTypeFromDecorator(context,propertyKey);if(type){ShinkaiToolkitLib_1.ShinkaiToolkitLib.registerFieldAutoType(fieldName,contextName,type)}}exports.isRequired=isRequired;function extractTypeFromDecorator(context,propertyKey){const typeInfo=Reflect.getMetadata("design:type",context,propertyKey);switch(typeInfo.name){case"String":return types_1.DATA_TYPES.STRING;case"Number":return types_1.DATA_TYPES.INTEGER;case"Boolean":return types_1.DATA_TYPES.BOOLEAN;case"Array":case"Object":default:return undefined}}},848:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:true});const tslib_1=__webpack_require__(2712);const ShinkaiToolkitLib_1=__webpack_require__(4952);tslib_1.__exportStar(__webpack_require__(1501),exports);tslib_1.__exportStar(__webpack_require__(409),exports);tslib_1.__exportStar(__webpack_require__(3471),exports);tslib_1.__exportStar(__webpack_require__(4952),exports);tslib_1.__exportStar(__webpack_require__(8973),exports);ShinkaiToolkitLib_1.ShinkaiToolkitLib.start();if(typeof process!=="undefined"&&process.env["EMIT_TOOLS"]){(()=>tslib_1.__awaiter(void 0,void 0,void 0,(function*(){const config=yield ShinkaiToolkitLib_1.ShinkaiToolkitLib.emitConfig();console.log(JSON.stringify(config,null,2))})))()}},3471:(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.SHINKAI_OAUTH=exports.WRAPPER_TYPES=exports.DATA_TYPES=void 0;var DATA_TYPES;(function(DATA_TYPES){DATA_TYPES["BOOLEAN"]="BOOL";DATA_TYPES["INTEGER"]="INT";DATA_TYPES["FLOAT"]="FLOAT";DATA_TYPES["STRING"]="STRING";DATA_TYPES["ENUM"]="ENUM";DATA_TYPES["CHAR"]="CHAR";DATA_TYPES["JSON"]="JSON";DATA_TYPES["ISODATE"]="ISODATE";DATA_TYPES["OAUTH"]="OAUTH"})(DATA_TYPES||(exports.DATA_TYPES=DATA_TYPES={}));var WRAPPER_TYPES;(function(WRAPPER_TYPES){WRAPPER_TYPES["Array"]="array";WRAPPER_TYPES["None"]="none"})(WRAPPER_TYPES||(exports.WRAPPER_TYPES=WRAPPER_TYPES={}));exports.SHINKAI_OAUTH="OAUTH"},8694:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.ToolKitSetup=void 0;const tslib_1=__webpack_require__(2712);const toolkit_lib_1=__webpack_require__(848);let ToolKitSetup=class ToolKitSetup extends toolkit_lib_1.ShinkaiSetup{constructor(){super(...arguments);this.toolkitName="@shinkai_network/toolkit-google-calendar";this.author="shinkai-dev";this.version="0.0.1";this.cover="https://assets-global.website-files.com/63c99565084633765bf05638/642de723dd5a431d2a99974b_google-calendar-2.png";this.toolkitHeaders=undefined}};exports.ToolKitSetup=ToolKitSetup;exports.ToolKitSetup=ToolKitSetup=tslib_1.__decorate([toolkit_lib_1.isToolKit],ToolKitSetup)},3568:(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.HTTP=void 0;const tslib_1=__webpack_require__(2712);const toolkit_lib_1=__webpack_require__(848);const axios_1=tslib_1.__importDefault(__webpack_require__(8887));let HTTPInput=class HTTPInput extends toolkit_lib_1.BaseInput{constructor(){super(...arguments);this.method="get";this.headers={}}};tslib_1.__decorate([(0,toolkit_lib_1.description)("URL to fetch"),tslib_1.__metadata("design:type",String)],HTTPInput.prototype,"url",void 0);tslib_1.__decorate([(0,toolkit_lib_1.isEnum)(["get","post","put","delete"],"HTTP method to use"),toolkit_lib_1.isOptional,tslib_1.__metadata("design:type",String)],HTTPInput.prototype,"method",void 0);tslib_1.__decorate([(0,toolkit_lib_1.isJSON)("HTTP headers to send"),toolkit_lib_1.isOptional,tslib_1.__metadata("design:type",Object)],HTTPInput.prototype,"headers",void 0);tslib_1.__decorate([(0,toolkit_lib_1.isJSON)("HTTP body to send"),toolkit_lib_1.isOptional,tslib_1.__metadata("design:type",Object)],HTTPInput.prototype,"data",void 0);HTTPInput=tslib_1.__decorate([(0,toolkit_lib_1.isInput)("HTTP")],HTTPInput);let HTTPOutput=class HTTPOutput extends toolkit_lib_1.BaseOutput{};tslib_1.__decorate([(0,toolkit_lib_1.isString)("Response body"),tslib_1.__metadata("design:type",String)],HTTPOutput.prototype,"response",void 0);HTTPOutput=tslib_1.__decorate([(0,toolkit_lib_1.isOutput)("HTTP")],HTTPOutput);let HTTP=class HTTP extends toolkit_lib_1.BaseTool{constructor(){super(...arguments);this.description="Fetch content from URL"}run(input){return tslib_1.__awaiter(this,void 0,void 0,(function*(){const config={method:input.method,url:input.url,headers:input.headers,data:input.data};const response=yield(0,axios_1.default)(config);const out=new HTTPOutput;out.response=response.data;return out}))}};exports.HTTP=HTTP;exports.HTTP=HTTP=tslib_1.__decorate([toolkit_lib_1.isTool],HTTP)},9491:module=>{"use strict";module.exports=require("assert")},2361:module=>{"use strict";module.exports=require("events")},7147:module=>{"use strict";module.exports=require("fs")},3685:module=>{"use strict";module.exports=require("http")},5687:module=>{"use strict";module.exports=require("https")},2037:module=>{"use strict";module.exports=require("os")},1017:module=>{"use strict";module.exports=require("path")},2781:module=>{"use strict";module.exports=require("stream")},6224:module=>{"use strict";module.exports=require("tty")},7310:module=>{"use strict";module.exports=require("url")},3837:module=>{"use strict";module.exports=require("util")},9796:module=>{"use strict";module.exports=require("zlib")},8887:(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";const FormData$1=__webpack_require__(486);const url=__webpack_require__(7310);const proxyFromEnv=__webpack_require__(131);const http=__webpack_require__(3685);const https=__webpack_require__(5687);const util=__webpack_require__(3837);const followRedirects=__webpack_require__(4435);const zlib=__webpack_require__(9796);const stream=__webpack_require__(2781);const EventEmitter=__webpack_require__(2361);function _interopDefaultLegacy(e){return e&&typeof e==="object"&&"default"in e?e:{default:e}}const FormData__default=_interopDefaultLegacy(FormData$1);const url__default=_interopDefaultLegacy(url);const http__default=_interopDefaultLegacy(http);const https__default=_interopDefaultLegacy(https);const util__default=_interopDefaultLegacy(util);const followRedirects__default=_interopDefaultLegacy(followRedirects);const zlib__default=_interopDefaultLegacy(zlib);const stream__default=_interopDefaultLegacy(stream);const EventEmitter__default=_interopDefaultLegacy(EventEmitter);function bind(fn,thisArg){return function wrap(){return fn.apply(thisArg,arguments)}}const{toString}=Object.prototype;const{getPrototypeOf}=Object;const kindOf=(cache=>thing=>{const str=toString.call(thing);return cache[str]||(cache[str]=str.slice(8,-1).toLowerCase())})(Object.create(null));const kindOfTest=type=>{type=type.toLowerCase();return thing=>kindOf(thing)===type};const typeOfTest=type=>thing=>typeof thing===type;const{isArray}=Array;const isUndefined=typeOfTest("undefined");function isBuffer(val){return val!==null&&!isUndefined(val)&&val.constructor!==null&&!isUndefined(val.constructor)&&isFunction(val.constructor.isBuffer)&&val.constructor.isBuffer(val)}const isArrayBuffer=kindOfTest("ArrayBuffer");function isArrayBufferView(val){let result;if(typeof ArrayBuffer!=="undefined"&&ArrayBuffer.isView){result=ArrayBuffer.isView(val)}else{result=val&&val.buffer&&isArrayBuffer(val.buffer)}return result}const isString=typeOfTest("string");const isFunction=typeOfTest("function");const isNumber=typeOfTest("number");const isObject=thing=>thing!==null&&typeof thing==="object";const isBoolean=thing=>thing===true||thing===false;const isPlainObject=val=>{if(kindOf(val)!=="object"){return false}const prototype=getPrototypeOf(val);return(prototype===null||prototype===Object.prototype||Object.getPrototypeOf(prototype)===null)&&!(Symbol.toStringTag in val)&&!(Symbol.iterator in val)};const isDate=kindOfTest("Date");const isFile=kindOfTest("File");const isBlob=kindOfTest("Blob");const isFileList=kindOfTest("FileList");const isStream=val=>isObject(val)&&isFunction(val.pipe);const isFormData=thing=>{let kind;return thing&&(typeof FormData==="function"&&thing instanceof FormData||isFunction(thing.append)&&((kind=kindOf(thing))==="formdata"||kind==="object"&&isFunction(thing.toString)&&thing.toString()==="[object FormData]"))};const isURLSearchParams=kindOfTest("URLSearchParams");const trim=str=>str.trim?str.trim():str.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,"");function forEach(obj,fn,{allOwnKeys=false}={}){if(obj===null||typeof obj==="undefined"){return}let i;let l;if(typeof obj!=="object"){obj=[obj]}if(isArray(obj)){for(i=0,l=obj.length;i<l;i++){fn.call(null,obj[i],i,obj)}}else{const keys=allOwnKeys?Object.getOwnPropertyNames(obj):Object.keys(obj);const len=keys.length;let key;for(i=0;i<len;i++){key=keys[i];fn.call(null,obj[key],key,obj)}}}function findKey(obj,key){key=key.toLowerCase();const keys=Object.keys(obj);let i=keys.length;let _key;while(i-- >0){_key=keys[i];if(key===_key.toLowerCase()){return _key}}return null}const _global=(()=>{if(typeof globalThis!=="undefined")return globalThis;return typeof self!=="undefined"?self:typeof window!=="undefined"?window:global})();const isContextDefined=context=>!isUndefined(context)&&context!==_global;function merge(){const{caseless}=isContextDefined(this)&&this||{};const result={};const assignValue=(val,key)=>{const targetKey=caseless&&findKey(result,key)||key;if(isPlainObject(result[targetKey])&&isPlainObject(val)){result[targetKey]=merge(result[targetKey],val)}else if(isPlainObject(val)){result[targetKey]=merge({},val)}else if(isArray(val)){result[targetKey]=val.slice()}else{result[targetKey]=val}};for(let i=0,l=arguments.length;i<l;i++){arguments[i]&&forEach(arguments[i],assignValue)}return result}const extend=(a,b,thisArg,{allOwnKeys}={})=>{forEach(b,((val,key)=>{if(thisArg&&isFunction(val)){a[key]=bind(val,thisArg)}else{a[key]=val}}),{allOwnKeys});return a};const stripBOM=content=>{if(content.charCodeAt(0)===65279){content=content.slice(1)}return content};const inherits=(constructor,superConstructor,props,descriptors)=>{constructor.prototype=Object.create(superConstructor.prototype,descriptors);constructor.prototype.constructor=constructor;Object.defineProperty(constructor,"super",{value:superConstructor.prototype});props&&Object.assign(constructor.prototype,props)};const toFlatObject=(sourceObj,destObj,filter,propFilter)=>{let props;let i;let prop;const merged={};destObj=destObj||{};if(sourceObj==null)return destObj;do{props=Object.getOwnPropertyNames(sourceObj);i=props.length;while(i-- >0){prop=props[i];if((!propFilter||propFilter(prop,sourceObj,destObj))&&!merged[prop]){destObj[prop]=sourceObj[prop];merged[prop]=true}}sourceObj=filter!==false&&getPrototypeOf(sourceObj)}while(sourceObj&&(!filter||filter(sourceObj,destObj))&&sourceObj!==Object.prototype);return destObj};const endsWith=(str,searchString,position)=>{str=String(str);if(position===undefined||position>str.length){position=str.length}position-=searchString.length;const lastIndex=str.indexOf(searchString,position);return lastIndex!==-1&&lastIndex===position};const toArray=thing=>{if(!thing)return null;if(isArray(thing))return thing;let i=thing.length;if(!isNumber(i))return null;const arr=new Array(i);while(i-- >0){arr[i]=thing[i]}return arr};const isTypedArray=(TypedArray=>thing=>TypedArray&&thing instanceof TypedArray)(typeof Uint8Array!=="undefined"&&getPrototypeOf(Uint8Array));const forEachEntry=(obj,fn)=>{const generator=obj&&obj[Symbol.iterator];const iterator=generator.call(obj);let result;while((result=iterator.next())&&!result.done){const pair=result.value;fn.call(obj,pair[0],pair[1])}};const matchAll=(regExp,str)=>{let matches;const arr=[];while((matches=regExp.exec(str))!==null){arr.push(matches)}return arr};const isHTMLForm=kindOfTest("HTMLFormElement");const toCamelCase=str=>str.toLowerCase().replace(/[-_\s]([a-z\d])(\w*)/g,(function replacer(m,p1,p2){return p1.toUpperCase()+p2}));const hasOwnProperty=(({hasOwnProperty})=>(obj,prop)=>hasOwnProperty.call(obj,prop))(Object.prototype);const isRegExp=kindOfTest("RegExp");const reduceDescriptors=(obj,reducer)=>{const descriptors=Object.getOwnPropertyDescriptors(obj);const reducedDescriptors={};forEach(descriptors,((descriptor,name)=>{let ret;if((ret=reducer(descriptor,name,obj))!==false){reducedDescriptors[name]=ret||descriptor}}));Object.defineProperties(obj,reducedDescriptors)};const freezeMethods=obj=>{reduceDescriptors(obj,((descriptor,name)=>{if(isFunction(obj)&&["arguments","caller","callee"].indexOf(name)!==-1){return false}const value=obj[name];if(!isFunction(value))return;descriptor.enumerable=false;if("writable"in descriptor){descriptor.writable=false;return}if(!descriptor.set){descriptor.set=()=>{throw Error("Can not rewrite read-only method '"+name+"'")}}}))};const toObjectSet=(arrayOrString,delimiter)=>{const obj={};const define=arr=>{arr.forEach((value=>{obj[value]=true}))};isArray(arrayOrString)?define(arrayOrString):define(String(arrayOrString).split(delimiter));return obj};const noop=()=>{};const toFiniteNumber=(value,defaultValue)=>{value=+value;return Number.isFinite(value)?value:defaultValue};const ALPHA="abcdefghijklmnopqrstuvwxyz";const DIGIT="0123456789";const ALPHABET={DIGIT,ALPHA,ALPHA_DIGIT:ALPHA+ALPHA.toUpperCase()+DIGIT};const generateString=(size=16,alphabet=ALPHABET.ALPHA_DIGIT)=>{let str="";const{length}=alphabet;while(size--){str+=alphabet[Math.random()*length|0]}return str};function isSpecCompliantForm(thing){return!!(thing&&isFunction(thing.append)&&thing[Symbol.toStringTag]==="FormData"&&thing[Symbol.iterator])}const toJSONObject=obj=>{const stack=new Array(10);const visit=(source,i)=>{if(isObject(source)){if(stack.indexOf(source)>=0){return}if(!("toJSON"in source)){stack[i]=source;const target=isArray(source)?[]:{};forEach(source,((value,key)=>{const reducedValue=visit(value,i+1);!isUndefined(reducedValue)&&(target[key]=reducedValue)}));stack[i]=undefined;return target}}return source};return visit(obj,0)};const isAsyncFn=kindOfTest("AsyncFunction");const isThenable=thing=>thing&&(isObject(thing)||isFunction(thing))&&isFunction(thing.then)&&isFunction(thing.catch);const utils$1={isArray,isArrayBuffer,isBuffer,isFormData,isArrayBufferView,isString,isNumber,isBoolean,isObject,isPlainObject,isUndefined,isDate,isFile,isBlob,isRegExp,isFunction,isStream,isURLSearchParams,isTypedArray,isFileList,forEach,merge,extend,trim,stripBOM,inherits,toFlatObject,kindOf,kindOfTest,endsWith,toArray,forEachEntry,matchAll,isHTMLForm,hasOwnProperty,hasOwnProp:hasOwnProperty,reduceDescriptors,freezeMethods,toObjectSet,toCamelCase,noop,toFiniteNumber,findKey,global:_global,isContextDefined,ALPHABET,generateString,isSpecCompliantForm,toJSONObject,isAsyncFn,isThenable};function AxiosError(message,code,config,request,response){Error.call(this);if(Error.captureStackTrace){Error.captureStackTrace(this,this.constructor)}else{this.stack=(new Error).stack}this.message=message;this.name="AxiosError";code&&(this.code=code);config&&(this.config=config);request&&(this.request=request);response&&(this.response=response)}utils$1.inherits(AxiosError,Error,{toJSON:function toJSON(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:utils$1.toJSONObject(this.config),code:this.code,status:this.response&&this.response.status?this.response.status:null}}});const prototype$1=AxiosError.prototype;const descriptors={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED","ERR_NOT_SUPPORT","ERR_INVALID_URL"].forEach((code=>{descriptors[code]={value:code}}));Object.defineProperties(AxiosError,descriptors);Object.defineProperty(prototype$1,"isAxiosError",{value:true});AxiosError.from=(error,code,config,request,response,customProps)=>{const axiosError=Object.create(prototype$1);utils$1.toFlatObject(error,axiosError,(function filter(obj){return obj!==Error.prototype}),(prop=>prop!=="isAxiosError"));AxiosError.call(axiosError,error.message,code,config,request,response);axiosError.cause=error;axiosError.name=error.name;customProps&&Object.assign(axiosError,customProps);return axiosError};function isVisitable(thing){return utils$1.isPlainObject(thing)||utils$1.isArray(thing)}function removeBrackets(key){return utils$1.endsWith(key,"[]")?key.slice(0,-2):key}function renderKey(path,key,dots){if(!path)return key;return path.concat(key).map((function each(token,i){token=removeBrackets(token);return!dots&&i?"["+token+"]":token})).join(dots?".":"")}function isFlatArray(arr){return utils$1.isArray(arr)&&!arr.some(isVisitable)}const predicates=utils$1.toFlatObject(utils$1,{},null,(function filter(prop){return/^is[A-Z]/.test(prop)}));function toFormData(obj,formData,options){if(!utils$1.isObject(obj)){throw new TypeError("target must be an object")}formData=formData||new(FormData__default["default"]||FormData);options=utils$1.toFlatObject(options,{metaTokens:true,dots:false,indexes:false},false,(function defined(option,source){return!utils$1.isUndefined(source[option])}));const metaTokens=options.metaTokens;const visitor=options.visitor||defaultVisitor;const dots=options.dots;const indexes=options.indexes;const _Blob=options.Blob||typeof Blob!=="undefined"&&Blob;const useBlob=_Blob&&utils$1.isSpecCompliantForm(formData);if(!utils$1.isFunction(visitor)){throw new TypeError("visitor must be a function")}function convertValue(value){if(value===null)return"";if(utils$1.isDate(value)){return value.toISOString()}if(!useBlob&&utils$1.isBlob(value)){throw new AxiosError("Blob is not supported. Use a Buffer instead.")}if(utils$1.isArrayBuffer(value)||utils$1.isTypedArray(value)){return useBlob&&typeof Blob==="function"?new Blob([value]):Buffer.from(value)}return value}function defaultVisitor(value,key,path){let arr=value;if(value&&!path&&typeof value==="object"){if(utils$1.endsWith(key,"{}")){key=metaTokens?key:key.slice(0,-2);value=JSON.stringify(value)}else if(utils$1.isArray(value)&&isFlatArray(value)||(utils$1.isFileList(value)||utils$1.endsWith(key,"[]"))&&(arr=utils$1.toArray(value))){key=removeBrackets(key);arr.forEach((function each(el,index){!(utils$1.isUndefined(el)||el===null)&&formData.append(indexes===true?renderKey([key],index,dots):indexes===null?key:key+"[]",convertValue(el))}));return false}}if(isVisitable(value)){return true}formData.append(renderKey(path,key,dots),convertValue(value));return false}const stack=[];const exposedHelpers=Object.assign(predicates,{defaultVisitor,convertValue,isVisitable});function build(value,path){if(utils$1.isUndefined(value))return;if(stack.indexOf(value)!==-1){throw Error("Circular reference detected in "+path.join("."))}stack.push(value);utils$1.forEach(value,(function each(el,key){const result=!(utils$1.isUndefined(el)||el===null)&&visitor.call(formData,el,utils$1.isString(key)?key.trim():key,path,exposedHelpers);if(result===true){build(el,path?path.concat(key):[key])}}));stack.pop()}if(!utils$1.isObject(obj)){throw new TypeError("data must be an object")}build(obj);return formData}function encode$1(str){const charMap={"!":"%21","'":"%27","(":"%28",")":"%29","~":"%7E","%20":"+","%00":"\0"};return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g,(function replacer(match){return charMap[match]}))}function AxiosURLSearchParams(params,options){this._pairs=[];params&&toFormData(params,this,options)}const prototype=AxiosURLSearchParams.prototype;prototype.append=function append(name,value){this._pairs.push([name,value])};prototype.toString=function toString(encoder){const _encode=encoder?function(value){return encoder.call(this,value,encode$1)}:encode$1;return this._pairs.map((function each(pair){return _encode(pair[0])+"="+_encode(pair[1])}),"").join("&")};function encode(val){return encodeURIComponent(val).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}function buildURL(url,params,options){if(!params){return url}const _encode=options&&options.encode||encode;const serializeFn=options&&options.serialize;let serializedParams;if(serializeFn){serializedParams=serializeFn(params,options)}else{serializedParams=utils$1.isURLSearchParams(params)?params.toString():new AxiosURLSearchParams(params,options).toString(_encode)}if(serializedParams){const hashmarkIndex=url.indexOf("#");if(hashmarkIndex!==-1){url=url.slice(0,hashmarkIndex)}url+=(url.indexOf("?")===-1?"?":"&")+serializedParams}return url}class InterceptorManager{constructor(){this.handlers=[]}use(fulfilled,rejected,options){this.handlers.push({fulfilled,rejected,synchronous:options?options.synchronous:false,runWhen:options?options.runWhen:null});return this.handlers.length-1}eject(id){if(this.handlers[id]){this.handlers[id]=null}}clear(){if(this.handlers){this.handlers=[]}}forEach(fn){utils$1.forEach(this.handlers,(function forEachHandler(h){if(h!==null){fn(h)}}))}}const InterceptorManager$1=InterceptorManager;const transitionalDefaults={silentJSONParsing:true,forcedJSONParsing:true,clarifyTimeoutError:false};const URLSearchParams=url__default["default"].URLSearchParams;const platform$1={isNode:true,classes:{URLSearchParams,FormData:FormData__default["default"],Blob:typeof Blob!=="undefined"&&Blob||null},protocols:["http","https","file","data"]};const hasBrowserEnv=typeof window!=="undefined"&&typeof document!=="undefined";const hasStandardBrowserEnv=(product=>hasBrowserEnv&&["ReactNative","NativeScript","NS"].indexOf(product)<0)(typeof navigator!=="undefined"&&navigator.product);const hasStandardBrowserWebWorkerEnv=(()=>typeof WorkerGlobalScope!=="undefined"&&self instanceof WorkerGlobalScope&&typeof self.importScripts==="function")();const utils=Object.freeze({__proto__:null,hasBrowserEnv,hasStandardBrowserWebWorkerEnv,hasStandardBrowserEnv});const platform={...utils,...platform$1};function toURLEncodedForm(data,options){return toFormData(data,new platform.classes.URLSearchParams,Object.assign({visitor:function(value,key,path,helpers){if(platform.isNode&&utils$1.isBuffer(value)){this.append(key,value.toString("base64"));return false}return helpers.defaultVisitor.apply(this,arguments)}},options))}function parsePropPath(name){return utils$1.matchAll(/\w+|\[(\w*)]/g,name).map((match=>match[0]==="[]"?"":match[1]||match[0]))}function arrayToObject(arr){const obj={};const keys=Object.keys(arr);let i;const len=keys.length;let key;for(i=0;i<len;i++){key=keys[i];obj[key]=arr[key]}return obj}function formDataToJSON(formData){function buildPath(path,value,target,index){let name=path[index++];const isNumericKey=Number.isFinite(+name);const isLast=index>=path.length;name=!name&&utils$1.isArray(target)?target.length:name;if(isLast){if(utils$1.hasOwnProp(target,name)){target[name]=[target[name],value]}else{target[name]=value}return!isNumericKey}if(!target[name]||!utils$1.isObject(target[name])){target[name]=[]}const result=buildPath(path,value,target[name],index);if(result&&utils$1.isArray(target[name])){target[name]=arrayToObject(target[name])}return!isNumericKey}if(utils$1.isFormData(formData)&&utils$1.isFunction(formData.entries)){const obj={};utils$1.forEachEntry(formData,((name,value)=>{buildPath(parsePropPath(name),value,obj,0)}));return obj}return null}function stringifySafely(rawValue,parser,encoder){if(utils$1.isString(rawValue)){try{(parser||JSON.parse)(rawValue);return utils$1.trim(rawValue)}catch(e){if(e.name!=="SyntaxError"){throw e}}}return(encoder||JSON.stringify)(rawValue)}const defaults={transitional:transitionalDefaults,adapter:["xhr","http"],transformRequest:[function transformRequest(data,headers){const contentType=headers.getContentType()||"";const hasJSONContentType=contentType.indexOf("application/json")>-1;const isObjectPayload=utils$1.isObject(data);if(isObjectPayload&&utils$1.isHTMLForm(data)){data=new FormData(data)}const isFormData=utils$1.isFormData(data);if(isFormData){if(!hasJSONContentType){return data}return hasJSONContentType?JSON.stringify(formDataToJSON(data)):data}if(utils$1.isArrayBuffer(data)||utils$1.isBuffer(data)||utils$1.isStream(data)||utils$1.isFile(data)||utils$1.isBlob(data)){return data}if(utils$1.isArrayBufferView(data)){return data.buffer}if(utils$1.isURLSearchParams(data)){headers.setContentType("application/x-www-form-urlencoded;charset=utf-8",false);return data.toString()}let isFileList;if(isObjectPayload){if(contentType.indexOf("application/x-www-form-urlencoded")>-1){return toURLEncodedForm(data,this.formSerializer).toString()}if((isFileList=utils$1.isFileList(data))||contentType.indexOf("multipart/form-data")>-1){const _FormData=this.env&&this.env.FormData;return toFormData(isFileList?{"files[]":data}:data,_FormData&&new _FormData,this.formSerializer)}}if(isObjectPayload||hasJSONContentType){headers.setContentType("application/json",false);return stringifySafely(data)}return data}],transformResponse:[function transformResponse(data){const transitional=this.transitional||defaults.transitional;const forcedJSONParsing=transitional&&transitional.forcedJSONParsing;const JSONRequested=this.responseType==="json";if(data&&utils$1.isString(data)&&(forcedJSONParsing&&!this.responseType||JSONRequested)){const silentJSONParsing=transitional&&transitional.silentJSONParsing;const strictJSONParsing=!silentJSONParsing&&JSONRequested;try{return JSON.parse(data)}catch(e){if(strictJSONParsing){if(e.name==="SyntaxError"){throw AxiosError.from(e,AxiosError.ERR_BAD_RESPONSE,this,null,this.response)}throw e}}}return data}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:platform.classes.FormData,Blob:platform.classes.Blob},validateStatus:function validateStatus(status){return status>=200&&status<300},headers:{common:{Accept:"application/json, text/plain, */*","Content-Type":undefined}}};utils$1.forEach(["delete","get","head","post","put","patch"],(method=>{defaults.headers[method]={}}));const defaults$1=defaults;const ignoreDuplicateOf=utils$1.toObjectSet(["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"]);const parseHeaders=rawHeaders=>{const parsed={};let key;let val;let i;rawHeaders&&rawHeaders.split("\n").forEach((function parser(line){i=line.indexOf(":");key=line.substring(0,i).trim().toLowerCase();val=line.substring(i+1).trim();if(!key||parsed[key]&&ignoreDuplicateOf[key]){return}if(key==="set-cookie"){if(parsed[key]){parsed[key].push(val)}else{parsed[key]=[val]}}else{parsed[key]=parsed[key]?parsed[key]+", "+val:val}}));return parsed};const $internals=Symbol("internals");function normalizeHeader(header){return header&&String(header).trim().toLowerCase()}function normalizeValue(value){if(value===false||value==null){return value}return utils$1.isArray(value)?value.map(normalizeValue):String(value)}function parseTokens(str){const tokens=Object.create(null);const tokensRE=/([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;let match;while(match=tokensRE.exec(str)){tokens[match[1]]=match[2]}return tokens}const isValidHeaderName=str=>/^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());function matchHeaderValue(context,value,header,filter,isHeaderNameFilter){if(utils$1.isFunction(filter)){return filter.call(this,value,header)}if(isHeaderNameFilter){value=header}if(!utils$1.isString(value))return;if(utils$1.isString(filter)){return value.indexOf(filter)!==-1}if(utils$1.isRegExp(filter)){return filter.test(value)}}function formatHeader(header){return header.trim().toLowerCase().replace(/([a-z\d])(\w*)/g,((w,char,str)=>char.toUpperCase()+str))}function buildAccessors(obj,header){const accessorName=utils$1.toCamelCase(" "+header);["get","set","has"].forEach((methodName=>{Object.defineProperty(obj,methodName+accessorName,{value:function(arg1,arg2,arg3){return this[methodName].call(this,header,arg1,arg2,arg3)},configurable:true})}))}class AxiosHeaders{constructor(headers){headers&&this.set(headers)}set(header,valueOrRewrite,rewrite){const self=this;function setHeader(_value,_header,_rewrite){const lHeader=normalizeHeader(_header);if(!lHeader){throw new Error("header name must be a non-empty string")}const key=utils$1.findKey(self,lHeader);if(!key||self[key]===undefined||_rewrite===true||_rewrite===undefined&&self[key]!==false){self[key||_header]=normalizeValue(_value)}}const setHeaders=(headers,_rewrite)=>utils$1.forEach(headers,((_value,_header)=>setHeader(_value,_header,_rewrite)));if(utils$1.isPlainObject(header)||header instanceof this.constructor){setHeaders(header,valueOrRewrite)}else if(utils$1.isString(header)&&(header=header.trim())&&!isValidHeaderName(header)){setHeaders(parseHeaders(header),valueOrRewrite)}else{header!=null&&setHeader(valueOrRewrite,header,rewrite)}return this}get(header,parser){header=normalizeHeader(header);if(header){const key=utils$1.findKey(this,header);if(key){const value=this[key];if(!parser){return value}if(parser===true){return parseTokens(value)}if(utils$1.isFunction(parser)){return parser.call(this,value,key)}if(utils$1.isRegExp(parser)){return parser.exec(value)}throw new TypeError("parser must be boolean|regexp|function")}}}has(header,matcher){header=normalizeHeader(header);if(header){const key=utils$1.findKey(this,header);return!!(key&&this[key]!==undefined&&(!matcher||matchHeaderValue(this,this[key],key,matcher)))}return false}delete(header,matcher){const self=this;let deleted=false;function deleteHeader(_header){_header=normalizeHeader(_header);if(_header){const key=utils$1.findKey(self,_header);if(key&&(!matcher||matchHeaderValue(self,self[key],key,matcher))){delete self[key];deleted=true}}}if(utils$1.isArray(header)){header.forEach(deleteHeader)}else{deleteHeader(header)}return deleted}clear(matcher){const keys=Object.keys(this);let i=keys.length;let deleted=false;while(i--){const key=keys[i];if(!matcher||matchHeaderValue(this,this[key],key,matcher,true)){delete this[key];deleted=true}}return deleted}normalize(format){const self=this;const headers={};utils$1.forEach(this,((value,header)=>{const key=utils$1.findKey(headers,header);if(key){self[key]=normalizeValue(value);delete self[header];return}const normalized=format?formatHeader(header):String(header).trim();if(normalized!==header){delete self[header]}self[normalized]=normalizeValue(value);headers[normalized]=true}));return this}concat(...targets){return this.constructor.concat(this,...targets)}toJSON(asStrings){const obj=Object.create(null);utils$1.forEach(this,((value,header)=>{value!=null&&value!==false&&(obj[header]=asStrings&&utils$1.isArray(value)?value.join(", "):value)}));return obj}[Symbol.iterator](){return Object.entries(this.toJSON())[Symbol.iterator]()}toString(){return Object.entries(this.toJSON()).map((([header,value])=>header+": "+value)).join("\n")}get[Symbol.toStringTag](){return"AxiosHeaders"}static from(thing){return thing instanceof this?thing:new this(thing)}static concat(first,...targets){const computed=new this(first);targets.forEach((target=>computed.set(target)));return computed}static accessor(header){const internals=this[$internals]=this[$internals]={accessors:{}};const accessors=internals.accessors;const prototype=this.prototype;function defineAccessor(_header){const lHeader=normalizeHeader(_header);if(!accessors[lHeader]){buildAccessors(prototype,_header);accessors[lHeader]=true}}utils$1.isArray(header)?header.forEach(defineAccessor):defineAccessor(header);return this}}AxiosHeaders.accessor(["Content-Type","Content-Length","Accept","Accept-Encoding","User-Agent","Authorization"]);utils$1.reduceDescriptors(AxiosHeaders.prototype,(({value},key)=>{let mapped=key[0].toUpperCase()+key.slice(1);return{get:()=>value,set(headerValue){this[mapped]=headerValue}}}));utils$1.freezeMethods(AxiosHeaders);const AxiosHeaders$1=AxiosHeaders;function transformData(fns,response){const config=this||defaults$1;const context=response||config;const headers=AxiosHeaders$1.from(context.headers);let data=context.data;utils$1.forEach(fns,(function transform(fn){data=fn.call(config,data,headers.normalize(),response?response.status:undefined)}));headers.normalize();return data}function isCancel(value){return!!(value&&value.__CANCEL__)}function CanceledError(message,config,request){AxiosError.call(this,message==null?"canceled":message,AxiosError.ERR_CANCELED,config,request);this.name="CanceledError"}utils$1.inherits(CanceledError,AxiosError,{__CANCEL__:true});function settle(resolve,reject,response){const validateStatus=response.config.validateStatus;if(!response.status||!validateStatus||validateStatus(response.status)){resolve(response)}else{reject(new AxiosError("Request failed with status code "+response.status,[AxiosError.ERR_BAD_REQUEST,AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status/100)-4],response.config,response.request,response))}}function isAbsoluteURL(url){return/^([a-z][a-z\d+\-.]*:)?\/\//i.test(url)}function combineURLs(baseURL,relativeURL){return relativeURL?baseURL.replace(/\/+$/,"")+"/"+relativeURL.replace(/^\/+/,""):baseURL}function buildFullPath(baseURL,requestedURL){if(baseURL&&!isAbsoluteURL(requestedURL)){return combineURLs(baseURL,requestedURL)}return requestedURL}const VERSION="1.6.1";function parseProtocol(url){const match=/^([-+\w]{1,25})(:?\/\/|:)/.exec(url);return match&&match[1]||""}const DATA_URL_PATTERN=/^(?:([^;]+);)?(?:[^;]+;)?(base64|),([\s\S]*)$/;function fromDataURI(uri,asBlob,options){const _Blob=options&&options.Blob||platform.classes.Blob;const protocol=parseProtocol(uri);if(asBlob===undefined&&_Blob){asBlob=true}if(protocol==="data"){uri=protocol.length?uri.slice(protocol.length+1):uri;const match=DATA_URL_PATTERN.exec(uri);if(!match){throw new AxiosError("Invalid URL",AxiosError.ERR_INVALID_URL)}const mime=match[1];const isBase64=match[2];const body=match[3];const buffer=Buffer.from(decodeURIComponent(body),isBase64?"base64":"utf8");if(asBlob){if(!_Blob){throw new AxiosError("Blob is not supported",AxiosError.ERR_NOT_SUPPORT)}return new _Blob([buffer],{type:mime})}return buffer}throw new AxiosError("Unsupported protocol "+protocol,AxiosError.ERR_NOT_SUPPORT)}function throttle(fn,freq){let timestamp=0;const threshold=1e3/freq;let timer=null;return function throttled(force,args){const now=Date.now();if(force||now-timestamp>threshold){if(timer){clearTimeout(timer);timer=null}timestamp=now;return fn.apply(null,args)}if(!timer){timer=setTimeout((()=>{timer=null;timestamp=Date.now();return fn.apply(null,args)}),threshold-(now-timestamp))}}}function speedometer(samplesCount,min){samplesCount=samplesCount||10;const bytes=new Array(samplesCount);const timestamps=new Array(samplesCount);let head=0;let tail=0;let firstSampleTS;min=min!==undefined?min:1e3;return function push(chunkLength){const now=Date.now();const startedAt=timestamps[tail];if(!firstSampleTS){firstSampleTS=now}bytes[head]=chunkLength;timestamps[head]=now;let i=tail;let bytesCount=0;while(i!==head){bytesCount+=bytes[i++];i=i%samplesCount}head=(head+1)%samplesCount;if(head===tail){tail=(tail+1)%samplesCount}if(now-firstSampleTS<min){return}const passed=startedAt&&now-startedAt;return passed?Math.round(bytesCount*1e3/passed):undefined}}const kInternals=Symbol("internals");class AxiosTransformStream extends stream__default["default"].Transform{constructor(options){options=utils$1.toFlatObject(options,{maxRate:0,chunkSize:64*1024,minChunkSize:100,timeWindow:500,ticksRate:2,samplesCount:15},null,((prop,source)=>!utils$1.isUndefined(source[prop])));super({readableHighWaterMark:options.chunkSize});const self=this;const internals=this[kInternals]={length:options.length,timeWindow:options.timeWindow,ticksRate:options.ticksRate,chunkSize:options.chunkSize,maxRate:options.maxRate,minChunkSize:options.minChunkSize,bytesSeen:0,isCaptured:false,notifiedBytesLoaded:0,ts:Date.now(),bytes:0,onReadCallback:null};const _speedometer=speedometer(internals.ticksRate*options.samplesCount,internals.timeWindow);this.on("newListener",(event=>{if(event==="progress"){if(!internals.isCaptured){internals.isCaptured=true}}}));let bytesNotified=0;internals.updateProgress=throttle((function throttledHandler(){const totalBytes=internals.length;const bytesTransferred=internals.bytesSeen;const progressBytes=bytesTransferred-bytesNotified;if(!progressBytes||self.destroyed)return;const rate=_speedometer(progressBytes);bytesNotified=bytesTransferred;process.nextTick((()=>{self.emit("progress",{loaded:bytesTransferred,total:totalBytes,progress:totalBytes?bytesTransferred/totalBytes:undefined,bytes:progressBytes,rate:rate?rate:undefined,estimated:rate&&totalBytes&&bytesTransferred<=totalBytes?(totalBytes-bytesTransferred)/rate:undefined})}))}),internals.ticksRate);const onFinish=()=>{internals.updateProgress(true)};this.once("end",onFinish);this.once("error",onFinish)}_read(size){const internals=this[kInternals];if(internals.onReadCallback){internals.onReadCallback()}return super._read(size)}_transform(chunk,encoding,callback){const self=this;const internals=this[kInternals];const maxRate=internals.maxRate;const readableHighWaterMark=this.readableHighWaterMark;const timeWindow=internals.timeWindow;const divider=1e3/timeWindow;const bytesThreshold=maxRate/divider;const minChunkSize=internals.minChunkSize!==false?Math.max(internals.minChunkSize,bytesThreshold*.01):0;function pushChunk(_chunk,_callback){const bytes=Buffer.byteLength(_chunk);internals.bytesSeen+=bytes;internals.bytes+=bytes;if(internals.isCaptured){internals.updateProgress()}if(self.push(_chunk)){process.nextTick(_callback)}else{internals.onReadCallback=()=>{internals.onReadCallback=null;process.nextTick(_callback)}}}const transformChunk=(_chunk,_callback)=>{const chunkSize=Buffer.byteLength(_chunk);let chunkRemainder=null;let maxChunkSize=readableHighWaterMark;let bytesLeft;let passed=0;if(maxRate){const now=Date.now();if(!internals.ts||(passed=now-internals.ts)>=timeWindow){internals.ts=now;bytesLeft=bytesThreshold-internals.bytes;internals.bytes=bytesLeft<0?-bytesLeft:0;passed=0}bytesLeft=bytesThreshold-internals.bytes}if(maxRate){if(bytesLeft<=0){return setTimeout((()=>{_callback(null,_chunk)}),timeWindow-passed)}if(bytesLeft<maxChunkSize){maxChunkSize=bytesLeft}}if(maxChunkSize&&chunkSize>maxChunkSize&&chunkSize-maxChunkSize>minChunkSize){chunkRemainder=_chunk.subarray(maxChunkSize);_chunk=_chunk.subarray(0,maxChunkSize)}pushChunk(_chunk,chunkRemainder?()=>{process.nextTick(_callback,null,chunkRemainder)}:_callback)};transformChunk(chunk,(function transformNextChunk(err,_chunk){if(err){return callback(err)}if(_chunk){transformChunk(_chunk,transformNextChunk)}else{callback(null)}}))}setLength(length){this[kInternals].length=+length;return this}}const AxiosTransformStream$1=AxiosTransformStream;const{asyncIterator}=Symbol;const readBlob=async function*(blob){if(blob.stream){yield*blob.stream()}else if(blob.arrayBuffer){yield await blob.arrayBuffer()}else if(blob[asyncIterator]){yield*blob[asyncIterator]()}else{yield blob}};const readBlob$1=readBlob;const BOUNDARY_ALPHABET=utils$1.ALPHABET.ALPHA_DIGIT+"-_";const textEncoder=new util.TextEncoder;const CRLF="\r\n";const CRLF_BYTES=textEncoder.encode(CRLF);const CRLF_BYTES_COUNT=2;class FormDataPart{constructor(name,value){const{escapeName}=this.constructor;const isStringValue=utils$1.isString(value);let headers=`Content-Disposition: form-data; name="${escapeName(name)}"${!isStringValue&&value.name?`; filename="${escapeName(value.name)}"`:""}${CRLF}`;if(isStringValue){value=textEncoder.encode(String(value).replace(/\r?\n|\r\n?/g,CRLF))}else{headers+=`Content-Type: ${value.type||"application/octet-stream"}${CRLF}`}this.headers=textEncoder.encode(headers+CRLF);this.contentLength=isStringValue?value.byteLength:value.size;this.size=this.headers.byteLength+this.contentLength+CRLF_BYTES_COUNT;this.name=name;this.value=value}async*encode(){yield this.headers;const{value}=this;if(utils$1.isTypedArray(value)){yield value}else{yield*readBlob$1(value)}yield CRLF_BYTES}static escapeName(name){return String(name).replace(/[\r\n"]/g,(match=>({"\r":"%0D","\n":"%0A",'"':"%22"}[match])))}}const formDataToStream=(form,headersHandler,options)=>{const{tag="form-data-boundary",size=25,boundary=tag+"-"+utils$1.generateString(size,BOUNDARY_ALPHABET)}=options||{};if(!utils$1.isFormData(form)){throw TypeError("FormData instance required")}if(boundary.length<1||boundary.length>70){throw Error("boundary must be 10-70 characters long")}const boundaryBytes=textEncoder.encode("--"+boundary+CRLF);const footerBytes=textEncoder.encode("--"+boundary+"--"+CRLF+CRLF);let contentLength=footerBytes.byteLength;const parts=Array.from(form.entries()).map((([name,value])=>{const part=new FormDataPart(name,value);contentLength+=part.size;return part}));contentLength+=boundaryBytes.byteLength*parts.length;contentLength=utils$1.toFiniteNumber(contentLength);const computedHeaders={"Content-Type":`multipart/form-data; boundary=${boundary}`};if(Number.isFinite(contentLength)){computedHeaders["Content-Length"]=contentLength}headersHandler&&headersHandler(computedHeaders);return stream.Readable.from(async function*(){for(const part of parts){yield boundaryBytes;yield*part.encode()}yield footerBytes}())};const formDataToStream$1=formDataToStream;class ZlibHeaderTransformStream extends stream__default["default"].Transform{__transform(chunk,encoding,callback){this.push(chunk);callback()}_transform(chunk,encoding,callback){if(chunk.length!==0){this._transform=this.__transform;if(chunk[0]!==120){const header=Buffer.alloc(2);header[0]=120;header[1]=156;this.push(header,encoding)}}this.__transform(chunk,encoding,callback)}}const ZlibHeaderTransformStream$1=ZlibHeaderTransformStream;const callbackify=(fn,reducer)=>utils$1.isAsyncFn(fn)?function(...args){const cb=args.pop();fn.apply(this,args).then((value=>{try{reducer?cb(null,...reducer(value)):cb(null,value)}catch(err){cb(err)}}),cb)}:fn;const callbackify$1=callbackify;const zlibOptions={flush:zlib__default["default"].constants.Z_SYNC_FLUSH,finishFlush:zlib__default["default"].constants.Z_SYNC_FLUSH};const brotliOptions={flush:zlib__default["default"].constants.BROTLI_OPERATION_FLUSH,finishFlush:zlib__default["default"].constants.BROTLI_OPERATION_FLUSH};const isBrotliSupported=utils$1.isFunction(zlib__default["default"].createBrotliDecompress);const{http:httpFollow,https:httpsFollow}=followRedirects__default["default"];const isHttps=/https:?/;const supportedProtocols=platform.protocols.map((protocol=>protocol+":"));function dispatchBeforeRedirect(options){if(options.beforeRedirects.proxy){options.beforeRedirects.proxy(options)}if(options.beforeRedirects.config){options.beforeRedirects.config(options)}}function setProxy(options,configProxy,location){let proxy=configProxy;if(!proxy&&proxy!==false){const proxyUrl=proxyFromEnv.getProxyForUrl(location);if(proxyUrl){proxy=new URL(proxyUrl)}}if(proxy){if(proxy.username){proxy.auth=(proxy.username||"")+":"+(proxy.password||"")}if(proxy.auth){if(proxy.auth.username||proxy.auth.password){proxy.auth=(proxy.auth.username||"")+":"+(proxy.auth.password||"")}const base64=Buffer.from(proxy.auth,"utf8").toString("base64");options.headers["Proxy-Authorization"]="Basic "+base64}options.headers.host=options.hostname+(options.port?":"+options.port:"");const proxyHost=proxy.hostname||proxy.host;options.hostname=proxyHost;options.host=proxyHost;options.port=proxy.port;options.path=location;if(proxy.protocol){options.protocol=proxy.protocol.includes(":")?proxy.protocol:`${proxy.protocol}:`}}options.beforeRedirects.proxy=function beforeRedirect(redirectOptions){setProxy(redirectOptions,configProxy,redirectOptions.href)}}const isHttpAdapterSupported=typeof process!=="undefined"&&utils$1.kindOf(process)==="process";const wrapAsync=asyncExecutor=>new Promise(((resolve,reject)=>{let onDone;let isDone;const done=(value,isRejected)=>{if(isDone)return;isDone=true;onDone&&onDone(value,isRejected)};const _resolve=value=>{done(value);resolve(value)};const _reject=reason=>{done(reason,true);reject(reason)};asyncExecutor(_resolve,_reject,(onDoneHandler=>onDone=onDoneHandler)).catch(_reject)}));const resolveFamily=({address,family})=>{if(!utils$1.isString(address)){throw TypeError("address must be a string")}return{address,family:family||(address.indexOf(".")<0?6:4)}};const buildAddressEntry=(address,family)=>resolveFamily(utils$1.isObject(address)?address:{address,family});const httpAdapter=isHttpAdapterSupported&&function httpAdapter(config){return wrapAsync((async function dispatchHttpRequest(resolve,reject,onDone){let{data,lookup,family}=config;const{responseType,responseEncoding}=config;const method=config.method.toUpperCase();let isDone;let rejected=false;let req;if(lookup){const _lookup=callbackify$1(lookup,(value=>utils$1.isArray(value)?value:[value]));lookup=(hostname,opt,cb)=>{_lookup(hostname,opt,((err,arg0,arg1)=>{const addresses=utils$1.isArray(arg0)?arg0.map((addr=>buildAddressEntry(addr))):[buildAddressEntry(arg0,arg1)];opt.all?cb(err,addresses):cb(err,addresses[0].address,addresses[0].family)}))}}const emitter=new EventEmitter__default["default"];const onFinished=()=>{if(config.cancelToken){config.cancelToken.unsubscribe(abort)}if(config.signal){config.signal.removeEventListener("abort",abort)}emitter.removeAllListeners()};onDone(((value,isRejected)=>{isDone=true;if(isRejected){rejected=true;onFinished()}}));function abort(reason){emitter.emit("abort",!reason||reason.type?new CanceledError(null,config,req):reason)}emitter.once("abort",reject);if(config.cancelToken||config.signal){config.cancelToken&&config.cancelToken.subscribe(abort);if(config.signal){config.signal.aborted?abort():config.signal.addEventListener("abort",abort)}}const fullPath=buildFullPath(config.baseURL,config.url);const parsed=new URL(fullPath,"http://localhost");const protocol=parsed.protocol||supportedProtocols[0];if(protocol==="data:"){let convertedData;if(method!=="GET"){return settle(resolve,reject,{status:405,statusText:"method not allowed",headers:{},config})}try{convertedData=fromDataURI(config.url,responseType==="blob",{Blob:config.env&&config.env.Blob})}catch(err){throw AxiosError.from(err,AxiosError.ERR_BAD_REQUEST,config)}if(responseType==="text"){convertedData=convertedData.toString(responseEncoding);if(!responseEncoding||responseEncoding==="utf8"){convertedData=utils$1.stripBOM(convertedData)}}else if(responseType==="stream"){convertedData=stream__default["default"].Readable.from(convertedData)}return settle(resolve,reject,{data:convertedData,status:200,statusText:"OK",headers:new AxiosHeaders$1,config})}if(supportedProtocols.indexOf(protocol)===-1){return reject(new AxiosError("Unsupported protocol "+protocol,AxiosError.ERR_BAD_REQUEST,config))}const headers=AxiosHeaders$1.from(config.headers).normalize();headers.set("User-Agent","axios/"+VERSION,false);const onDownloadProgress=config.onDownloadProgress;const onUploadProgress=config.onUploadProgress;const maxRate=config.maxRate;let maxUploadRate=undefined;let maxDownloadRate=undefined;if(utils$1.isSpecCompliantForm(data)){const userBoundary=headers.getContentType(/boundary=([-_\w\d]{10,70})/i);data=formDataToStream$1(data,(formHeaders=>{headers.set(formHeaders)}),{tag:`axios-${VERSION}-boundary`,boundary:userBoundary&&userBoundary[1]||undefined})}else if(utils$1.isFormData(data)&&utils$1.isFunction(data.getHeaders)){headers.set(data.getHeaders());if(!headers.hasContentLength()){try{const knownLength=await util__default["default"].promisify(data.getLength).call(data);Number.isFinite(knownLength)&&knownLength>=0&&headers.setContentLength(knownLength)}catch(e){}}}else if(utils$1.isBlob(data)){data.size&&headers.setContentType(data.type||"application/octet-stream");headers.setContentLength(data.size||0);data=stream__default["default"].Readable.from(readBlob$1(data))}else if(data&&!utils$1.isStream(data)){if(Buffer.isBuffer(data));else if(utils$1.isArrayBuffer(data)){data=Buffer.from(new Uint8Array(data))}else if(utils$1.isString(data)){data=Buffer.from(data,"utf-8")}else{return reject(new AxiosError("Data after transformation must be a string, an ArrayBuffer, a Buffer, or a Stream",AxiosError.ERR_BAD_REQUEST,config))}headers.setContentLength(data.length,false);if(config.maxBodyLength>-1&&data.length>config.maxBodyLength){return reject(new AxiosError("Request body larger than maxBodyLength limit",AxiosError.ERR_BAD_REQUEST,config))}}const contentLength=utils$1.toFiniteNumber(headers.getContentLength());if(utils$1.isArray(maxRate)){maxUploadRate=maxRate[0];maxDownloadRate=maxRate[1]}else{maxUploadRate=maxDownloadRate=maxRate}if(data&&(onUploadProgress||maxUploadRate)){if(!utils$1.isStream(data)){data=stream__default["default"].Readable.from(data,{objectMode:false})}data=stream__default["default"].pipeline([data,new AxiosTransformStream$1({length:contentLength,maxRate:utils$1.toFiniteNumber(maxUploadRate)})],utils$1.noop);onUploadProgress&&data.on("progress",(progress=>{onUploadProgress(Object.assign(progress,{upload:true}))}))}let auth=undefined;if(config.auth){const username=config.auth.username||"";const password=config.auth.password||"";auth=username+":"+password}if(!auth&&parsed.username){const urlUsername=parsed.username;const urlPassword=parsed.password;auth=urlUsername+":"+urlPassword}auth&&headers.delete("authorization");let path;try{path=buildURL(parsed.pathname+parsed.search,config.params,config.paramsSerializer).replace(/^\?/,"")}catch(err){const customErr=new Error(err.message);customErr.config=config;customErr.url=config.url;customErr.exists=true;return reject(customErr)}headers.set("Accept-Encoding","gzip, compress, deflate"+(isBrotliSupported?", br":""),false);const options={path,method,headers:headers.toJSON(),agents:{http:config.httpAgent,https:config.httpsAgent},auth,protocol,family,beforeRedirect:dispatchBeforeRedirect,beforeRedirects:{}};!utils$1.isUndefined(lookup)&&(options.lookup=lookup);if(config.socketPath){options.socketPath=config.socketPath}else{options.hostname=parsed.hostname;options.port=parsed.port;setProxy(options,config.proxy,protocol+"//"+parsed.hostname+(parsed.port?":"+parsed.port:"")+options.path)}let transport;const isHttpsRequest=isHttps.test(options.protocol);options.agent=isHttpsRequest?config.httpsAgent:config.httpAgent;if(config.transport){transport=config.transport}else if(config.maxRedirects===0){transport=isHttpsRequest?https__default["default"]:http__default["default"]}else{if(config.maxRedirects){options.maxRedirects=config.maxRedirects}if(config.beforeRedirect){options.beforeRedirects.config=config.beforeRedirect}transport=isHttpsRequest?httpsFollow:httpFollow}if(config.maxBodyLength>-1){options.maxBodyLength=config.maxBodyLength}else{options.maxBodyLength=Infinity}if(config.insecureHTTPParser){options.insecureHTTPParser=config.insecureHTTPParser}req=transport.request(options,(function handleResponse(res){if(req.destroyed)return;const streams=[res];const responseLength=+res.headers["content-length"];if(onDownloadProgress){const transformStream=new AxiosTransformStream$1({length:utils$1.toFiniteNumber(responseLength),maxRate:utils$1.toFiniteNumber(maxDownloadRate)});onDownloadProgress&&transformStream.on("progress",(progress=>{onDownloadProgress(Object.assign(progress,{download:true}))}));streams.push(transformStream)}let responseStream=res;const lastRequest=res.req||req;if(config.decompress!==false&&res.headers["content-encoding"]){if(method==="HEAD"||res.statusCode===204){delete res.headers["content-encoding"]}switch((res.headers["content-encoding"]||"").toLowerCase()){case"gzip":case"x-gzip":case"compress":case"x-compress":streams.push(zlib__default["default"].createUnzip(zlibOptions));delete res.headers["content-encoding"];break;case"deflate":streams.push(new ZlibHeaderTransformStream$1);streams.push(zlib__default["default"].createUnzip(zlibOptions));delete res.headers["content-encoding"];break;case"br":if(isBrotliSupported){streams.push(zlib__default["default"].createBrotliDecompress(brotliOptions));delete res.headers["content-encoding"]}}}responseStream=streams.length>1?stream__default["default"].pipeline(streams,utils$1.noop):streams[0];const offListeners=stream__default["default"].finished(responseStream,(()=>{offListeners();onFinished()}));const response={status:res.statusCode,statusText:res.statusMessage,headers:new AxiosHeaders$1(res.headers),config,request:lastRequest};if(responseType==="stream"){response.data=responseStream;settle(resolve,reject,response)}else{const responseBuffer=[];let totalResponseBytes=0;responseStream.on("data",(function handleStreamData(chunk){responseBuffer.push(chunk);totalResponseBytes+=chunk.length;if(config.maxContentLength>-1&&totalResponseBytes>config.maxContentLength){rejected=true;responseStream.destroy();reject(new AxiosError("maxContentLength size of "+config.maxContentLength+" exceeded",AxiosError.ERR_BAD_RESPONSE,config,lastRequest))}}));responseStream.on("aborted",(function handlerStreamAborted(){if(rejected){return}const err=new AxiosError("maxContentLength size of "+config.maxContentLength+" exceeded",AxiosError.ERR_BAD_RESPONSE,config,lastRequest);responseStream.destroy(err);reject(err)}));responseStream.on("error",(function handleStreamError(err){if(req.destroyed)return;reject(AxiosError.from(err,null,config,lastRequest))}));responseStream.on("end",(function handleStreamEnd(){try{let responseData=responseBuffer.length===1?responseBuffer[0]:Buffer.concat(responseBuffer);if(responseType!=="arraybuffer"){responseData=responseData.toString(responseEncoding);if(!responseEncoding||responseEncoding==="utf8"){responseData=utils$1.stripBOM(responseData)}}response.data=responseData}catch(err){return reject(AxiosError.from(err,null,config,response.request,response))}settle(resolve,reject,response)}))}emitter.once("abort",(err=>{if(!responseStream.destroyed){responseStream.emit("error",err);responseStream.destroy()}}))}));emitter.once("abort",(err=>{reject(err);req.destroy(err)}));req.on("error",(function handleRequestError(err){reject(AxiosError.from(err,null,config,req))}));req.on("socket",(function handleRequestSocket(socket){socket.setKeepAlive(true,1e3*60)}));if(config.timeout){const timeout=parseInt(config.timeout,10);if(Number.isNaN(timeout)){reject(new AxiosError("error trying to parse `config.timeout` to int",AxiosError.ERR_BAD_OPTION_VALUE,config,req));return}req.setTimeout(timeout,(function handleRequestTimeout(){if(isDone)return;let timeoutErrorMessage=config.timeout?"timeout of "+config.timeout+"ms exceeded":"timeout exceeded";const transitional=config.transitional||transitionalDefaults;if(config.timeoutErrorMessage){timeoutErrorMessage=config.timeoutErrorMessage}reject(new AxiosError(timeoutErrorMessage,transitional.clarifyTimeoutError?AxiosError.ETIMEDOUT:AxiosError.ECONNABORTED,config,req));abort()}))}if(utils$1.isStream(data)){let ended=false;let errored=false;data.on("end",(()=>{ended=true}));data.once("error",(err=>{errored=true;req.destroy(err)}));data.on("close",(()=>{if(!ended&&!errored){abort(new CanceledError("Request stream has been aborted",config,req))}}));data.pipe(req)}else{req.end(data)}}))};const cookies=platform.hasStandardBrowserEnv?function standardBrowserEnv(){return{write:function write(name,value,expires,path,domain,secure){const cookie=[];cookie.push(name+"="+encodeURIComponent(value));if(utils$1.isNumber(expires)){cookie.push("expires="+new Date(expires).toGMTString())}if(utils$1.isString(path)){cookie.push("path="+path)}if(utils$1.isString(domain)){cookie.push("domain="+domain)}if(secure===true){cookie.push("secure")}document.cookie=cookie.join("; ")},read:function read(name){const match=document.cookie.match(new RegExp("(^|;\\s*)("+name+")=([^;]*)"));return match?decodeURIComponent(match[3]):null},remove:function remove(name){this.write(name,"",Date.now()-864e5)}}}():function nonStandardBrowserEnv(){return{write:function write(){},read:function read(){return null},remove:function remove(){}}}();const isURLSameOrigin=platform.hasStandardBrowserEnv?function standardBrowserEnv(){const msie=/(msie|trident)/i.test(navigator.userAgent);const urlParsingNode=document.createElement("a");let originURL;function resolveURL(url){let href=url;if(msie){urlParsingNode.setAttribute("href",href);href=urlParsingNode.href}urlParsingNode.setAttribute("href",href);return{href:urlParsingNode.href,protocol:urlParsingNode.protocol?urlParsingNode.protocol.replace(/:$/,""):"",host:urlParsingNode.host,search:urlParsingNode.search?urlParsingNode.search.replace(/^\?/,""):"",hash:urlParsingNode.hash?urlParsingNode.hash.replace(/^#/,""):"",hostname:urlParsingNode.hostname,port:urlParsingNode.port,pathname:urlParsingNode.pathname.charAt(0)==="/"?urlParsingNode.pathname:"/"+urlParsingNode.pathname}}originURL=resolveURL(window.location.href);return function isURLSameOrigin(requestURL){const parsed=utils$1.isString(requestURL)?resolveURL(requestURL):requestURL;return parsed.protocol===originURL.protocol&&parsed.host===originURL.host}}():function nonStandardBrowserEnv(){return function isURLSameOrigin(){return true}}();function progressEventReducer(listener,isDownloadStream){let bytesNotified=0;const _speedometer=speedometer(50,250);return e=>{const loaded=e.loaded;const total=e.lengthComputable?e.total:undefined;const progressBytes=loaded-bytesNotified;const rate=_speedometer(progressBytes);const inRange=loaded<=total;bytesNotified=loaded;const data={loaded,total,progress:total?loaded/total:undefined,bytes:progressBytes,rate:rate?rate:undefined,estimated:rate&&total&&inRange?(total-loaded)/rate:undefined,event:e};data[isDownloadStream?"download":"upload"]=true;listener(data)}}const isXHRAdapterSupported=typeof XMLHttpRequest!=="undefined";const xhrAdapter=isXHRAdapterSupported&&function(config){return new Promise((function dispatchXhrRequest(resolve,reject){let requestData=config.data;const requestHeaders=AxiosHeaders$1.from(config.headers).normalize();const responseType=config.responseType;let onCanceled;function done(){if(config.cancelToken){config.cancelToken.unsubscribe(onCanceled)}if(config.signal){config.signal.removeEventListener("abort",onCanceled)}}let contentType;if(utils$1.isFormData(requestData)){if(platform.hasStandardBrowserEnv||platform.hasStandardBrowserWebWorkerEnv){requestHeaders.setContentType(false)}else if((contentType=requestHeaders.getContentType())!==false){const[type,...tokens]=contentType?contentType.split(";").map((token=>token.trim())).filter(Boolean):[];requestHeaders.setContentType([type||"multipart/form-data",...tokens].join("; "))}}let request=new XMLHttpRequest;if(config.auth){const username=config.auth.username||"";const password=config.auth.password?unescape(encodeURIComponent(config.auth.password)):"";requestHeaders.set("Authorization","Basic "+btoa(username+":"+password))}const fullPath=buildFullPath(config.baseURL,config.url);request.open(config.method.toUpperCase(),buildURL(fullPath,config.params,config.paramsSerializer),true);request.timeout=config.timeout;function onloadend(){if(!request){return}const responseHeaders=AxiosHeaders$1.from("getAllResponseHeaders"in request&&request.getAllResponseHeaders());const responseData=!responseType||responseType==="text"||responseType==="json"?request.responseText:request.response;const response={data:responseData,status:request.status,statusText:request.statusText,headers:responseHeaders,config,request};settle((function _resolve(value){resolve(value);done()}),(function _reject(err){reject(err);done()}),response);request=null}if("onloadend"in request){request.onloadend=onloadend}else{request.onreadystatechange=function handleLoad(){if(!request||request.readyState!==4){return}if(request.status===0&&!(request.responseURL&&request.responseURL.indexOf("file:")===0)){return}setTimeout(onloadend)}}request.onabort=function handleAbort(){if(!request){return}reject(new AxiosError("Request aborted",AxiosError.ECONNABORTED,config,request));request=null};request.onerror=function handleError(){reject(new AxiosError("Network Error",AxiosError.ERR_NETWORK,config,request));request=null};request.ontimeout=function handleTimeout(){let timeoutErrorMessage=config.timeout?"timeout of "+config.timeout+"ms exceeded":"timeout exceeded";const transitional=config.transitional||transitionalDefaults;if(config.timeoutErrorMessage){timeoutErrorMessage=config.timeoutErrorMessage}reject(new AxiosError(timeoutErrorMessage,transitional.clarifyTimeoutError?AxiosError.ETIMEDOUT:AxiosError.ECONNABORTED,config,request));request=null};if(platform.hasStandardBrowserEnv){const xsrfValue=isURLSameOrigin(fullPath)&&config.xsrfCookieName&&cookies.read(config.xsrfCookieName);if(xsrfValue){requestHeaders.set(config.xsrfHeaderName,xsrfValue)}}requestData===undefined&&requestHeaders.setContentType(null);if("setRequestHeader"in request){utils$1.forEach(requestHeaders.toJSON(),(function setRequestHeader(val,key){request.setRequestHeader(key,val)}))}if(!utils$1.isUndefined(config.withCredentials)){request.withCredentials=!!config.withCredentials}if(responseType&&responseType!=="json"){request.responseType=config.responseType}if(typeof config.onDownloadProgress==="function"){request.addEventListener("progress",progressEventReducer(config.onDownloadProgress,true))}if(typeof config.onUploadProgress==="function"&&request.upload){request.upload.addEventListener("progress",progressEventReducer(config.onUploadProgress))}if(config.cancelToken||config.signal){onCanceled=cancel=>{if(!request){return}reject(!cancel||cancel.type?new CanceledError(null,config,request):cancel);request.abort();request=null};config.cancelToken&&config.cancelToken.subscribe(onCanceled);if(config.signal){config.signal.aborted?onCanceled():config.signal.addEventListener("abort",onCanceled)}}const protocol=parseProtocol(fullPath);if(protocol&&platform.protocols.indexOf(protocol)===-1){reject(new AxiosError("Unsupported protocol "+protocol+":",AxiosError.ERR_BAD_REQUEST,config));return}request.send(requestData||null)}))};const knownAdapters={http:httpAdapter,xhr:xhrAdapter};utils$1.forEach(knownAdapters,((fn,value)=>{if(fn){try{Object.defineProperty(fn,"name",{value})}catch(e){}Object.defineProperty(fn,"adapterName",{value})}}));const renderReason=reason=>`- ${reason}`;const isResolvedHandle=adapter=>utils$1.isFunction(adapter)||adapter===null||adapter===false;const adapters={getAdapter:adapters=>{adapters=utils$1.isArray(adapters)?adapters:[adapters];const{length}=adapters;let nameOrAdapter;let adapter;const rejectedReasons={};for(let i=0;i<length;i++){nameOrAdapter=adapters[i];let id;adapter=nameOrAdapter;if(!isResolvedHandle(nameOrAdapter)){adapter=knownAdapters[(id=String(nameOrAdapter)).toLowerCase()];if(adapter===undefined){throw new AxiosError(`Unknown adapter '${id}'`)}}if(adapter){break}rejectedReasons[id||"#"+i]=adapter}if(!adapter){const reasons=Object.entries(rejectedReasons).map((([id,state])=>`adapter ${id} `+(state===false?"is not supported by the environment":"is not available in the build")));let s=length?reasons.length>1?"since :\n"+reasons.map(renderReason).join("\n"):" "+renderReason(reasons[0]):"as no adapter specified";throw new AxiosError(`There is no suitable adapter to dispatch the request `+s,"ERR_NOT_SUPPORT")}return adapter},adapters:knownAdapters};function throwIfCancellationRequested(config){if(config.cancelToken){config.cancelToken.throwIfRequested()}if(config.signal&&config.signal.aborted){throw new CanceledError(null,config)}}function dispatchRequest(config){throwIfCancellationRequested(config);config.headers=AxiosHeaders$1.from(config.headers);config.data=transformData.call(config,config.transformRequest);if(["post","put","patch"].indexOf(config.method)!==-1){config.headers.setContentType("application/x-www-form-urlencoded",false)}const adapter=adapters.getAdapter(config.adapter||defaults$1.adapter);return adapter(config).then((function onAdapterResolution(response){throwIfCancellationRequested(config);response.data=transformData.call(config,config.transformResponse,response);response.headers=AxiosHeaders$1.from(response.headers);return response}),(function onAdapterRejection(reason){if(!isCancel(reason)){throwIfCancellationRequested(config);if(reason&&reason.response){reason.response.data=transformData.call(config,config.transformResponse,reason.response);reason.response.headers=AxiosHeaders$1.from(reason.response.headers)}}return Promise.reject(reason)}))}const headersToObject=thing=>thing instanceof AxiosHeaders$1?thing.toJSON():thing;function mergeConfig(config1,config2){config2=config2||{};const config={};function getMergedValue(target,source,caseless){if(utils$1.isPlainObject(target)&&utils$1.isPlainObject(source)){return utils$1.merge.call({caseless},target,source)}else if(utils$1.isPlainObject(source)){return utils$1.merge({},source)}else if(utils$1.isArray(source)){return source.slice()}return source}function mergeDeepProperties(a,b,caseless){if(!utils$1.isUndefined(b)){return getMergedValue(a,b,caseless)}else if(!utils$1.isUndefined(a)){return getMergedValue(undefined,a,caseless)}}function valueFromConfig2(a,b){if(!utils$1.isUndefined(b)){return getMergedValue(undefined,b)}}function defaultToConfig2(a,b){if(!utils$1.isUndefined(b)){return getMergedValue(undefined,b)}else if(!utils$1.isUndefined(a)){return getMergedValue(undefined,a)}}function mergeDirectKeys(a,b,prop){if(prop in config2){return getMergedValue(a,b)}else if(prop in config1){return getMergedValue(undefined,a)}}const mergeMap={url:valueFromConfig2,method:valueFromConfig2,data:valueFromConfig2,baseURL:defaultToConfig2,transformRequest:defaultToConfig2,transformResponse:defaultToConfig2,paramsSerializer:defaultToConfig2,timeout:defaultToConfig2,timeoutMessage:defaultToConfig2,withCredentials:defaultToConfig2,adapter:defaultToConfig2,responseType:defaultToConfig2,xsrfCookieName:defaultToConfig2,xsrfHeaderName:defaultToConfig2,onUploadProgress:defaultToConfig2,onDownloadProgress:defaultToConfig2,decompress:defaultToConfig2,maxContentLength:defaultToConfig2,maxBodyLength:defaultToConfig2,beforeRedirect:defaultToConfig2,transport:defaultToConfig2,httpAgent:defaultToConfig2,httpsAgent:defaultToConfig2,cancelToken:defaultToConfig2,socketPath:defaultToConfig2,responseEncoding:defaultToConfig2,validateStatus:mergeDirectKeys,headers:(a,b)=>mergeDeepProperties(headersToObject(a),headersToObject(b),true)};utils$1.forEach(Object.keys(Object.assign({},config1,config2)),(function computeConfigValue(prop){const merge=mergeMap[prop]||mergeDeepProperties;const configValue=merge(config1[prop],config2[prop],prop);utils$1.isUndefined(configValue)&&merge!==mergeDirectKeys||(config[prop]=configValue)}));return config}const validators$1={};["object","boolean","number","function","string","symbol"].forEach(((type,i)=>{validators$1[type]=function validator(thing){return typeof thing===type||"a"+(i<1?"n ":" ")+type}}));const deprecatedWarnings={};validators$1.transitional=function transitional(validator,version,message){function formatMessage(opt,desc){return"[Axios v"+VERSION+"] Transitional option '"+opt+"'"+desc+(message?". "+message:"")}return(value,opt,opts)=>{if(validator===false){throw new AxiosError(formatMessage(opt," has been removed"+(version?" in "+version:"")),AxiosError.ERR_DEPRECATED)}if(version&&!deprecatedWarnings[opt]){deprecatedWarnings[opt]=true;console.warn(formatMessage(opt," has been deprecated since v"+version+" and will be removed in the near future"))}return validator?validator(value,opt,opts):true}};function assertOptions(options,schema,allowUnknown){if(typeof options!=="object"){throw new AxiosError("options must be an object",AxiosError.ERR_BAD_OPTION_VALUE)}const keys=Object.keys(options);let i=keys.length;while(i-- >0){const opt=keys[i];const validator=schema[opt];if(validator){const value=options[opt];const result=value===undefined||validator(value,opt,options);if(result!==true){throw new AxiosError("option "+opt+" must be "+result,AxiosError.ERR_BAD_OPTION_VALUE)}continue}if(allowUnknown!==true){throw new AxiosError("Unknown option "+opt,AxiosError.ERR_BAD_OPTION)}}}const validator={assertOptions,validators:validators$1};const validators=validator.validators;class Axios{constructor(instanceConfig){this.defaults=instanceConfig;this.interceptors={request:new InterceptorManager$1,response:new InterceptorManager$1}}request(configOrUrl,config){if(typeof configOrUrl==="string"){config=config||{};config.url=configOrUrl}else{config=configOrUrl||{}}config=mergeConfig(this.defaults,config);const{transitional,paramsSerializer,headers}=config;if(transitional!==undefined){validator.assertOptions(transitional,{silentJSONParsing:validators.transitional(validators.boolean),forcedJSONParsing:validators.transitional(validators.boolean),clarifyTimeoutError:validators.transitional(validators.boolean)},false)}if(paramsSerializer!=null){if(utils$1.isFunction(paramsSerializer)){config.paramsSerializer={serialize:paramsSerializer}}else{validator.assertOptions(paramsSerializer,{encode:validators.function,serialize:validators.function},true)}}config.method=(config.method||this.defaults.method||"get").toLowerCase();let contextHeaders=headers&&utils$1.merge(headers.common,headers[config.method]);headers&&utils$1.forEach(["delete","get","head","post","put","patch","common"],(method=>{delete headers[method]}));config.headers=AxiosHeaders$1.concat(contextHeaders,headers);const requestInterceptorChain=[];let synchronousRequestInterceptors=true;this.interceptors.request.forEach((function unshiftRequestInterceptors(interceptor){if(typeof interceptor.runWhen==="function"&&interceptor.runWhen(config)===false){return}synchronousRequestInterceptors=synchronousRequestInterceptors&&interceptor.synchronous;requestInterceptorChain.unshift(interceptor.fulfilled,interceptor.rejected)}));const responseInterceptorChain=[];this.interceptors.response.forEach((function pushResponseInterceptors(interceptor){responseInterceptorChain.push(interceptor.fulfilled,interceptor.rejected)}));let promise;let i=0;let len;if(!synchronousRequestInterceptors){const chain=[dispatchRequest.bind(this),undefined];chain.unshift.apply(chain,requestInterceptorChain);chain.push.apply(chain,responseInterceptorChain);len=chain.length;promise=Promise.resolve(config);while(i<len){promise=promise.then(chain[i++],chain[i++])}return promise}len=requestInterceptorChain.length;let newConfig=config;i=0;while(i<len){const onFulfilled=requestInterceptorChain[i++];const onRejected=requestInterceptorChain[i++];try{newConfig=onFulfilled(newConfig)}catch(error){onRejected.call(this,error);break}}try{promise=dispatchRequest.call(this,newConfig)}catch(error){return Promise.reject(error)}i=0;len=responseInterceptorChain.length;while(i<len){promise=promise.then(responseInterceptorChain[i++],responseInterceptorChain[i++])}return promise}getUri(config){config=mergeConfig(this.defaults,config);const fullPath=buildFullPath(config.baseURL,config.url);return buildURL(fullPath,config.params,config.paramsSerializer)}}utils$1.forEach(["delete","get","head","options"],(function forEachMethodNoData(method){Axios.prototype[method]=function(url,config){return this.request(mergeConfig(config||{},{method,url,data:(config||{}).data}))}}));utils$1.forEach(["post","put","patch"],(function forEachMethodWithData(method){function generateHTTPMethod(isForm){return function httpMethod(url,data,config){return this.request(mergeConfig(config||{},{method,headers:isForm?{"Content-Type":"multipart/form-data"}:{},url,data}))}}Axios.prototype[method]=generateHTTPMethod();Axios.prototype[method+"Form"]=generateHTTPMethod(true)}));const Axios$1=Axios;class CancelToken{constructor(executor){if(typeof executor!=="function"){throw new TypeError("executor must be a function.")}let resolvePromise;this.promise=new Promise((function promiseExecutor(resolve){resolvePromise=resolve}));const token=this;this.promise.then((cancel=>{if(!token._listeners)return;let i=token._listeners.length;while(i-- >0){token._listeners[i](cancel)}token._listeners=null}));this.promise.then=onfulfilled=>{let _resolve;const promise=new Promise((resolve=>{token.subscribe(resolve);_resolve=resolve})).then(onfulfilled);promise.cancel=function reject(){token.unsubscribe(_resolve)};return promise};executor((function cancel(message,config,request){if(token.reason){return}token.reason=new CanceledError(message,config,request);resolvePromise(token.reason)}))}throwIfRequested(){if(this.reason){throw this.reason}}subscribe(listener){if(this.reason){listener(this.reason);return}if(this._listeners){this._listeners.push(listener)}else{this._listeners=[listener]}}unsubscribe(listener){if(!this._listeners){return}const index=this._listeners.indexOf(listener);if(index!==-1){this._listeners.splice(index,1)}}static source(){let cancel;const token=new CancelToken((function executor(c){cancel=c}));return{token,cancel}}}const CancelToken$1=CancelToken;function spread(callback){return function wrap(arr){return callback.apply(null,arr)}}function isAxiosError(payload){return utils$1.isObject(payload)&&payload.isAxiosError===true}const HttpStatusCode={Continue:100,SwitchingProtocols:101,Processing:102,EarlyHints:103,Ok:200,Created:201,Accepted:202,NonAuthoritativeInformation:203,NoContent:204,ResetContent:205,PartialContent:206,MultiStatus:207,AlreadyReported:208,ImUsed:226,MultipleChoices:300,MovedPermanently:301,Found:302,SeeOther:303,NotModified:304,UseProxy:305,Unused:306,TemporaryRedirect:307,PermanentRedirect:308,BadRequest:400,Unauthorized:401,PaymentRequired:402,Forbidden:403,NotFound:404,MethodNotAllowed:405,NotAcceptable:406,ProxyAuthenticationRequired:407,RequestTimeout:408,Conflict:409,Gone:410,LengthRequired:411,PreconditionFailed:412,PayloadTooLarge:413,UriTooLong:414,UnsupportedMediaType:415,RangeNotSatisfiable:416,ExpectationFailed:417,ImATeapot:418,MisdirectedRequest:421,UnprocessableEntity:422,Locked:423,FailedDependency:424,TooEarly:425,UpgradeRequired:426,PreconditionRequired:428,TooManyRequests:429,RequestHeaderFieldsTooLarge:431,UnavailableForLegalReasons:451,InternalServerError:500,NotImplemented:501,BadGateway:502,ServiceUnavailable:503,GatewayTimeout:504,HttpVersionNotSupported:505,VariantAlsoNegotiates:506,InsufficientStorage:507,LoopDetected:508,NotExtended:510,NetworkAuthenticationRequired:511};Object.entries(HttpStatusCode).forEach((([key,value])=>{HttpStatusCode[value]=key}));const HttpStatusCode$1=HttpStatusCode;function createInstance(defaultConfig){const context=new Axios$1(defaultConfig);const instance=bind(Axios$1.prototype.request,context);utils$1.extend(instance,Axios$1.prototype,context,{allOwnKeys:true});utils$1.extend(instance,context,null,{allOwnKeys:true});instance.create=function create(instanceConfig){return createInstance(mergeConfig(defaultConfig,instanceConfig))};return instance}const axios=createInstance(defaults$1);axios.Axios=Axios$1;axios.CanceledError=CanceledError;axios.CancelToken=CancelToken$1;axios.isCancel=isCancel;axios.VERSION=VERSION;axios.toFormData=toFormData;axios.AxiosError=AxiosError;axios.Cancel=axios.CanceledError;axios.all=function all(promises){return Promise.all(promises)};axios.spread=spread;axios.isAxiosError=isAxiosError;axios.mergeConfig=mergeConfig;axios.AxiosHeaders=AxiosHeaders$1;axios.formToJSON=thing=>formDataToJSON(utils$1.isHTMLForm(thing)?new FormData(thing):thing);axios.getAdapter=adapters.getAdapter;axios.HttpStatusCode=HttpStatusCode$1;axios.default=axios;module.exports=axios},2712:(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{__addDisposableResource:()=>__addDisposableResource,__assign:()=>__assign,__asyncDelegator:()=>__asyncDelegator,__asyncGenerator:()=>__asyncGenerator,__asyncValues:()=>__asyncValues,__await:()=>__await,__awaiter:()=>__awaiter,__classPrivateFieldGet:()=>__classPrivateFieldGet,__classPrivateFieldIn:()=>__classPrivateFieldIn,__classPrivateFieldSet:()=>__classPrivateFieldSet,__createBinding:()=>__createBinding,__decorate:()=>__decorate,__disposeResources:()=>__disposeResources,__esDecorate:()=>__esDecorate,__exportStar:()=>__exportStar,__extends:()=>__extends,__generator:()=>__generator,__importDefault:()=>__importDefault,__importStar:()=>__importStar,__makeTemplateObject:()=>__makeTemplateObject,__metadata:()=>__metadata,__param:()=>__param,__propKey:()=>__propKey,__read:()=>__read,__rest:()=>__rest,__runInitializers:()=>__runInitializers,__setFunctionName:()=>__setFunctionName,__spread:()=>__spread,__spreadArray:()=>__spreadArray,__spreadArrays:()=>__spreadArrays,__values:()=>__values,default:()=>__WEBPACK_DEFAULT_EXPORT__});var extendStatics=function(d,b){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)if(Object.prototype.hasOwnProperty.call(b,p))d[p]=b[p]};return extendStatics(d,b)};function __extends(d,b){if(typeof b!=="function"&&b!==null)throw new TypeError("Class extends value "+String(b)+" is not a constructor or null");extendStatics(d,b);function __(){this.constructor=d}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __)}var __assign=function(){__assign=Object.assign||function __assign(t){for(var s,i=1,n=arguments.length;i<n;i++){s=arguments[i];for(var p in s)if(Object.prototype.hasOwnProperty.call(s,p))t[p]=s[p]}return t};return __assign.apply(this,arguments)};function __rest(s,e){var t={};for(var p in s)if(Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0)t[p]=s[p];if(s!=null&&typeof Object.getOwnPropertySymbols==="function")for(var i=0,p=Object.getOwnPropertySymbols(s);i<p.length;i++){if(e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i]))t[p[i]]=s[p[i]]}return t}function __decorate(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if(typeof Reflect==="object"&&typeof Reflect.decorate==="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)if(d=decorators[i])r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r;return c>3&&r&&Object.defineProperty(target,key,r),r}function __param(paramIndex,decorator){return function(target,key){decorator(target,key,paramIndex)}}function __esDecorate(ctor,descriptorIn,decorators,contextIn,initializers,extraInitializers){function accept(f){if(f!==void 0&&typeof f!=="function")throw new TypeError("Function expected");return f}var kind=contextIn.kind,key=kind==="getter"?"get":kind==="setter"?"set":"value";var target=!descriptorIn&&ctor?contextIn["static"]?ctor:ctor.prototype:null;var descriptor=descriptorIn||(target?Object.getOwnPropertyDescriptor(target,contextIn.name):{});var _,done=false;for(var i=decorators.length-1;i>=0;i--){var context={};for(var p in contextIn)context[p]=p==="access"?{}:contextIn[p];for(var p in contextIn.access)context.access[p]=contextIn.access[p];context.addInitializer=function(f){if(done)throw new TypeError("Cannot add initializers after decoration has completed");extraInitializers.push(accept(f||null))};var result=(0,decorators[i])(kind==="accessor"?{get:descriptor.get,set:descriptor.set}:descriptor[key],context);if(kind==="accessor"){if(result===void 0)continue;if(result===null||typeof result!=="object")throw new TypeError("Object expected");if(_=accept(result.get))descriptor.get=_;if(_=accept(result.set))descriptor.set=_;if(_=accept(result.init))initializers.unshift(_)}else if(_=accept(result)){if(kind==="field")initializers.unshift(_);else descriptor[key]=_}}if(target)Object.defineProperty(target,contextIn.name,descriptor);done=true}function __runInitializers(thisArg,initializers,value){var useValue=arguments.length>2;for(var i=0;i<initializers.length;i++){value=useValue?initializers[i].call(thisArg,value):initializers[i].call(thisArg)}return useValue?value:void 0}function __propKey(x){return typeof x==="symbol"?x:"".concat(x)}function __setFunctionName(f,name,prefix){if(typeof name==="symbol")name=name.description?"[".concat(name.description,"]"):"";return Object.defineProperty(f,"name",{configurable:true,value:prefix?"".concat(prefix," ",name):name})}function __metadata(metadataKey,metadataValue){if(typeof Reflect==="object"&&typeof Reflect.metadata==="function")return Reflect.metadata(metadataKey,metadataValue)}function __awaiter(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P((function(resolve){resolve(value)}))}return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))}function __generator(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(g&&(g=0,op[0]&&(_=0)),_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}}var __createBinding=Object.create?function(o,m,k,k2){if(k2===undefined)k2=k;var desc=Object.getOwnPropertyDescriptor(m,k);if(!desc||("get"in desc?!m.__esModule:desc.writable||desc.configurable)){desc={enumerable:true,get:function(){return m[k]}}}Object.defineProperty(o,k2,desc)}:function(o,m,k,k2){if(k2===undefined)k2=k;o[k2]=m[k]};function __exportStar(m,o){for(var p in m)if(p!=="default"&&!Object.prototype.hasOwnProperty.call(o,p))__createBinding(o,m,p)}function __values(o){var s=typeof Symbol==="function"&&Symbol.iterator,m=s&&o[s],i=0;if(m)return m.call(o);if(o&&typeof o.length==="number")return{next:function(){if(o&&i>=o.length)o=void 0;return{value:o&&o[i++],done:!o}}};throw new TypeError(s?"Object is not iterable.":"Symbol.iterator is not defined.")}function __read(o,n){var m=typeof Symbol==="function"&&o[Symbol.iterator];if(!m)return o;var i=m.call(o),r,ar=[],e;try{while((n===void 0||n-- >0)&&!(r=i.next()).done)ar.push(r.value)}catch(error){e={error}}finally{try{if(r&&!r.done&&(m=i["return"]))m.call(i)}finally{if(e)throw e.error}}return ar}function __spread(){for(var ar=[],i=0;i<arguments.length;i++)ar=ar.concat(__read(arguments[i]));return ar}function __spreadArrays(){for(var s=0,i=0,il=arguments.length;i<il;i++)s+=arguments[i].length;for(var r=Array(s),k=0,i=0;i<il;i++)for(var a=arguments[i],j=0,jl=a.length;j<jl;j++,k++)r[k]=a[j];return r}function __spreadArray(to,from,pack){if(pack||arguments.length===2)for(var i=0,l=from.length,ar;i<l;i++){if(ar||!(i in from)){if(!ar)ar=Array.prototype.slice.call(from,0,i);ar[i]=from[i]}}return to.concat(ar||Array.prototype.slice.call(from))}function __await(v){return this instanceof __await?(this.v=v,this):new __await(v)}function __asyncGenerator(thisArg,_arguments,generator){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var g=generator.apply(thisArg,_arguments||[]),i,q=[];return i={},verb("next"),verb("throw"),verb("return"),i[Symbol.asyncIterator]=function(){return this},i;function verb(n){if(g[n])i[n]=function(v){return new Promise((function(a,b){q.push([n,v,a,b])>1||resume(n,v)}))}}function resume(n,v){try{step(g[n](v))}catch(e){settle(q[0][3],e)}}function step(r){r.value instanceof __await?Promise.resolve(r.value.v).then(fulfill,reject):settle(q[0][2],r)}function fulfill(value){resume("next",value)}function reject(value){resume("throw",value)}function settle(f,v){if(f(v),q.shift(),q.length)resume(q[0][0],q[0][1])}}function __asyncDelegator(o){var i,p;return i={},verb("next"),verb("throw",(function(e){throw e})),verb("return"),i[Symbol.iterator]=function(){return this},i;function verb(n,f){i[n]=o[n]?function(v){return(p=!p)?{value:__await(o[n](v)),done:false}:f?f(v):v}:f}}function __asyncValues(o){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var m=o[Symbol.asyncIterator],i;return m?m.call(o):(o=typeof __values==="function"?__values(o):o[Symbol.iterator](),i={},verb("next"),verb("throw"),verb("return"),i[Symbol.asyncIterator]=function(){return this},i);function verb(n){i[n]=o[n]&&function(v){return new Promise((function(resolve,reject){v=o[n](v),settle(resolve,reject,v.done,v.value)}))}}function settle(resolve,reject,d,v){Promise.resolve(v).then((function(v){resolve({value:v,done:d})}),reject)}}function __makeTemplateObject(cooked,raw){if(Object.defineProperty){Object.defineProperty(cooked,"raw",{value:raw})}else{cooked.raw=raw}return cooked}var __setModuleDefault=Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:true,value:v})}:function(o,v){o["default"]=v};function __importStar(mod){if(mod&&mod.__esModule)return mod;var result={};if(mod!=null)for(var k in mod)if(k!=="default"&&Object.prototype.hasOwnProperty.call(mod,k))__createBinding(result,mod,k);__setModuleDefault(result,mod);return result}function __importDefault(mod){return mod&&mod.__esModule?mod:{default:mod}}function __classPrivateFieldGet(receiver,state,kind,f){if(kind==="a"&&!f)throw new TypeError("Private accessor was defined without a getter");if(typeof state==="function"?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return kind==="m"?f:kind==="a"?f.call(receiver):f?f.value:state.get(receiver)}function __classPrivateFieldSet(receiver,state,value,kind,f){if(kind==="m")throw new TypeError("Private method is not writable");if(kind==="a"&&!f)throw new TypeError("Private accessor was defined without a setter");if(typeof state==="function"?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot write private member to an object whose class did not declare it");return kind==="a"?f.call(receiver,value):f?f.value=value:state.set(receiver,value),value}function __classPrivateFieldIn(state,receiver){if(receiver===null||typeof receiver!=="object"&&typeof receiver!=="function")throw new TypeError("Cannot use 'in' operator on non-object");return typeof state==="function"?receiver===state:state.has(receiver)}function __addDisposableResource(env,value,async){if(value!==null&&value!==void 0){if(typeof value!=="object"&&typeof value!=="function")throw new TypeError("Object expected.");var dispose;if(async){if(!Symbol.asyncDispose)throw new TypeError("Symbol.asyncDispose is not defined.");dispose=value[Symbol.asyncDispose]}if(dispose===void 0){if(!Symbol.dispose)throw new TypeError("Symbol.dispose is not defined.");dispose=value[Symbol.dispose]}if(typeof dispose!=="function")throw new TypeError("Object not disposable.");env.stack.push({value,dispose,async})}else if(async){env.stack.push({async:true})}return value}var _SuppressedError=typeof SuppressedError==="function"?SuppressedError:function(error,suppressed,message){var e=new Error(message);return e.name="SuppressedError",e.error=error,e.suppressed=suppressed,e};function __disposeResources(env){function fail(e){env.error=env.hasError?new _SuppressedError(e,env.error,"An error was suppressed during disposal."):e;env.hasError=true}function next(){while(env.stack.length){var rec=env.stack.pop();try{var result=rec.dispose&&rec.dispose.call(rec.value);if(rec.async)return Promise.resolve(result).then(next,(function(e){fail(e);return next()}))}catch(e){fail(e)}}if(env.hasError)throw env.error}return next()}const __WEBPACK_DEFAULT_EXPORT__={__extends,__assign,__rest,__decorate,__param,__metadata,__awaiter,__generator,__createBinding,__exportStar,__values,__read,__spread,__spreadArrays,__spreadArray,__await,__asyncGenerator,__asyncDelegator,__asyncValues,__makeTemplateObject,__importStar,__importDefault,__classPrivateFieldGet,__classPrivateFieldSet,__classPrivateFieldIn,__addDisposableResource,__disposeResources}},8555:module=>{"use strict";module.exports=JSON.parse('{"name":"joi","description":"Object schema validation","version":"17.11.0","repository":"git://github.com/hapijs/joi","main":"lib/index.js","types":"lib/index.d.ts","browser":"dist/joi-browser.min.js","files":["lib/**/*","dist/*"],"keywords":["schema","validation"],"dependencies":{"@hapi/hoek":"^9.0.0","@hapi/topo":"^5.0.0","@sideway/address":"^4.1.3","@sideway/formula":"^3.0.1","@sideway/pinpoint":"^2.0.0"},"devDependencies":{"@hapi/bourne":"2.x.x","@hapi/code":"8.x.x","@hapi/joi-legacy-test":"npm:@hapi/joi@15.x.x","@hapi/lab":"^25.0.1","@types/node":"^14.18.24","typescript":"4.3.x"},"scripts":{"prepublishOnly":"cd browser && npm install && npm run build","test":"lab -t 100 -a @hapi/code -L -Y","test-cov-html":"lab -r html -o coverage.html -a @hapi/code"},"license":"BSD-3-Clause"}')},9857:module=>{"use strict";module.exports=JSON.parse('{"application/1d-interleaved-parityfec":{"source":"iana"},"application/3gpdash-qoe-report+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/3gpp-ims+xml":{"source":"iana","compressible":true},"application/3gpphal+json":{"source":"iana","compressible":true},"application/3gpphalforms+json":{"source":"iana","compressible":true},"application/a2l":{"source":"iana"},"application/ace+cbor":{"source":"iana"},"application/activemessage":{"source":"iana"},"application/activity+json":{"source":"iana","compressible":true},"application/alto-costmap+json":{"source":"iana","compressible":true},"application/alto-costmapfilter+json":{"source":"iana","compressible":true},"application/alto-directory+json":{"source":"iana","compressible":true},"application/alto-endpointcost+json":{"source":"iana","compressible":true},"application/alto-endpointcostparams+json":{"source":"iana","compressible":true},"application/alto-endpointprop+json":{"source":"iana","compressible":true},"application/alto-endpointpropparams+json":{"source":"iana","compressible":true},"application/alto-error+json":{"source":"iana","compressible":true},"application/alto-networkmap+json":{"source":"iana","compressible":true},"application/alto-networkmapfilter+json":{"source":"iana","compressible":true},"application/alto-updatestreamcontrol+json":{"source":"iana","compressible":true},"application/alto-updatestreamparams+json":{"source":"iana","compressible":true},"application/aml":{"source":"iana"},"application/andrew-inset":{"source":"iana","extensions":["ez"]},"application/applefile":{"source":"iana"},"application/applixware":{"source":"apache","extensions":["aw"]},"application/at+jwt":{"source":"iana"},"application/atf":{"source":"iana"},"application/atfx":{"source":"iana"},"application/atom+xml":{"source":"iana","compressible":true,"extensions":["atom"]},"application/atomcat+xml":{"source":"iana","compressible":true,"extensions":["atomcat"]},"application/atomdeleted+xml":{"source":"iana","compressible":true,"extensions":["atomdeleted"]},"application/atomicmail":{"source":"iana"},"application/atomsvc+xml":{"source":"iana","compressible":true,"extensions":["atomsvc"]},"application/atsc-dwd+xml":{"source":"iana","compressible":true,"extensions":["dwd"]},"application/atsc-dynamic-event-message":{"source":"iana"},"application/atsc-held+xml":{"source":"iana","compressible":true,"extensions":["held"]},"application/atsc-rdt+json":{"source":"iana","compressible":true},"application/atsc-rsat+xml":{"source":"iana","compressible":true,"extensions":["rsat"]},"application/atxml":{"source":"iana"},"application/auth-policy+xml":{"source":"iana","compressible":true},"application/bacnet-xdd+zip":{"source":"iana","compressible":false},"application/batch-smtp":{"source":"iana"},"application/bdoc":{"compressible":false,"extensions":["bdoc"]},"application/beep+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/calendar+json":{"source":"iana","compressible":true},"application/calendar+xml":{"source":"iana","compressible":true,"extensions":["xcs"]},"application/call-completion":{"source":"iana"},"application/cals-1840":{"source":"iana"},"application/captive+json":{"source":"iana","compressible":true},"application/cbor":{"source":"iana"},"application/cbor-seq":{"source":"iana"},"application/cccex":{"source":"iana"},"application/ccmp+xml":{"source":"iana","compressible":true},"application/ccxml+xml":{"source":"iana","compressible":true,"extensions":["ccxml"]},"application/cdfx+xml":{"source":"iana","compressible":true,"extensions":["cdfx"]},"application/cdmi-capability":{"source":"iana","extensions":["cdmia"]},"application/cdmi-container":{"source":"iana","extensions":["cdmic"]},"application/cdmi-domain":{"source":"iana","extensions":["cdmid"]},"application/cdmi-object":{"source":"iana","extensions":["cdmio"]},"application/cdmi-queue":{"source":"iana","extensions":["cdmiq"]},"application/cdni":{"source":"iana"},"application/cea":{"source":"iana"},"application/cea-2018+xml":{"source":"iana","compressible":true},"application/cellml+xml":{"source":"iana","compressible":true},"application/cfw":{"source":"iana"},"application/city+json":{"source":"iana","compressible":true},"application/clr":{"source":"iana"},"application/clue+xml":{"source":"iana","compressible":true},"application/clue_info+xml":{"source":"iana","compressible":true},"application/cms":{"source":"iana"},"application/cnrp+xml":{"source":"iana","compressible":true},"application/coap-group+json":{"source":"iana","compressible":true},"application/coap-payload":{"source":"iana"},"application/commonground":{"source":"iana"},"application/conference-info+xml":{"source":"iana","compressible":true},"application/cose":{"source":"iana"},"application/cose-key":{"source":"iana"},"application/cose-key-set":{"source":"iana"},"application/cpl+xml":{"source":"iana","compressible":true,"extensions":["cpl"]},"application/csrattrs":{"source":"iana"},"application/csta+xml":{"source":"iana","compressible":true},"application/cstadata+xml":{"source":"iana","compressible":true},"application/csvm+json":{"source":"iana","compressible":true},"application/cu-seeme":{"source":"apache","extensions":["cu"]},"application/cwt":{"source":"iana"},"application/cybercash":{"source":"iana"},"application/dart":{"compressible":true},"application/dash+xml":{"source":"iana","compressible":true,"extensions":["mpd"]},"application/dash-patch+xml":{"source":"iana","compressible":true,"extensions":["mpp"]},"application/dashdelta":{"source":"iana"},"application/davmount+xml":{"source":"iana","compressible":true,"extensions":["davmount"]},"application/dca-rft":{"source":"iana"},"application/dcd":{"source":"iana"},"application/dec-dx":{"source":"iana"},"application/dialog-info+xml":{"source":"iana","compressible":true},"application/dicom":{"source":"iana"},"application/dicom+json":{"source":"iana","compressible":true},"application/dicom+xml":{"source":"iana","compressible":true},"application/dii":{"source":"iana"},"application/dit":{"source":"iana"},"application/dns":{"source":"iana"},"application/dns+json":{"source":"iana","compressible":true},"application/dns-message":{"source":"iana"},"application/docbook+xml":{"source":"apache","compressible":true,"extensions":["dbk"]},"application/dots+cbor":{"source":"iana"},"application/dskpp+xml":{"source":"iana","compressible":true},"application/dssc+der":{"source":"iana","extensions":["dssc"]},"application/dssc+xml":{"source":"iana","compressible":true,"extensions":["xdssc"]},"application/dvcs":{"source":"iana"},"application/ecmascript":{"source":"iana","compressible":true,"extensions":["es","ecma"]},"application/edi-consent":{"source":"iana"},"application/edi-x12":{"source":"iana","compressible":false},"application/edifact":{"source":"iana","compressible":false},"application/efi":{"source":"iana"},"application/elm+json":{"source":"iana","charset":"UTF-8","compressible":true},"application/elm+xml":{"source":"iana","compressible":true},"application/emergencycalldata.cap+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/emergencycalldata.comment+xml":{"source":"iana","compressible":true},"application/emergencycalldata.control+xml":{"source":"iana","compressible":true},"application/emergencycalldata.deviceinfo+xml":{"source":"iana","compressible":true},"application/emergencycalldata.ecall.msd":{"source":"iana"},"application/emergencycalldata.providerinfo+xml":{"source":"iana","compressible":true},"application/emergencycalldata.serviceinfo+xml":{"source":"iana","compressible":true},"application/emergencycalldata.subscriberinfo+xml":{"source":"iana","compressible":true},"application/emergencycalldata.veds+xml":{"source":"iana","compressible":true},"application/emma+xml":{"source":"iana","compressible":true,"extensions":["emma"]},"application/emotionml+xml":{"source":"iana","compressible":true,"extensions":["emotionml"]},"application/encaprtp":{"source":"iana"},"application/epp+xml":{"source":"iana","compressible":true},"application/epub+zip":{"source":"iana","compressible":false,"extensions":["epub"]},"application/eshop":{"source":"iana"},"application/exi":{"source":"iana","extensions":["exi"]},"application/expect-ct-report+json":{"source":"iana","compressible":true},"application/express":{"source":"iana","extensions":["exp"]},"application/fastinfoset":{"source":"iana"},"application/fastsoap":{"source":"iana"},"application/fdt+xml":{"source":"iana","compressible":true,"extensions":["fdt"]},"application/fhir+json":{"source":"iana","charset":"UTF-8","compressible":true},"application/fhir+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/fido.trusted-apps+json":{"compressible":true},"application/fits":{"source":"iana"},"application/flexfec":{"source":"iana"},"application/font-sfnt":{"source":"iana"},"application/font-tdpfr":{"source":"iana","extensions":["pfr"]},"application/font-woff":{"source":"iana","compressible":false},"application/framework-attributes+xml":{"source":"iana","compressible":true},"application/geo+json":{"source":"iana","compressible":true,"extensions":["geojson"]},"application/geo+json-seq":{"source":"iana"},"application/geopackage+sqlite3":{"source":"iana"},"application/geoxacml+xml":{"source":"iana","compressible":true},"application/gltf-buffer":{"source":"iana"},"application/gml+xml":{"source":"iana","compressible":true,"extensions":["gml"]},"application/gpx+xml":{"source":"apache","compressible":true,"extensions":["gpx"]},"application/gxf":{"source":"apache","extensions":["gxf"]},"application/gzip":{"source":"iana","compressible":false,"extensions":["gz"]},"application/h224":{"source":"iana"},"application/held+xml":{"source":"iana","compressible":true},"application/hjson":{"extensions":["hjson"]},"application/http":{"source":"iana"},"application/hyperstudio":{"source":"iana","extensions":["stk"]},"application/ibe-key-request+xml":{"source":"iana","compressible":true},"application/ibe-pkg-reply+xml":{"source":"iana","compressible":true},"application/ibe-pp-data":{"source":"iana"},"application/iges":{"source":"iana"},"application/im-iscomposing+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/index":{"source":"iana"},"application/index.cmd":{"source":"iana"},"application/index.obj":{"source":"iana"},"application/index.response":{"source":"iana"},"application/index.vnd":{"source":"iana"},"application/inkml+xml":{"source":"iana","compressible":true,"extensions":["ink","inkml"]},"application/iotp":{"source":"iana"},"application/ipfix":{"source":"iana","extensions":["ipfix"]},"application/ipp":{"source":"iana"},"application/isup":{"source":"iana"},"application/its+xml":{"source":"iana","compressible":true,"extensions":["its"]},"application/java-archive":{"source":"apache","compressible":false,"extensions":["jar","war","ear"]},"application/java-serialized-object":{"source":"apache","compressible":false,"extensions":["ser"]},"application/java-vm":{"source":"apache","compressible":false,"extensions":["class"]},"application/javascript":{"source":"iana","charset":"UTF-8","compressible":true,"extensions":["js","mjs"]},"application/jf2feed+json":{"source":"iana","compressible":true},"application/jose":{"source":"iana"},"application/jose+json":{"source":"iana","compressible":true},"application/jrd+json":{"source":"iana","compressible":true},"application/jscalendar+json":{"source":"iana","compressible":true},"application/json":{"source":"iana","charset":"UTF-8","compressible":true,"extensions":["json","map"]},"application/json-patch+json":{"source":"iana","compressible":true},"application/json-seq":{"source":"iana"},"application/json5":{"extensions":["json5"]},"application/jsonml+json":{"source":"apache","compressible":true,"extensions":["jsonml"]},"application/jwk+json":{"source":"iana","compressible":true},"application/jwk-set+json":{"source":"iana","compressible":true},"application/jwt":{"source":"iana"},"application/kpml-request+xml":{"source":"iana","compressible":true},"application/kpml-response+xml":{"source":"iana","compressible":true},"application/ld+json":{"source":"iana","compressible":true,"extensions":["jsonld"]},"application/lgr+xml":{"source":"iana","compressible":true,"extensions":["lgr"]},"application/link-format":{"source":"iana"},"application/load-control+xml":{"source":"iana","compressible":true},"application/lost+xml":{"source":"iana","compressible":true,"extensions":["lostxml"]},"application/lostsync+xml":{"source":"iana","compressible":true},"application/lpf+zip":{"source":"iana","compressible":false},"application/lxf":{"source":"iana"},"application/mac-binhex40":{"source":"iana","extensions":["hqx"]},"application/mac-compactpro":{"source":"apache","extensions":["cpt"]},"application/macwriteii":{"source":"iana"},"application/mads+xml":{"source":"iana","compressible":true,"extensions":["mads"]},"application/manifest+json":{"source":"iana","charset":"UTF-8","compressible":true,"extensions":["webmanifest"]},"application/marc":{"source":"iana","extensions":["mrc"]},"application/marcxml+xml":{"source":"iana","compressible":true,"extensions":["mrcx"]},"application/mathematica":{"source":"iana","extensions":["ma","nb","mb"]},"application/mathml+xml":{"source":"iana","compressible":true,"extensions":["mathml"]},"application/mathml-content+xml":{"source":"iana","compressible":true},"application/mathml-presentation+xml":{"source":"iana","compressible":true},"application/mbms-associated-procedure-description+xml":{"source":"iana","compressible":true},"application/mbms-deregister+xml":{"source":"iana","compressible":true},"application/mbms-envelope+xml":{"source":"iana","compressible":true},"application/mbms-msk+xml":{"source":"iana","compressible":true},"application/mbms-msk-response+xml":{"source":"iana","compressible":true},"application/mbms-protection-description+xml":{"source":"iana","compressible":true},"application/mbms-reception-report+xml":{"source":"iana","compressible":true},"application/mbms-register+xml":{"source":"iana","compressible":true},"application/mbms-register-response+xml":{"source":"iana","compressible":true},"application/mbms-schedule+xml":{"source":"iana","compressible":true},"application/mbms-user-service-description+xml":{"source":"iana","compressible":true},"application/mbox":{"source":"iana","extensions":["mbox"]},"application/media-policy-dataset+xml":{"source":"iana","compressible":true,"extensions":["mpf"]},"application/media_control+xml":{"source":"iana","compressible":true},"application/mediaservercontrol+xml":{"source":"iana","compressible":true,"extensions":["mscml"]},"application/merge-patch+json":{"source":"iana","compressible":true},"application/metalink+xml":{"source":"apache","compressible":true,"extensions":["metalink"]},"application/metalink4+xml":{"source":"iana","compressible":true,"extensions":["meta4"]},"application/mets+xml":{"source":"iana","compressible":true,"extensions":["mets"]},"application/mf4":{"source":"iana"},"application/mikey":{"source":"iana"},"application/mipc":{"source":"iana"},"application/missing-blocks+cbor-seq":{"source":"iana"},"application/mmt-aei+xml":{"source":"iana","compressible":true,"extensions":["maei"]},"application/mmt-usd+xml":{"source":"iana","compressible":true,"extensions":["musd"]},"application/mods+xml":{"source":"iana","compressible":true,"extensions":["mods"]},"application/moss-keys":{"source":"iana"},"application/moss-signature":{"source":"iana"},"application/mosskey-data":{"source":"iana"},"application/mosskey-request":{"source":"iana"},"application/mp21":{"source":"iana","extensions":["m21","mp21"]},"application/mp4":{"source":"iana","extensions":["mp4s","m4p"]},"application/mpeg4-generic":{"source":"iana"},"application/mpeg4-iod":{"source":"iana"},"application/mpeg4-iod-xmt":{"source":"iana"},"application/mrb-consumer+xml":{"source":"iana","compressible":true},"application/mrb-publish+xml":{"source":"iana","compressible":true},"application/msc-ivr+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/msc-mixer+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/msword":{"source":"iana","compressible":false,"extensions":["doc","dot"]},"application/mud+json":{"source":"iana","compressible":true},"application/multipart-core":{"source":"iana"},"application/mxf":{"source":"iana","extensions":["mxf"]},"application/n-quads":{"source":"iana","extensions":["nq"]},"application/n-triples":{"source":"iana","extensions":["nt"]},"application/nasdata":{"source":"iana"},"application/news-checkgroups":{"source":"iana","charset":"US-ASCII"},"application/news-groupinfo":{"source":"iana","charset":"US-ASCII"},"application/news-transmission":{"source":"iana"},"application/nlsml+xml":{"source":"iana","compressible":true},"application/node":{"source":"iana","extensions":["cjs"]},"application/nss":{"source":"iana"},"application/oauth-authz-req+jwt":{"source":"iana"},"application/oblivious-dns-message":{"source":"iana"},"application/ocsp-request":{"source":"iana"},"application/ocsp-response":{"source":"iana"},"application/octet-stream":{"source":"iana","compressible":false,"extensions":["bin","dms","lrf","mar","so","dist","distz","pkg","bpk","dump","elc","deploy","exe","dll","deb","dmg","iso","img","msi","msp","msm","buffer"]},"application/oda":{"source":"iana","extensions":["oda"]},"application/odm+xml":{"source":"iana","compressible":true},"application/odx":{"source":"iana"},"application/oebps-package+xml":{"source":"iana","compressible":true,"extensions":["opf"]},"application/ogg":{"source":"iana","compressible":false,"extensions":["ogx"]},"application/omdoc+xml":{"source":"apache","compressible":true,"extensions":["omdoc"]},"application/onenote":{"source":"apache","extensions":["onetoc","onetoc2","onetmp","onepkg"]},"application/opc-nodeset+xml":{"source":"iana","compressible":true},"application/oscore":{"source":"iana"},"application/oxps":{"source":"iana","extensions":["oxps"]},"application/p21":{"source":"iana"},"application/p21+zip":{"source":"iana","compressible":false},"application/p2p-overlay+xml":{"source":"iana","compressible":true,"extensions":["relo"]},"application/parityfec":{"source":"iana"},"application/passport":{"source":"iana"},"application/patch-ops-error+xml":{"source":"iana","compressible":true,"extensions":["xer"]},"application/pdf":{"source":"iana","compressible":false,"extensions":["pdf"]},"application/pdx":{"source":"iana"},"application/pem-certificate-chain":{"source":"iana"},"application/pgp-encrypted":{"source":"iana","compressible":false,"extensions":["pgp"]},"application/pgp-keys":{"source":"iana","extensions":["asc"]},"application/pgp-signature":{"source":"iana","extensions":["asc","sig"]},"application/pics-rules":{"source":"apache","extensions":["prf"]},"application/pidf+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/pidf-diff+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/pkcs10":{"source":"iana","extensions":["p10"]},"application/pkcs12":{"source":"iana"},"application/pkcs7-mime":{"source":"iana","extensions":["p7m","p7c"]},"application/pkcs7-signature":{"source":"iana","extensions":["p7s"]},"application/pkcs8":{"source":"iana","extensions":["p8"]},"application/pkcs8-encrypted":{"source":"iana"},"application/pkix-attr-cert":{"source":"iana","extensions":["ac"]},"application/pkix-cert":{"source":"iana","extensions":["cer"]},"application/pkix-crl":{"source":"iana","extensions":["crl"]},"application/pkix-pkipath":{"source":"iana","extensions":["pkipath"]},"application/pkixcmp":{"source":"iana","extensions":["pki"]},"application/pls+xml":{"source":"iana","compressible":true,"extensions":["pls"]},"application/poc-settings+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/postscript":{"source":"iana","compressible":true,"extensions":["ai","eps","ps"]},"application/ppsp-tracker+json":{"source":"iana","compressible":true},"application/problem+json":{"source":"iana","compressible":true},"application/problem+xml":{"source":"iana","compressible":true},"application/provenance+xml":{"source":"iana","compressible":true,"extensions":["provx"]},"application/prs.alvestrand.titrax-sheet":{"source":"iana"},"application/prs.cww":{"source":"iana","extensions":["cww"]},"application/prs.cyn":{"source":"iana","charset":"7-BIT"},"application/prs.hpub+zip":{"source":"iana","compressible":false},"application/prs.nprend":{"source":"iana"},"application/prs.plucker":{"source":"iana"},"application/prs.rdf-xml-crypt":{"source":"iana"},"application/prs.xsf+xml":{"source":"iana","compressible":true},"application/pskc+xml":{"source":"iana","compressible":true,"extensions":["pskcxml"]},"application/pvd+json":{"source":"iana","compressible":true},"application/qsig":{"source":"iana"},"application/raml+yaml":{"compressible":true,"extensions":["raml"]},"application/raptorfec":{"source":"iana"},"application/rdap+json":{"source":"iana","compressible":true},"application/rdf+xml":{"source":"iana","compressible":true,"extensions":["rdf","owl"]},"application/reginfo+xml":{"source":"iana","compressible":true,"extensions":["rif"]},"application/relax-ng-compact-syntax":{"source":"iana","extensions":["rnc"]},"application/remote-printing":{"source":"iana"},"application/reputon+json":{"source":"iana","compressible":true},"application/resource-lists+xml":{"source":"iana","compressible":true,"extensions":["rl"]},"application/resource-lists-diff+xml":{"source":"iana","compressible":true,"extensions":["rld"]},"application/rfc+xml":{"source":"iana","compressible":true},"application/riscos":{"source":"iana"},"application/rlmi+xml":{"source":"iana","compressible":true},"application/rls-services+xml":{"source":"iana","compressible":true,"extensions":["rs"]},"application/route-apd+xml":{"source":"iana","compressible":true,"extensions":["rapd"]},"application/route-s-tsid+xml":{"source":"iana","compressible":true,"extensions":["sls"]},"application/route-usd+xml":{"source":"iana","compressible":true,"extensions":["rusd"]},"application/rpki-ghostbusters":{"source":"iana","extensions":["gbr"]},"application/rpki-manifest":{"source":"iana","extensions":["mft"]},"application/rpki-publication":{"source":"iana"},"application/rpki-roa":{"source":"iana","extensions":["roa"]},"application/rpki-updown":{"source":"iana"},"application/rsd+xml":{"source":"apache","compressible":true,"extensions":["rsd"]},"application/rss+xml":{"source":"apache","compressible":true,"extensions":["rss"]},"application/rtf":{"source":"iana","compressible":true,"extensions":["rtf"]},"application/rtploopback":{"source":"iana"},"application/rtx":{"source":"iana"},"application/samlassertion+xml":{"source":"iana","compressible":true},"application/samlmetadata+xml":{"source":"iana","compressible":true},"application/sarif+json":{"source":"iana","compressible":true},"application/sarif-external-properties+json":{"source":"iana","compressible":true},"application/sbe":{"source":"iana"},"application/sbml+xml":{"source":"iana","compressible":true,"extensions":["sbml"]},"application/scaip+xml":{"source":"iana","compressible":true},"application/scim+json":{"source":"iana","compressible":true},"application/scvp-cv-request":{"source":"iana","extensions":["scq"]},"application/scvp-cv-response":{"source":"iana","extensions":["scs"]},"application/scvp-vp-request":{"source":"iana","extensions":["spq"]},"application/scvp-vp-response":{"source":"iana","extensions":["spp"]},"application/sdp":{"source":"iana","extensions":["sdp"]},"application/secevent+jwt":{"source":"iana"},"application/senml+cbor":{"source":"iana"},"application/senml+json":{"source":"iana","compressible":true},"application/senml+xml":{"source":"iana","compressible":true,"extensions":["senmlx"]},"application/senml-etch+cbor":{"source":"iana"},"application/senml-etch+json":{"source":"iana","compressible":true},"application/senml-exi":{"source":"iana"},"application/sensml+cbor":{"source":"iana"},"application/sensml+json":{"source":"iana","compressible":true},"application/sensml+xml":{"source":"iana","compressible":true,"extensions":["sensmlx"]},"application/sensml-exi":{"source":"iana"},"application/sep+xml":{"source":"iana","compressible":true},"application/sep-exi":{"source":"iana"},"application/session-info":{"source":"iana"},"application/set-payment":{"source":"iana"},"application/set-payment-initiation":{"source":"iana","extensions":["setpay"]},"application/set-registration":{"source":"iana"},"application/set-registration-initiation":{"source":"iana","extensions":["setreg"]},"application/sgml":{"source":"iana"},"application/sgml-open-catalog":{"source":"iana"},"application/shf+xml":{"source":"iana","compressible":true,"extensions":["shf"]},"application/sieve":{"source":"iana","extensions":["siv","sieve"]},"application/simple-filter+xml":{"source":"iana","compressible":true},"application/simple-message-summary":{"source":"iana"},"application/simplesymbolcontainer":{"source":"iana"},"application/sipc":{"source":"iana"},"application/slate":{"source":"iana"},"application/smil":{"source":"iana"},"application/smil+xml":{"source":"iana","compressible":true,"extensions":["smi","smil"]},"application/smpte336m":{"source":"iana"},"application/soap+fastinfoset":{"source":"iana"},"application/soap+xml":{"source":"iana","compressible":true},"application/sparql-query":{"source":"iana","extensions":["rq"]},"application/sparql-results+xml":{"source":"iana","compressible":true,"extensions":["srx"]},"application/spdx+json":{"source":"iana","compressible":true},"application/spirits-event+xml":{"source":"iana","compressible":true},"application/sql":{"source":"iana"},"application/srgs":{"source":"iana","extensions":["gram"]},"application/srgs+xml":{"source":"iana","compressible":true,"extensions":["grxml"]},"application/sru+xml":{"source":"iana","compressible":true,"extensions":["sru"]},"application/ssdl+xml":{"source":"apache","compressible":true,"extensions":["ssdl"]},"application/ssml+xml":{"source":"iana","compressible":true,"extensions":["ssml"]},"application/stix+json":{"source":"iana","compressible":true},"application/swid+xml":{"source":"iana","compressible":true,"extensions":["swidtag"]},"application/tamp-apex-update":{"source":"iana"},"application/tamp-apex-update-confirm":{"source":"iana"},"application/tamp-community-update":{"source":"iana"},"application/tamp-community-update-confirm":{"source":"iana"},"application/tamp-error":{"source":"iana"},"application/tamp-sequence-adjust":{"source":"iana"},"application/tamp-sequence-adjust-confirm":{"source":"iana"},"application/tamp-status-query":{"source":"iana"},"application/tamp-status-response":{"source":"iana"},"application/tamp-update":{"source":"iana"},"application/tamp-update-confirm":{"source":"iana"},"application/tar":{"compressible":true},"application/taxii+json":{"source":"iana","compressible":true},"application/td+json":{"source":"iana","compressible":true},"application/tei+xml":{"source":"iana","compressible":true,"extensions":["tei","teicorpus"]},"application/tetra_isi":{"source":"iana"},"application/thraud+xml":{"source":"iana","compressible":true,"extensions":["tfi"]},"application/timestamp-query":{"source":"iana"},"application/timestamp-reply":{"source":"iana"},"application/timestamped-data":{"source":"iana","extensions":["tsd"]},"application/tlsrpt+gzip":{"source":"iana"},"application/tlsrpt+json":{"source":"iana","compressible":true},"application/tnauthlist":{"source":"iana"},"application/token-introspection+jwt":{"source":"iana"},"application/toml":{"compressible":true,"extensions":["toml"]},"application/trickle-ice-sdpfrag":{"source":"iana"},"application/trig":{"source":"iana","extensions":["trig"]},"application/ttml+xml":{"source":"iana","compressible":true,"extensions":["ttml"]},"application/tve-trigger":{"source":"iana"},"application/tzif":{"source":"iana"},"application/tzif-leap":{"source":"iana"},"application/ubjson":{"compressible":false,"extensions":["ubj"]},"application/ulpfec":{"source":"iana"},"application/urc-grpsheet+xml":{"source":"iana","compressible":true},"application/urc-ressheet+xml":{"source":"iana","compressible":true,"extensions":["rsheet"]},"application/urc-targetdesc+xml":{"source":"iana","compressible":true,"extensions":["td"]},"application/urc-uisocketdesc+xml":{"source":"iana","compressible":true},"application/vcard+json":{"source":"iana","compressible":true},"application/vcard+xml":{"source":"iana","compressible":true},"application/vemmi":{"source":"iana"},"application/vividence.scriptfile":{"source":"apache"},"application/vnd.1000minds.decision-model+xml":{"source":"iana","compressible":true,"extensions":["1km"]},"application/vnd.3gpp-prose+xml":{"source":"iana","compressible":true},"application/vnd.3gpp-prose-pc3ch+xml":{"source":"iana","compressible":true},"application/vnd.3gpp-v2x-local-service-information":{"source":"iana"},"application/vnd.3gpp.5gnas":{"source":"iana"},"application/vnd.3gpp.access-transfer-events+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.bsf+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.gmop+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.gtpc":{"source":"iana"},"application/vnd.3gpp.interworking-data":{"source":"iana"},"application/vnd.3gpp.lpp":{"source":"iana"},"application/vnd.3gpp.mc-signalling-ear":{"source":"iana"},"application/vnd.3gpp.mcdata-affiliation-command+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcdata-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcdata-payload":{"source":"iana"},"application/vnd.3gpp.mcdata-service-config+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcdata-signalling":{"source":"iana"},"application/vnd.3gpp.mcdata-ue-config+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcdata-user-profile+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-affiliation-command+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-floor-request+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-location-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-mbms-usage-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-service-config+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-signed+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-ue-config+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-ue-init-config+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcptt-user-profile+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-affiliation-command+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-affiliation-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-location-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-mbms-usage-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-service-config+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-transmission-request+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-ue-config+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mcvideo-user-profile+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.mid-call+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.ngap":{"source":"iana"},"application/vnd.3gpp.pfcp":{"source":"iana"},"application/vnd.3gpp.pic-bw-large":{"source":"iana","extensions":["plb"]},"application/vnd.3gpp.pic-bw-small":{"source":"iana","extensions":["psb"]},"application/vnd.3gpp.pic-bw-var":{"source":"iana","extensions":["pvb"]},"application/vnd.3gpp.s1ap":{"source":"iana"},"application/vnd.3gpp.sms":{"source":"iana"},"application/vnd.3gpp.sms+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.srvcc-ext+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.srvcc-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.state-and-event-info+xml":{"source":"iana","compressible":true},"application/vnd.3gpp.ussd+xml":{"source":"iana","compressible":true},"application/vnd.3gpp2.bcmcsinfo+xml":{"source":"iana","compressible":true},"application/vnd.3gpp2.sms":{"source":"iana"},"application/vnd.3gpp2.tcap":{"source":"iana","extensions":["tcap"]},"application/vnd.3lightssoftware.imagescal":{"source":"iana"},"application/vnd.3m.post-it-notes":{"source":"iana","extensions":["pwn"]},"application/vnd.accpac.simply.aso":{"source":"iana","extensions":["aso"]},"application/vnd.accpac.simply.imp":{"source":"iana","extensions":["imp"]},"application/vnd.acucobol":{"source":"iana","extensions":["acu"]},"application/vnd.acucorp":{"source":"iana","extensions":["atc","acutc"]},"application/vnd.adobe.air-application-installer-package+zip":{"source":"apache","compressible":false,"extensions":["air"]},"application/vnd.adobe.flash.movie":{"source":"iana"},"application/vnd.adobe.formscentral.fcdt":{"source":"iana","extensions":["fcdt"]},"application/vnd.adobe.fxp":{"source":"iana","extensions":["fxp","fxpl"]},"application/vnd.adobe.partial-upload":{"source":"iana"},"application/vnd.adobe.xdp+xml":{"source":"iana","compressible":true,"extensions":["xdp"]},"application/vnd.adobe.xfdf":{"source":"iana","extensions":["xfdf"]},"application/vnd.aether.imp":{"source":"iana"},"application/vnd.afpc.afplinedata":{"source":"iana"},"application/vnd.afpc.afplinedata-pagedef":{"source":"iana"},"application/vnd.afpc.cmoca-cmresource":{"source":"iana"},"application/vnd.afpc.foca-charset":{"source":"iana"},"application/vnd.afpc.foca-codedfont":{"source":"iana"},"application/vnd.afpc.foca-codepage":{"source":"iana"},"application/vnd.afpc.modca":{"source":"iana"},"application/vnd.afpc.modca-cmtable":{"source":"iana"},"application/vnd.afpc.modca-formdef":{"source":"iana"},"application/vnd.afpc.modca-mediummap":{"source":"iana"},"application/vnd.afpc.modca-objectcontainer":{"source":"iana"},"application/vnd.afpc.modca-overlay":{"source":"iana"},"application/vnd.afpc.modca-pagesegment":{"source":"iana"},"application/vnd.age":{"source":"iana","extensions":["age"]},"application/vnd.ah-barcode":{"source":"iana"},"application/vnd.ahead.space":{"source":"iana","extensions":["ahead"]},"application/vnd.airzip.filesecure.azf":{"source":"iana","extensions":["azf"]},"application/vnd.airzip.filesecure.azs":{"source":"iana","extensions":["azs"]},"application/vnd.amadeus+json":{"source":"iana","compressible":true},"application/vnd.amazon.ebook":{"source":"apache","extensions":["azw"]},"application/vnd.amazon.mobi8-ebook":{"source":"iana"},"application/vnd.americandynamics.acc":{"source":"iana","extensions":["acc"]},"application/vnd.amiga.ami":{"source":"iana","extensions":["ami"]},"application/vnd.amundsen.maze+xml":{"source":"iana","compressible":true},"application/vnd.android.ota":{"source":"iana"},"application/vnd.android.package-archive":{"source":"apache","compressible":false,"extensions":["apk"]},"application/vnd.anki":{"source":"iana"},"application/vnd.anser-web-certificate-issue-initiation":{"source":"iana","extensions":["cii"]},"application/vnd.anser-web-funds-transfer-initiation":{"source":"apache","extensions":["fti"]},"application/vnd.antix.game-component":{"source":"iana","extensions":["atx"]},"application/vnd.apache.arrow.file":{"source":"iana"},"application/vnd.apache.arrow.stream":{"source":"iana"},"application/vnd.apache.thrift.binary":{"source":"iana"},"application/vnd.apache.thrift.compact":{"source":"iana"},"application/vnd.apache.thrift.json":{"source":"iana"},"application/vnd.api+json":{"source":"iana","compressible":true},"application/vnd.aplextor.warrp+json":{"source":"iana","compressible":true},"application/vnd.apothekende.reservation+json":{"source":"iana","compressible":true},"application/vnd.apple.installer+xml":{"source":"iana","compressible":true,"extensions":["mpkg"]},"application/vnd.apple.keynote":{"source":"iana","extensions":["key"]},"application/vnd.apple.mpegurl":{"source":"iana","extensions":["m3u8"]},"application/vnd.apple.numbers":{"source":"iana","extensions":["numbers"]},"application/vnd.apple.pages":{"source":"iana","extensions":["pages"]},"application/vnd.apple.pkpass":{"compressible":false,"extensions":["pkpass"]},"application/vnd.arastra.swi":{"source":"iana"},"application/vnd.aristanetworks.swi":{"source":"iana","extensions":["swi"]},"application/vnd.artisan+json":{"source":"iana","compressible":true},"application/vnd.artsquare":{"source":"iana"},"application/vnd.astraea-software.iota":{"source":"iana","extensions":["iota"]},"application/vnd.audiograph":{"source":"iana","extensions":["aep"]},"application/vnd.autopackage":{"source":"iana"},"application/vnd.avalon+json":{"source":"iana","compressible":true},"application/vnd.avistar+xml":{"source":"iana","compressible":true},"application/vnd.balsamiq.bmml+xml":{"source":"iana","compressible":true,"extensions":["bmml"]},"application/vnd.balsamiq.bmpr":{"source":"iana"},"application/vnd.banana-accounting":{"source":"iana"},"application/vnd.bbf.usp.error":{"source":"iana"},"application/vnd.bbf.usp.msg":{"source":"iana"},"application/vnd.bbf.usp.msg+json":{"source":"iana","compressible":true},"application/vnd.bekitzur-stech+json":{"source":"iana","compressible":true},"application/vnd.bint.med-content":{"source":"iana"},"application/vnd.biopax.rdf+xml":{"source":"iana","compressible":true},"application/vnd.blink-idb-value-wrapper":{"source":"iana"},"application/vnd.blueice.multipass":{"source":"iana","extensions":["mpm"]},"application/vnd.bluetooth.ep.oob":{"source":"iana"},"application/vnd.bluetooth.le.oob":{"source":"iana"},"application/vnd.bmi":{"source":"iana","extensions":["bmi"]},"application/vnd.bpf":{"source":"iana"},"application/vnd.bpf3":{"source":"iana"},"application/vnd.businessobjects":{"source":"iana","extensions":["rep"]},"application/vnd.byu.uapi+json":{"source":"iana","compressible":true},"application/vnd.cab-jscript":{"source":"iana"},"application/vnd.canon-cpdl":{"source":"iana"},"application/vnd.canon-lips":{"source":"iana"},"application/vnd.capasystems-pg+json":{"source":"iana","compressible":true},"application/vnd.cendio.thinlinc.clientconf":{"source":"iana"},"application/vnd.century-systems.tcp_stream":{"source":"iana"},"application/vnd.chemdraw+xml":{"source":"iana","compressible":true,"extensions":["cdxml"]},"application/vnd.chess-pgn":{"source":"iana"},"application/vnd.chipnuts.karaoke-mmd":{"source":"iana","extensions":["mmd"]},"application/vnd.ciedi":{"source":"iana"},"application/vnd.cinderella":{"source":"iana","extensions":["cdy"]},"application/vnd.cirpack.isdn-ext":{"source":"iana"},"application/vnd.citationstyles.style+xml":{"source":"iana","compressible":true,"extensions":["csl"]},"application/vnd.claymore":{"source":"iana","extensions":["cla"]},"application/vnd.cloanto.rp9":{"source":"iana","extensions":["rp9"]},"application/vnd.clonk.c4group":{"source":"iana","extensions":["c4g","c4d","c4f","c4p","c4u"]},"application/vnd.cluetrust.cartomobile-config":{"source":"iana","extensions":["c11amc"]},"application/vnd.cluetrust.cartomobile-config-pkg":{"source":"iana","extensions":["c11amz"]},"application/vnd.coffeescript":{"source":"iana"},"application/vnd.collabio.xodocuments.document":{"source":"iana"},"application/vnd.collabio.xodocuments.document-template":{"source":"iana"},"application/vnd.collabio.xodocuments.presentation":{"source":"iana"},"application/vnd.collabio.xodocuments.presentation-template":{"source":"iana"},"application/vnd.collabio.xodocuments.spreadsheet":{"source":"iana"},"application/vnd.collabio.xodocuments.spreadsheet-template":{"source":"iana"},"application/vnd.collection+json":{"source":"iana","compressible":true},"application/vnd.collection.doc+json":{"source":"iana","compressible":true},"application/vnd.collection.next+json":{"source":"iana","compressible":true},"application/vnd.comicbook+zip":{"source":"iana","compressible":false},"application/vnd.comicbook-rar":{"source":"iana"},"application/vnd.commerce-battelle":{"source":"iana"},"application/vnd.commonspace":{"source":"iana","extensions":["csp"]},"application/vnd.contact.cmsg":{"source":"iana","extensions":["cdbcmsg"]},"application/vnd.coreos.ignition+json":{"source":"iana","compressible":true},"application/vnd.cosmocaller":{"source":"iana","extensions":["cmc"]},"application/vnd.crick.clicker":{"source":"iana","extensions":["clkx"]},"application/vnd.crick.clicker.keyboard":{"source":"iana","extensions":["clkk"]},"application/vnd.crick.clicker.palette":{"source":"iana","extensions":["clkp"]},"application/vnd.crick.clicker.template":{"source":"iana","extensions":["clkt"]},"application/vnd.crick.clicker.wordbank":{"source":"iana","extensions":["clkw"]},"application/vnd.criticaltools.wbs+xml":{"source":"iana","compressible":true,"extensions":["wbs"]},"application/vnd.cryptii.pipe+json":{"source":"iana","compressible":true},"application/vnd.crypto-shade-file":{"source":"iana"},"application/vnd.cryptomator.encrypted":{"source":"iana"},"application/vnd.cryptomator.vault":{"source":"iana"},"application/vnd.ctc-posml":{"source":"iana","extensions":["pml"]},"application/vnd.ctct.ws+xml":{"source":"iana","compressible":true},"application/vnd.cups-pdf":{"source":"iana"},"application/vnd.cups-postscript":{"source":"iana"},"application/vnd.cups-ppd":{"source":"iana","extensions":["ppd"]},"application/vnd.cups-raster":{"source":"iana"},"application/vnd.cups-raw":{"source":"iana"},"application/vnd.curl":{"source":"iana"},"application/vnd.curl.car":{"source":"apache","extensions":["car"]},"application/vnd.curl.pcurl":{"source":"apache","extensions":["pcurl"]},"application/vnd.cyan.dean.root+xml":{"source":"iana","compressible":true},"application/vnd.cybank":{"source":"iana"},"application/vnd.cyclonedx+json":{"source":"iana","compressible":true},"application/vnd.cyclonedx+xml":{"source":"iana","compressible":true},"application/vnd.d2l.coursepackage1p0+zip":{"source":"iana","compressible":false},"application/vnd.d3m-dataset":{"source":"iana"},"application/vnd.d3m-problem":{"source":"iana"},"application/vnd.dart":{"source":"iana","compressible":true,"extensions":["dart"]},"application/vnd.data-vision.rdz":{"source":"iana","extensions":["rdz"]},"application/vnd.datapackage+json":{"source":"iana","compressible":true},"application/vnd.dataresource+json":{"source":"iana","compressible":true},"application/vnd.dbf":{"source":"iana","extensions":["dbf"]},"application/vnd.debian.binary-package":{"source":"iana"},"application/vnd.dece.data":{"source":"iana","extensions":["uvf","uvvf","uvd","uvvd"]},"application/vnd.dece.ttml+xml":{"source":"iana","compressible":true,"extensions":["uvt","uvvt"]},"application/vnd.dece.unspecified":{"source":"iana","extensions":["uvx","uvvx"]},"application/vnd.dece.zip":{"source":"iana","extensions":["uvz","uvvz"]},"application/vnd.denovo.fcselayout-link":{"source":"iana","extensions":["fe_launch"]},"application/vnd.desmume.movie":{"source":"iana"},"application/vnd.dir-bi.plate-dl-nosuffix":{"source":"iana"},"application/vnd.dm.delegation+xml":{"source":"iana","compressible":true},"application/vnd.dna":{"source":"iana","extensions":["dna"]},"application/vnd.document+json":{"source":"iana","compressible":true},"application/vnd.dolby.mlp":{"source":"apache","extensions":["mlp"]},"application/vnd.dolby.mobile.1":{"source":"iana"},"application/vnd.dolby.mobile.2":{"source":"iana"},"application/vnd.doremir.scorecloud-binary-document":{"source":"iana"},"application/vnd.dpgraph":{"source":"iana","extensions":["dpg"]},"application/vnd.dreamfactory":{"source":"iana","extensions":["dfac"]},"application/vnd.drive+json":{"source":"iana","compressible":true},"application/vnd.ds-keypoint":{"source":"apache","extensions":["kpxx"]},"application/vnd.dtg.local":{"source":"iana"},"application/vnd.dtg.local.flash":{"source":"iana"},"application/vnd.dtg.local.html":{"source":"iana"},"application/vnd.dvb.ait":{"source":"iana","extensions":["ait"]},"application/vnd.dvb.dvbisl+xml":{"source":"iana","compressible":true},"application/vnd.dvb.dvbj":{"source":"iana"},"application/vnd.dvb.esgcontainer":{"source":"iana"},"application/vnd.dvb.ipdcdftnotifaccess":{"source":"iana"},"application/vnd.dvb.ipdcesgaccess":{"source":"iana"},"application/vnd.dvb.ipdcesgaccess2":{"source":"iana"},"application/vnd.dvb.ipdcesgpdd":{"source":"iana"},"application/vnd.dvb.ipdcroaming":{"source":"iana"},"application/vnd.dvb.iptv.alfec-base":{"source":"iana"},"application/vnd.dvb.iptv.alfec-enhancement":{"source":"iana"},"application/vnd.dvb.notif-aggregate-root+xml":{"source":"iana","compressible":true},"application/vnd.dvb.notif-container+xml":{"source":"iana","compressible":true},"application/vnd.dvb.notif-generic+xml":{"source":"iana","compressible":true},"application/vnd.dvb.notif-ia-msglist+xml":{"source":"iana","compressible":true},"application/vnd.dvb.notif-ia-registration-request+xml":{"source":"iana","compressible":true},"application/vnd.dvb.notif-ia-registration-response+xml":{"source":"iana","compressible":true},"application/vnd.dvb.notif-init+xml":{"source":"iana","compressible":true},"application/vnd.dvb.pfr":{"source":"iana"},"application/vnd.dvb.service":{"source":"iana","extensions":["svc"]},"application/vnd.dxr":{"source":"iana"},"application/vnd.dynageo":{"source":"iana","extensions":["geo"]},"application/vnd.dzr":{"source":"iana"},"application/vnd.easykaraoke.cdgdownload":{"source":"iana"},"application/vnd.ecdis-update":{"source":"iana"},"application/vnd.ecip.rlp":{"source":"iana"},"application/vnd.eclipse.ditto+json":{"source":"iana","compressible":true},"application/vnd.ecowin.chart":{"source":"iana","extensions":["mag"]},"application/vnd.ecowin.filerequest":{"source":"iana"},"application/vnd.ecowin.fileupdate":{"source":"iana"},"application/vnd.ecowin.series":{"source":"iana"},"application/vnd.ecowin.seriesrequest":{"source":"iana"},"application/vnd.ecowin.seriesupdate":{"source":"iana"},"application/vnd.efi.img":{"source":"iana"},"application/vnd.efi.iso":{"source":"iana"},"application/vnd.emclient.accessrequest+xml":{"source":"iana","compressible":true},"application/vnd.enliven":{"source":"iana","extensions":["nml"]},"application/vnd.enphase.envoy":{"source":"iana"},"application/vnd.eprints.data+xml":{"source":"iana","compressible":true},"application/vnd.epson.esf":{"source":"iana","extensions":["esf"]},"application/vnd.epson.msf":{"source":"iana","extensions":["msf"]},"application/vnd.epson.quickanime":{"source":"iana","extensions":["qam"]},"application/vnd.epson.salt":{"source":"iana","extensions":["slt"]},"application/vnd.epson.ssf":{"source":"iana","extensions":["ssf"]},"application/vnd.ericsson.quickcall":{"source":"iana"},"application/vnd.espass-espass+zip":{"source":"iana","compressible":false},"application/vnd.eszigno3+xml":{"source":"iana","compressible":true,"extensions":["es3","et3"]},"application/vnd.etsi.aoc+xml":{"source":"iana","compressible":true},"application/vnd.etsi.asic-e+zip":{"source":"iana","compressible":false},"application/vnd.etsi.asic-s+zip":{"source":"iana","compressible":false},"application/vnd.etsi.cug+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvcommand+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvdiscovery+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvprofile+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvsad-bc+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvsad-cod+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvsad-npvr+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvservice+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvsync+xml":{"source":"iana","compressible":true},"application/vnd.etsi.iptvueprofile+xml":{"source":"iana","compressible":true},"application/vnd.etsi.mcid+xml":{"source":"iana","compressible":true},"application/vnd.etsi.mheg5":{"source":"iana"},"application/vnd.etsi.overload-control-policy-dataset+xml":{"source":"iana","compressible":true},"application/vnd.etsi.pstn+xml":{"source":"iana","compressible":true},"application/vnd.etsi.sci+xml":{"source":"iana","compressible":true},"application/vnd.etsi.simservs+xml":{"source":"iana","compressible":true},"application/vnd.etsi.timestamp-token":{"source":"iana"},"application/vnd.etsi.tsl+xml":{"source":"iana","compressible":true},"application/vnd.etsi.tsl.der":{"source":"iana"},"application/vnd.eu.kasparian.car+json":{"source":"iana","compressible":true},"application/vnd.eudora.data":{"source":"iana"},"application/vnd.evolv.ecig.profile":{"source":"iana"},"application/vnd.evolv.ecig.settings":{"source":"iana"},"application/vnd.evolv.ecig.theme":{"source":"iana"},"application/vnd.exstream-empower+zip":{"source":"iana","compressible":false},"application/vnd.exstream-package":{"source":"iana"},"application/vnd.ezpix-album":{"source":"iana","extensions":["ez2"]},"application/vnd.ezpix-package":{"source":"iana","extensions":["ez3"]},"application/vnd.f-secure.mobile":{"source":"iana"},"application/vnd.familysearch.gedcom+zip":{"source":"iana","compressible":false},"application/vnd.fastcopy-disk-image":{"source":"iana"},"application/vnd.fdf":{"source":"iana","extensions":["fdf"]},"application/vnd.fdsn.mseed":{"source":"iana","extensions":["mseed"]},"application/vnd.fdsn.seed":{"source":"iana","extensions":["seed","dataless"]},"application/vnd.ffsns":{"source":"iana"},"application/vnd.ficlab.flb+zip":{"source":"iana","compressible":false},"application/vnd.filmit.zfc":{"source":"iana"},"application/vnd.fints":{"source":"iana"},"application/vnd.firemonkeys.cloudcell":{"source":"iana"},"application/vnd.flographit":{"source":"iana","extensions":["gph"]},"application/vnd.fluxtime.clip":{"source":"iana","extensions":["ftc"]},"application/vnd.font-fontforge-sfd":{"source":"iana"},"application/vnd.framemaker":{"source":"iana","extensions":["fm","frame","maker","book"]},"application/vnd.frogans.fnc":{"source":"iana","extensions":["fnc"]},"application/vnd.frogans.ltf":{"source":"iana","extensions":["ltf"]},"application/vnd.fsc.weblaunch":{"source":"iana","extensions":["fsc"]},"application/vnd.fujifilm.fb.docuworks":{"source":"iana"},"application/vnd.fujifilm.fb.docuworks.binder":{"source":"iana"},"application/vnd.fujifilm.fb.docuworks.container":{"source":"iana"},"application/vnd.fujifilm.fb.jfi+xml":{"source":"iana","compressible":true},"application/vnd.fujitsu.oasys":{"source":"iana","extensions":["oas"]},"application/vnd.fujitsu.oasys2":{"source":"iana","extensions":["oa2"]},"application/vnd.fujitsu.oasys3":{"source":"iana","extensions":["oa3"]},"application/vnd.fujitsu.oasysgp":{"source":"iana","extensions":["fg5"]},"application/vnd.fujitsu.oasysprs":{"source":"iana","extensions":["bh2"]},"application/vnd.fujixerox.art-ex":{"source":"iana"},"application/vnd.fujixerox.art4":{"source":"iana"},"application/vnd.fujixerox.ddd":{"source":"iana","extensions":["ddd"]},"application/vnd.fujixerox.docuworks":{"source":"iana","extensions":["xdw"]},"application/vnd.fujixerox.docuworks.binder":{"source":"iana","extensions":["xbd"]},"application/vnd.fujixerox.docuworks.container":{"source":"iana"},"application/vnd.fujixerox.hbpl":{"source":"iana"},"application/vnd.fut-misnet":{"source":"iana"},"application/vnd.futoin+cbor":{"source":"iana"},"application/vnd.futoin+json":{"source":"iana","compressible":true},"application/vnd.fuzzysheet":{"source":"iana","extensions":["fzs"]},"application/vnd.genomatix.tuxedo":{"source":"iana","extensions":["txd"]},"application/vnd.gentics.grd+json":{"source":"iana","compressible":true},"application/vnd.geo+json":{"source":"iana","compressible":true},"application/vnd.geocube+xml":{"source":"iana","compressible":true},"application/vnd.geogebra.file":{"source":"iana","extensions":["ggb"]},"application/vnd.geogebra.slides":{"source":"iana"},"application/vnd.geogebra.tool":{"source":"iana","extensions":["ggt"]},"application/vnd.geometry-explorer":{"source":"iana","extensions":["gex","gre"]},"application/vnd.geonext":{"source":"iana","extensions":["gxt"]},"application/vnd.geoplan":{"source":"iana","extensions":["g2w"]},"application/vnd.geospace":{"source":"iana","extensions":["g3w"]},"application/vnd.gerber":{"source":"iana"},"application/vnd.globalplatform.card-content-mgt":{"source":"iana"},"application/vnd.globalplatform.card-content-mgt-response":{"source":"iana"},"application/vnd.gmx":{"source":"iana","extensions":["gmx"]},"application/vnd.google-apps.document":{"compressible":false,"extensions":["gdoc"]},"application/vnd.google-apps.presentation":{"compressible":false,"extensions":["gslides"]},"application/vnd.google-apps.spreadsheet":{"compressible":false,"extensions":["gsheet"]},"application/vnd.google-earth.kml+xml":{"source":"iana","compressible":true,"extensions":["kml"]},"application/vnd.google-earth.kmz":{"source":"iana","compressible":false,"extensions":["kmz"]},"application/vnd.gov.sk.e-form+xml":{"source":"iana","compressible":true},"application/vnd.gov.sk.e-form+zip":{"source":"iana","compressible":false},"application/vnd.gov.sk.xmldatacontainer+xml":{"source":"iana","compressible":true},"application/vnd.grafeq":{"source":"iana","extensions":["gqf","gqs"]},"application/vnd.gridmp":{"source":"iana"},"application/vnd.groove-account":{"source":"iana","extensions":["gac"]},"application/vnd.groove-help":{"source":"iana","extensions":["ghf"]},"application/vnd.groove-identity-message":{"source":"iana","extensions":["gim"]},"application/vnd.groove-injector":{"source":"iana","extensions":["grv"]},"application/vnd.groove-tool-message":{"source":"iana","extensions":["gtm"]},"application/vnd.groove-tool-template":{"source":"iana","extensions":["tpl"]},"application/vnd.groove-vcard":{"source":"iana","extensions":["vcg"]},"application/vnd.hal+json":{"source":"iana","compressible":true},"application/vnd.hal+xml":{"source":"iana","compressible":true,"extensions":["hal"]},"application/vnd.handheld-entertainment+xml":{"source":"iana","compressible":true,"extensions":["zmm"]},"application/vnd.hbci":{"source":"iana","extensions":["hbci"]},"application/vnd.hc+json":{"source":"iana","compressible":true},"application/vnd.hcl-bireports":{"source":"iana"},"application/vnd.hdt":{"source":"iana"},"application/vnd.heroku+json":{"source":"iana","compressible":true},"application/vnd.hhe.lesson-player":{"source":"iana","extensions":["les"]},"application/vnd.hl7cda+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/vnd.hl7v2+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/vnd.hp-hpgl":{"source":"iana","extensions":["hpgl"]},"application/vnd.hp-hpid":{"source":"iana","extensions":["hpid"]},"application/vnd.hp-hps":{"source":"iana","extensions":["hps"]},"application/vnd.hp-jlyt":{"source":"iana","extensions":["jlt"]},"application/vnd.hp-pcl":{"source":"iana","extensions":["pcl"]},"application/vnd.hp-pclxl":{"source":"iana","extensions":["pclxl"]},"application/vnd.httphone":{"source":"iana"},"application/vnd.hydrostatix.sof-data":{"source":"iana","extensions":["sfd-hdstx"]},"application/vnd.hyper+json":{"source":"iana","compressible":true},"application/vnd.hyper-item+json":{"source":"iana","compressible":true},"application/vnd.hyperdrive+json":{"source":"iana","compressible":true},"application/vnd.hzn-3d-crossword":{"source":"iana"},"application/vnd.ibm.afplinedata":{"source":"iana"},"application/vnd.ibm.electronic-media":{"source":"iana"},"application/vnd.ibm.minipay":{"source":"iana","extensions":["mpy"]},"application/vnd.ibm.modcap":{"source":"iana","extensions":["afp","listafp","list3820"]},"application/vnd.ibm.rights-management":{"source":"iana","extensions":["irm"]},"application/vnd.ibm.secure-container":{"source":"iana","extensions":["sc"]},"application/vnd.iccprofile":{"source":"iana","extensions":["icc","icm"]},"application/vnd.ieee.1905":{"source":"iana"},"application/vnd.igloader":{"source":"iana","extensions":["igl"]},"application/vnd.imagemeter.folder+zip":{"source":"iana","compressible":false},"application/vnd.imagemeter.image+zip":{"source":"iana","compressible":false},"application/vnd.immervision-ivp":{"source":"iana","extensions":["ivp"]},"application/vnd.immervision-ivu":{"source":"iana","extensions":["ivu"]},"application/vnd.ims.imsccv1p1":{"source":"iana"},"application/vnd.ims.imsccv1p2":{"source":"iana"},"application/vnd.ims.imsccv1p3":{"source":"iana"},"application/vnd.ims.lis.v2.result+json":{"source":"iana","compressible":true},"application/vnd.ims.lti.v2.toolconsumerprofile+json":{"source":"iana","compressible":true},"application/vnd.ims.lti.v2.toolproxy+json":{"source":"iana","compressible":true},"application/vnd.ims.lti.v2.toolproxy.id+json":{"source":"iana","compressible":true},"application/vnd.ims.lti.v2.toolsettings+json":{"source":"iana","compressible":true},"application/vnd.ims.lti.v2.toolsettings.simple+json":{"source":"iana","compressible":true},"application/vnd.informedcontrol.rms+xml":{"source":"iana","compressible":true},"application/vnd.informix-visionary":{"source":"iana"},"application/vnd.infotech.project":{"source":"iana"},"application/vnd.infotech.project+xml":{"source":"iana","compressible":true},"application/vnd.innopath.wamp.notification":{"source":"iana"},"application/vnd.insors.igm":{"source":"iana","extensions":["igm"]},"application/vnd.intercon.formnet":{"source":"iana","extensions":["xpw","xpx"]},"application/vnd.intergeo":{"source":"iana","extensions":["i2g"]},"application/vnd.intertrust.digibox":{"source":"iana"},"application/vnd.intertrust.nncp":{"source":"iana"},"application/vnd.intu.qbo":{"source":"iana","extensions":["qbo"]},"application/vnd.intu.qfx":{"source":"iana","extensions":["qfx"]},"application/vnd.iptc.g2.catalogitem+xml":{"source":"iana","compressible":true},"application/vnd.iptc.g2.conceptitem+xml":{"source":"iana","compressible":true},"application/vnd.iptc.g2.knowledgeitem+xml":{"source":"iana","compressible":true},"application/vnd.iptc.g2.newsitem+xml":{"source":"iana","compressible":true},"application/vnd.iptc.g2.newsmessage+xml":{"source":"iana","compressible":true},"application/vnd.iptc.g2.packageitem+xml":{"source":"iana","compressible":true},"application/vnd.iptc.g2.planningitem+xml":{"source":"iana","compressible":true},"application/vnd.ipunplugged.rcprofile":{"source":"iana","extensions":["rcprofile"]},"application/vnd.irepository.package+xml":{"source":"iana","compressible":true,"extensions":["irp"]},"application/vnd.is-xpr":{"source":"iana","extensions":["xpr"]},"application/vnd.isac.fcs":{"source":"iana","extensions":["fcs"]},"application/vnd.iso11783-10+zip":{"source":"iana","compressible":false},"application/vnd.jam":{"source":"iana","extensions":["jam"]},"application/vnd.japannet-directory-service":{"source":"iana"},"application/vnd.japannet-jpnstore-wakeup":{"source":"iana"},"application/vnd.japannet-payment-wakeup":{"source":"iana"},"application/vnd.japannet-registration":{"source":"iana"},"application/vnd.japannet-registration-wakeup":{"source":"iana"},"application/vnd.japannet-setstore-wakeup":{"source":"iana"},"application/vnd.japannet-verification":{"source":"iana"},"application/vnd.japannet-verification-wakeup":{"source":"iana"},"application/vnd.jcp.javame.midlet-rms":{"source":"iana","extensions":["rms"]},"application/vnd.jisp":{"source":"iana","extensions":["jisp"]},"application/vnd.joost.joda-archive":{"source":"iana","extensions":["joda"]},"application/vnd.jsk.isdn-ngn":{"source":"iana"},"application/vnd.kahootz":{"source":"iana","extensions":["ktz","ktr"]},"application/vnd.kde.karbon":{"source":"iana","extensions":["karbon"]},"application/vnd.kde.kchart":{"source":"iana","extensions":["chrt"]},"application/vnd.kde.kformula":{"source":"iana","extensions":["kfo"]},"application/vnd.kde.kivio":{"source":"iana","extensions":["flw"]},"application/vnd.kde.kontour":{"source":"iana","extensions":["kon"]},"application/vnd.kde.kpresenter":{"source":"iana","extensions":["kpr","kpt"]},"application/vnd.kde.kspread":{"source":"iana","extensions":["ksp"]},"application/vnd.kde.kword":{"source":"iana","extensions":["kwd","kwt"]},"application/vnd.kenameaapp":{"source":"iana","extensions":["htke"]},"application/vnd.kidspiration":{"source":"iana","extensions":["kia"]},"application/vnd.kinar":{"source":"iana","extensions":["kne","knp"]},"application/vnd.koan":{"source":"iana","extensions":["skp","skd","skt","skm"]},"application/vnd.kodak-descriptor":{"source":"iana","extensions":["sse"]},"application/vnd.las":{"source":"iana"},"application/vnd.las.las+json":{"source":"iana","compressible":true},"application/vnd.las.las+xml":{"source":"iana","compressible":true,"extensions":["lasxml"]},"application/vnd.laszip":{"source":"iana"},"application/vnd.leap+json":{"source":"iana","compressible":true},"application/vnd.liberty-request+xml":{"source":"iana","compressible":true},"application/vnd.llamagraphics.life-balance.desktop":{"source":"iana","extensions":["lbd"]},"application/vnd.llamagraphics.life-balance.exchange+xml":{"source":"iana","compressible":true,"extensions":["lbe"]},"application/vnd.logipipe.circuit+zip":{"source":"iana","compressible":false},"application/vnd.loom":{"source":"iana"},"application/vnd.lotus-1-2-3":{"source":"iana","extensions":["123"]},"application/vnd.lotus-approach":{"source":"iana","extensions":["apr"]},"application/vnd.lotus-freelance":{"source":"iana","extensions":["pre"]},"application/vnd.lotus-notes":{"source":"iana","extensions":["nsf"]},"application/vnd.lotus-organizer":{"source":"iana","extensions":["org"]},"application/vnd.lotus-screencam":{"source":"iana","extensions":["scm"]},"application/vnd.lotus-wordpro":{"source":"iana","extensions":["lwp"]},"application/vnd.macports.portpkg":{"source":"iana","extensions":["portpkg"]},"application/vnd.mapbox-vector-tile":{"source":"iana","extensions":["mvt"]},"application/vnd.marlin.drm.actiontoken+xml":{"source":"iana","compressible":true},"application/vnd.marlin.drm.conftoken+xml":{"source":"iana","compressible":true},"application/vnd.marlin.drm.license+xml":{"source":"iana","compressible":true},"application/vnd.marlin.drm.mdcf":{"source":"iana"},"application/vnd.mason+json":{"source":"iana","compressible":true},"application/vnd.maxar.archive.3tz+zip":{"source":"iana","compressible":false},"application/vnd.maxmind.maxmind-db":{"source":"iana"},"application/vnd.mcd":{"source":"iana","extensions":["mcd"]},"application/vnd.medcalcdata":{"source":"iana","extensions":["mc1"]},"application/vnd.mediastation.cdkey":{"source":"iana","extensions":["cdkey"]},"application/vnd.meridian-slingshot":{"source":"iana"},"application/vnd.mfer":{"source":"iana","extensions":["mwf"]},"application/vnd.mfmp":{"source":"iana","extensions":["mfm"]},"application/vnd.micro+json":{"source":"iana","compressible":true},"application/vnd.micrografx.flo":{"source":"iana","extensions":["flo"]},"application/vnd.micrografx.igx":{"source":"iana","extensions":["igx"]},"application/vnd.microsoft.portable-executable":{"source":"iana"},"application/vnd.microsoft.windows.thumbnail-cache":{"source":"iana"},"application/vnd.miele+json":{"source":"iana","compressible":true},"application/vnd.mif":{"source":"iana","extensions":["mif"]},"application/vnd.minisoft-hp3000-save":{"source":"iana"},"application/vnd.mitsubishi.misty-guard.trustweb":{"source":"iana"},"application/vnd.mobius.daf":{"source":"iana","extensions":["daf"]},"application/vnd.mobius.dis":{"source":"iana","extensions":["dis"]},"application/vnd.mobius.mbk":{"source":"iana","extensions":["mbk"]},"application/vnd.mobius.mqy":{"source":"iana","extensions":["mqy"]},"application/vnd.mobius.msl":{"source":"iana","extensions":["msl"]},"application/vnd.mobius.plc":{"source":"iana","extensions":["plc"]},"application/vnd.mobius.txf":{"source":"iana","extensions":["txf"]},"application/vnd.mophun.application":{"source":"iana","extensions":["mpn"]},"application/vnd.mophun.certificate":{"source":"iana","extensions":["mpc"]},"application/vnd.motorola.flexsuite":{"source":"iana"},"application/vnd.motorola.flexsuite.adsi":{"source":"iana"},"application/vnd.motorola.flexsuite.fis":{"source":"iana"},"application/vnd.motorola.flexsuite.gotap":{"source":"iana"},"application/vnd.motorola.flexsuite.kmr":{"source":"iana"},"application/vnd.motorola.flexsuite.ttc":{"source":"iana"},"application/vnd.motorola.flexsuite.wem":{"source":"iana"},"application/vnd.motorola.iprm":{"source":"iana"},"application/vnd.mozilla.xul+xml":{"source":"iana","compressible":true,"extensions":["xul"]},"application/vnd.ms-3mfdocument":{"source":"iana"},"application/vnd.ms-artgalry":{"source":"iana","extensions":["cil"]},"application/vnd.ms-asf":{"source":"iana"},"application/vnd.ms-cab-compressed":{"source":"iana","extensions":["cab"]},"application/vnd.ms-color.iccprofile":{"source":"apache"},"application/vnd.ms-excel":{"source":"iana","compressible":false,"extensions":["xls","xlm","xla","xlc","xlt","xlw"]},"application/vnd.ms-excel.addin.macroenabled.12":{"source":"iana","extensions":["xlam"]},"application/vnd.ms-excel.sheet.binary.macroenabled.12":{"source":"iana","extensions":["xlsb"]},"application/vnd.ms-excel.sheet.macroenabled.12":{"source":"iana","extensions":["xlsm"]},"application/vnd.ms-excel.template.macroenabled.12":{"source":"iana","extensions":["xltm"]},"application/vnd.ms-fontobject":{"source":"iana","compressible":true,"extensions":["eot"]},"application/vnd.ms-htmlhelp":{"source":"iana","extensions":["chm"]},"application/vnd.ms-ims":{"source":"iana","extensions":["ims"]},"application/vnd.ms-lrm":{"source":"iana","extensions":["lrm"]},"application/vnd.ms-office.activex+xml":{"source":"iana","compressible":true},"application/vnd.ms-officetheme":{"source":"iana","extensions":["thmx"]},"application/vnd.ms-opentype":{"source":"apache","compressible":true},"application/vnd.ms-outlook":{"compressible":false,"extensions":["msg"]},"application/vnd.ms-package.obfuscated-opentype":{"source":"apache"},"application/vnd.ms-pki.seccat":{"source":"apache","extensions":["cat"]},"application/vnd.ms-pki.stl":{"source":"apache","extensions":["stl"]},"application/vnd.ms-playready.initiator+xml":{"source":"iana","compressible":true},"application/vnd.ms-powerpoint":{"source":"iana","compressible":false,"extensions":["ppt","pps","pot"]},"application/vnd.ms-powerpoint.addin.macroenabled.12":{"source":"iana","extensions":["ppam"]},"application/vnd.ms-powerpoint.presentation.macroenabled.12":{"source":"iana","extensions":["pptm"]},"application/vnd.ms-powerpoint.slide.macroenabled.12":{"source":"iana","extensions":["sldm"]},"application/vnd.ms-powerpoint.slideshow.macroenabled.12":{"source":"iana","extensions":["ppsm"]},"application/vnd.ms-powerpoint.template.macroenabled.12":{"source":"iana","extensions":["potm"]},"application/vnd.ms-printdevicecapabilities+xml":{"source":"iana","compressible":true},"application/vnd.ms-printing.printticket+xml":{"source":"apache","compressible":true},"application/vnd.ms-printschematicket+xml":{"source":"iana","compressible":true},"application/vnd.ms-project":{"source":"iana","extensions":["mpp","mpt"]},"application/vnd.ms-tnef":{"source":"iana"},"application/vnd.ms-windows.devicepairing":{"source":"iana"},"application/vnd.ms-windows.nwprinting.oob":{"source":"iana"},"application/vnd.ms-windows.printerpairing":{"source":"iana"},"application/vnd.ms-windows.wsd.oob":{"source":"iana"},"application/vnd.ms-wmdrm.lic-chlg-req":{"source":"iana"},"application/vnd.ms-wmdrm.lic-resp":{"source":"iana"},"application/vnd.ms-wmdrm.meter-chlg-req":{"source":"iana"},"application/vnd.ms-wmdrm.meter-resp":{"source":"iana"},"application/vnd.ms-word.document.macroenabled.12":{"source":"iana","extensions":["docm"]},"application/vnd.ms-word.template.macroenabled.12":{"source":"iana","extensions":["dotm"]},"application/vnd.ms-works":{"source":"iana","extensions":["wps","wks","wcm","wdb"]},"application/vnd.ms-wpl":{"source":"iana","extensions":["wpl"]},"application/vnd.ms-xpsdocument":{"source":"iana","compressible":false,"extensions":["xps"]},"application/vnd.msa-disk-image":{"source":"iana"},"application/vnd.mseq":{"source":"iana","extensions":["mseq"]},"application/vnd.msign":{"source":"iana"},"application/vnd.multiad.creator":{"source":"iana"},"application/vnd.multiad.creator.cif":{"source":"iana"},"application/vnd.music-niff":{"source":"iana"},"application/vnd.musician":{"source":"iana","extensions":["mus"]},"application/vnd.muvee.style":{"source":"iana","extensions":["msty"]},"application/vnd.mynfc":{"source":"iana","extensions":["taglet"]},"application/vnd.nacamar.ybrid+json":{"source":"iana","compressible":true},"application/vnd.ncd.control":{"source":"iana"},"application/vnd.ncd.reference":{"source":"iana"},"application/vnd.nearst.inv+json":{"source":"iana","compressible":true},"application/vnd.nebumind.line":{"source":"iana"},"application/vnd.nervana":{"source":"iana"},"application/vnd.netfpx":{"source":"iana"},"application/vnd.neurolanguage.nlu":{"source":"iana","extensions":["nlu"]},"application/vnd.nimn":{"source":"iana"},"application/vnd.nintendo.nitro.rom":{"source":"iana"},"application/vnd.nintendo.snes.rom":{"source":"iana"},"application/vnd.nitf":{"source":"iana","extensions":["ntf","nitf"]},"application/vnd.noblenet-directory":{"source":"iana","extensions":["nnd"]},"application/vnd.noblenet-sealer":{"source":"iana","extensions":["nns"]},"application/vnd.noblenet-web":{"source":"iana","extensions":["nnw"]},"application/vnd.nokia.catalogs":{"source":"iana"},"application/vnd.nokia.conml+wbxml":{"source":"iana"},"application/vnd.nokia.conml+xml":{"source":"iana","compressible":true},"application/vnd.nokia.iptv.config+xml":{"source":"iana","compressible":true},"application/vnd.nokia.isds-radio-presets":{"source":"iana"},"application/vnd.nokia.landmark+wbxml":{"source":"iana"},"application/vnd.nokia.landmark+xml":{"source":"iana","compressible":true},"application/vnd.nokia.landmarkcollection+xml":{"source":"iana","compressible":true},"application/vnd.nokia.n-gage.ac+xml":{"source":"iana","compressible":true,"extensions":["ac"]},"application/vnd.nokia.n-gage.data":{"source":"iana","extensions":["ngdat"]},"application/vnd.nokia.n-gage.symbian.install":{"source":"iana","extensions":["n-gage"]},"application/vnd.nokia.ncd":{"source":"iana"},"application/vnd.nokia.pcd+wbxml":{"source":"iana"},"application/vnd.nokia.pcd+xml":{"source":"iana","compressible":true},"application/vnd.nokia.radio-preset":{"source":"iana","extensions":["rpst"]},"application/vnd.nokia.radio-presets":{"source":"iana","extensions":["rpss"]},"application/vnd.novadigm.edm":{"source":"iana","extensions":["edm"]},"application/vnd.novadigm.edx":{"source":"iana","extensions":["edx"]},"application/vnd.novadigm.ext":{"source":"iana","extensions":["ext"]},"application/vnd.ntt-local.content-share":{"source":"iana"},"application/vnd.ntt-local.file-transfer":{"source":"iana"},"application/vnd.ntt-local.ogw_remote-access":{"source":"iana"},"application/vnd.ntt-local.sip-ta_remote":{"source":"iana"},"application/vnd.ntt-local.sip-ta_tcp_stream":{"source":"iana"},"application/vnd.oasis.opendocument.chart":{"source":"iana","extensions":["odc"]},"application/vnd.oasis.opendocument.chart-template":{"source":"iana","extensions":["otc"]},"application/vnd.oasis.opendocument.database":{"source":"iana","extensions":["odb"]},"application/vnd.oasis.opendocument.formula":{"source":"iana","extensions":["odf"]},"application/vnd.oasis.opendocument.formula-template":{"source":"iana","extensions":["odft"]},"application/vnd.oasis.opendocument.graphics":{"source":"iana","compressible":false,"extensions":["odg"]},"application/vnd.oasis.opendocument.graphics-template":{"source":"iana","extensions":["otg"]},"application/vnd.oasis.opendocument.image":{"source":"iana","extensions":["odi"]},"application/vnd.oasis.opendocument.image-template":{"source":"iana","extensions":["oti"]},"application/vnd.oasis.opendocument.presentation":{"source":"iana","compressible":false,"extensions":["odp"]},"application/vnd.oasis.opendocument.presentation-template":{"source":"iana","extensions":["otp"]},"application/vnd.oasis.opendocument.spreadsheet":{"source":"iana","compressible":false,"extensions":["ods"]},"application/vnd.oasis.opendocument.spreadsheet-template":{"source":"iana","extensions":["ots"]},"application/vnd.oasis.opendocument.text":{"source":"iana","compressible":false,"extensions":["odt"]},"application/vnd.oasis.opendocument.text-master":{"source":"iana","extensions":["odm"]},"application/vnd.oasis.opendocument.text-template":{"source":"iana","extensions":["ott"]},"application/vnd.oasis.opendocument.text-web":{"source":"iana","extensions":["oth"]},"application/vnd.obn":{"source":"iana"},"application/vnd.ocf+cbor":{"source":"iana"},"application/vnd.oci.image.manifest.v1+json":{"source":"iana","compressible":true},"application/vnd.oftn.l10n+json":{"source":"iana","compressible":true},"application/vnd.oipf.contentaccessdownload+xml":{"source":"iana","compressible":true},"application/vnd.oipf.contentaccessstreaming+xml":{"source":"iana","compressible":true},"application/vnd.oipf.cspg-hexbinary":{"source":"iana"},"application/vnd.oipf.dae.svg+xml":{"source":"iana","compressible":true},"application/vnd.oipf.dae.xhtml+xml":{"source":"iana","compressible":true},"application/vnd.oipf.mippvcontrolmessage+xml":{"source":"iana","compressible":true},"application/vnd.oipf.pae.gem":{"source":"iana"},"application/vnd.oipf.spdiscovery+xml":{"source":"iana","compressible":true},"application/vnd.oipf.spdlist+xml":{"source":"iana","compressible":true},"application/vnd.oipf.ueprofile+xml":{"source":"iana","compressible":true},"application/vnd.oipf.userprofile+xml":{"source":"iana","compressible":true},"application/vnd.olpc-sugar":{"source":"iana","extensions":["xo"]},"application/vnd.oma-scws-config":{"source":"iana"},"application/vnd.oma-scws-http-request":{"source":"iana"},"application/vnd.oma-scws-http-response":{"source":"iana"},"application/vnd.oma.bcast.associated-procedure-parameter+xml":{"source":"iana","compressible":true},"application/vnd.oma.bcast.drm-trigger+xml":{"source":"iana","compressible":true},"application/vnd.oma.bcast.imd+xml":{"source":"iana","compressible":true},"application/vnd.oma.bcast.ltkm":{"source":"iana"},"application/vnd.oma.bcast.notification+xml":{"source":"iana","compressible":true},"application/vnd.oma.bcast.provisioningtrigger":{"source":"iana"},"application/vnd.oma.bcast.sgboot":{"source":"iana"},"application/vnd.oma.bcast.sgdd+xml":{"source":"iana","compressible":true},"application/vnd.oma.bcast.sgdu":{"source":"iana"},"application/vnd.oma.bcast.simple-symbol-container":{"source":"iana"},"application/vnd.oma.bcast.smartcard-trigger+xml":{"source":"iana","compressible":true},"application/vnd.oma.bcast.sprov+xml":{"source":"iana","compressible":true},"application/vnd.oma.bcast.stkm":{"source":"iana"},"application/vnd.oma.cab-address-book+xml":{"source":"iana","compressible":true},"application/vnd.oma.cab-feature-handler+xml":{"source":"iana","compressible":true},"application/vnd.oma.cab-pcc+xml":{"source":"iana","compressible":true},"application/vnd.oma.cab-subs-invite+xml":{"source":"iana","compressible":true},"application/vnd.oma.cab-user-prefs+xml":{"source":"iana","compressible":true},"application/vnd.oma.dcd":{"source":"iana"},"application/vnd.oma.dcdc":{"source":"iana"},"application/vnd.oma.dd2+xml":{"source":"iana","compressible":true,"extensions":["dd2"]},"application/vnd.oma.drm.risd+xml":{"source":"iana","compressible":true},"application/vnd.oma.group-usage-list+xml":{"source":"iana","compressible":true},"application/vnd.oma.lwm2m+cbor":{"source":"iana"},"application/vnd.oma.lwm2m+json":{"source":"iana","compressible":true},"application/vnd.oma.lwm2m+tlv":{"source":"iana"},"application/vnd.oma.pal+xml":{"source":"iana","compressible":true},"application/vnd.oma.poc.detailed-progress-report+xml":{"source":"iana","compressible":true},"application/vnd.oma.poc.final-report+xml":{"source":"iana","compressible":true},"application/vnd.oma.poc.groups+xml":{"source":"iana","compressible":true},"application/vnd.oma.poc.invocation-descriptor+xml":{"source":"iana","compressible":true},"application/vnd.oma.poc.optimized-progress-report+xml":{"source":"iana","compressible":true},"application/vnd.oma.push":{"source":"iana"},"application/vnd.oma.scidm.messages+xml":{"source":"iana","compressible":true},"application/vnd.oma.xcap-directory+xml":{"source":"iana","compressible":true},"application/vnd.omads-email+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/vnd.omads-file+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/vnd.omads-folder+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/vnd.omaloc-supl-init":{"source":"iana"},"application/vnd.onepager":{"source":"iana"},"application/vnd.onepagertamp":{"source":"iana"},"application/vnd.onepagertamx":{"source":"iana"},"application/vnd.onepagertat":{"source":"iana"},"application/vnd.onepagertatp":{"source":"iana"},"application/vnd.onepagertatx":{"source":"iana"},"application/vnd.openblox.game+xml":{"source":"iana","compressible":true,"extensions":["obgx"]},"application/vnd.openblox.game-binary":{"source":"iana"},"application/vnd.openeye.oeb":{"source":"iana"},"application/vnd.openofficeorg.extension":{"source":"apache","extensions":["oxt"]},"application/vnd.openstreetmap.data+xml":{"source":"iana","compressible":true,"extensions":["osm"]},"application/vnd.opentimestamps.ots":{"source":"iana"},"application/vnd.openxmlformats-officedocument.custom-properties+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.customxmlproperties+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.drawing+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.drawingml.chart+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.drawingml.diagramcolors+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.drawingml.diagramdata+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.drawingml.diagramlayout+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.drawingml.diagramstyle+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.extended-properties+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.commentauthors+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.comments+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.handoutmaster+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.notesmaster+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.notesslide+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.presentation":{"source":"iana","compressible":false,"extensions":["pptx"]},"application/vnd.openxmlformats-officedocument.presentationml.presentation.main+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.presprops+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.slide":{"source":"iana","extensions":["sldx"]},"application/vnd.openxmlformats-officedocument.presentationml.slide+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.slidelayout+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.slidemaster+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.slideshow":{"source":"iana","extensions":["ppsx"]},"application/vnd.openxmlformats-officedocument.presentationml.slideshow.main+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.slideupdateinfo+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.tablestyles+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.tags+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.template":{"source":"iana","extensions":["potx"]},"application/vnd.openxmlformats-officedocument.presentationml.template.main+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.presentationml.viewprops+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.calcchain+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.externallink+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcachedefinition+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcacherecords+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.pivottable+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.querytable+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionheaders+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionlog+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.sharedstrings+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet":{"source":"iana","compressible":false,"extensions":["xlsx"]},"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.sheetmetadata+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.tablesinglecells+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.template":{"source":"iana","extensions":["xltx"]},"application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.usernames+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.volatiledependencies+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.theme+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.themeoverride+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.vmldrawing":{"source":"iana"},"application/vnd.openxmlformats-officedocument.wordprocessingml.comments+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.document":{"source":"iana","compressible":false,"extensions":["docx"]},"application/vnd.openxmlformats-officedocument.wordprocessingml.document.glossary+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.endnotes+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.fonttable+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.footer+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.footnotes+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.settings+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.template":{"source":"iana","extensions":["dotx"]},"application/vnd.openxmlformats-officedocument.wordprocessingml.template.main+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-officedocument.wordprocessingml.websettings+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-package.core-properties+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml":{"source":"iana","compressible":true},"application/vnd.openxmlformats-package.relationships+xml":{"source":"iana","compressible":true},"application/vnd.oracle.resource+json":{"source":"iana","compressible":true},"application/vnd.orange.indata":{"source":"iana"},"application/vnd.osa.netdeploy":{"source":"iana"},"application/vnd.osgeo.mapguide.package":{"source":"iana","extensions":["mgp"]},"application/vnd.osgi.bundle":{"source":"iana"},"application/vnd.osgi.dp":{"source":"iana","extensions":["dp"]},"application/vnd.osgi.subsystem":{"source":"iana","extensions":["esa"]},"application/vnd.otps.ct-kip+xml":{"source":"iana","compressible":true},"application/vnd.oxli.countgraph":{"source":"iana"},"application/vnd.pagerduty+json":{"source":"iana","compressible":true},"application/vnd.palm":{"source":"iana","extensions":["pdb","pqa","oprc"]},"application/vnd.panoply":{"source":"iana"},"application/vnd.paos.xml":{"source":"iana"},"application/vnd.patentdive":{"source":"iana"},"application/vnd.patientecommsdoc":{"source":"iana"},"application/vnd.pawaafile":{"source":"iana","extensions":["paw"]},"application/vnd.pcos":{"source":"iana"},"application/vnd.pg.format":{"source":"iana","extensions":["str"]},"application/vnd.pg.osasli":{"source":"iana","extensions":["ei6"]},"application/vnd.piaccess.application-licence":{"source":"iana"},"application/vnd.picsel":{"source":"iana","extensions":["efif"]},"application/vnd.pmi.widget":{"source":"iana","extensions":["wg"]},"application/vnd.poc.group-advertisement+xml":{"source":"iana","compressible":true},"application/vnd.pocketlearn":{"source":"iana","extensions":["plf"]},"application/vnd.powerbuilder6":{"source":"iana","extensions":["pbd"]},"application/vnd.powerbuilder6-s":{"source":"iana"},"application/vnd.powerbuilder7":{"source":"iana"},"application/vnd.powerbuilder7-s":{"source":"iana"},"application/vnd.powerbuilder75":{"source":"iana"},"application/vnd.powerbuilder75-s":{"source":"iana"},"application/vnd.preminet":{"source":"iana"},"application/vnd.previewsystems.box":{"source":"iana","extensions":["box"]},"application/vnd.proteus.magazine":{"source":"iana","extensions":["mgz"]},"application/vnd.psfs":{"source":"iana"},"application/vnd.publishare-delta-tree":{"source":"iana","extensions":["qps"]},"application/vnd.pvi.ptid1":{"source":"iana","extensions":["ptid"]},"application/vnd.pwg-multiplexed":{"source":"iana"},"application/vnd.pwg-xhtml-print+xml":{"source":"iana","compressible":true},"application/vnd.qualcomm.brew-app-res":{"source":"iana"},"application/vnd.quarantainenet":{"source":"iana"},"application/vnd.quark.quarkxpress":{"source":"iana","extensions":["qxd","qxt","qwd","qwt","qxl","qxb"]},"application/vnd.quobject-quoxdocument":{"source":"iana"},"application/vnd.radisys.moml+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-audit+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-audit-conf+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-audit-conn+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-audit-dialog+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-audit-stream+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-conf+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-dialog+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-dialog-base+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-dialog-fax-detect+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-dialog-fax-sendrecv+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-dialog-group+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-dialog-speech+xml":{"source":"iana","compressible":true},"application/vnd.radisys.msml-dialog-transform+xml":{"source":"iana","compressible":true},"application/vnd.rainstor.data":{"source":"iana"},"application/vnd.rapid":{"source":"iana"},"application/vnd.rar":{"source":"iana","extensions":["rar"]},"application/vnd.realvnc.bed":{"source":"iana","extensions":["bed"]},"application/vnd.recordare.musicxml":{"source":"iana","extensions":["mxl"]},"application/vnd.recordare.musicxml+xml":{"source":"iana","compressible":true,"extensions":["musicxml"]},"application/vnd.renlearn.rlprint":{"source":"iana"},"application/vnd.resilient.logic":{"source":"iana"},"application/vnd.restful+json":{"source":"iana","compressible":true},"application/vnd.rig.cryptonote":{"source":"iana","extensions":["cryptonote"]},"application/vnd.rim.cod":{"source":"apache","extensions":["cod"]},"application/vnd.rn-realmedia":{"source":"apache","extensions":["rm"]},"application/vnd.rn-realmedia-vbr":{"source":"apache","extensions":["rmvb"]},"application/vnd.route66.link66+xml":{"source":"iana","compressible":true,"extensions":["link66"]},"application/vnd.rs-274x":{"source":"iana"},"application/vnd.ruckus.download":{"source":"iana"},"application/vnd.s3sms":{"source":"iana"},"application/vnd.sailingtracker.track":{"source":"iana","extensions":["st"]},"application/vnd.sar":{"source":"iana"},"application/vnd.sbm.cid":{"source":"iana"},"application/vnd.sbm.mid2":{"source":"iana"},"application/vnd.scribus":{"source":"iana"},"application/vnd.sealed.3df":{"source":"iana"},"application/vnd.sealed.csf":{"source":"iana"},"application/vnd.sealed.doc":{"source":"iana"},"application/vnd.sealed.eml":{"source":"iana"},"application/vnd.sealed.mht":{"source":"iana"},"application/vnd.sealed.net":{"source":"iana"},"application/vnd.sealed.ppt":{"source":"iana"},"application/vnd.sealed.tiff":{"source":"iana"},"application/vnd.sealed.xls":{"source":"iana"},"application/vnd.sealedmedia.softseal.html":{"source":"iana"},"application/vnd.sealedmedia.softseal.pdf":{"source":"iana"},"application/vnd.seemail":{"source":"iana","extensions":["see"]},"application/vnd.seis+json":{"source":"iana","compressible":true},"application/vnd.sema":{"source":"iana","extensions":["sema"]},"application/vnd.semd":{"source":"iana","extensions":["semd"]},"application/vnd.semf":{"source":"iana","extensions":["semf"]},"application/vnd.shade-save-file":{"source":"iana"},"application/vnd.shana.informed.formdata":{"source":"iana","extensions":["ifm"]},"application/vnd.shana.informed.formtemplate":{"source":"iana","extensions":["itp"]},"application/vnd.shana.informed.interchange":{"source":"iana","extensions":["iif"]},"application/vnd.shana.informed.package":{"source":"iana","extensions":["ipk"]},"application/vnd.shootproof+json":{"source":"iana","compressible":true},"application/vnd.shopkick+json":{"source":"iana","compressible":true},"application/vnd.shp":{"source":"iana"},"application/vnd.shx":{"source":"iana"},"application/vnd.sigrok.session":{"source":"iana"},"application/vnd.simtech-mindmapper":{"source":"iana","extensions":["twd","twds"]},"application/vnd.siren+json":{"source":"iana","compressible":true},"application/vnd.smaf":{"source":"iana","extensions":["mmf"]},"application/vnd.smart.notebook":{"source":"iana"},"application/vnd.smart.teacher":{"source":"iana","extensions":["teacher"]},"application/vnd.snesdev-page-table":{"source":"iana"},"application/vnd.software602.filler.form+xml":{"source":"iana","compressible":true,"extensions":["fo"]},"application/vnd.software602.filler.form-xml-zip":{"source":"iana"},"application/vnd.solent.sdkm+xml":{"source":"iana","compressible":true,"extensions":["sdkm","sdkd"]},"application/vnd.spotfire.dxp":{"source":"iana","extensions":["dxp"]},"application/vnd.spotfire.sfs":{"source":"iana","extensions":["sfs"]},"application/vnd.sqlite3":{"source":"iana"},"application/vnd.sss-cod":{"source":"iana"},"application/vnd.sss-dtf":{"source":"iana"},"application/vnd.sss-ntf":{"source":"iana"},"application/vnd.stardivision.calc":{"source":"apache","extensions":["sdc"]},"application/vnd.stardivision.draw":{"source":"apache","extensions":["sda"]},"application/vnd.stardivision.impress":{"source":"apache","extensions":["sdd"]},"application/vnd.stardivision.math":{"source":"apache","extensions":["smf"]},"application/vnd.stardivision.writer":{"source":"apache","extensions":["sdw","vor"]},"application/vnd.stardivision.writer-global":{"source":"apache","extensions":["sgl"]},"application/vnd.stepmania.package":{"source":"iana","extensions":["smzip"]},"application/vnd.stepmania.stepchart":{"source":"iana","extensions":["sm"]},"application/vnd.street-stream":{"source":"iana"},"application/vnd.sun.wadl+xml":{"source":"iana","compressible":true,"extensions":["wadl"]},"application/vnd.sun.xml.calc":{"source":"apache","extensions":["sxc"]},"application/vnd.sun.xml.calc.template":{"source":"apache","extensions":["stc"]},"application/vnd.sun.xml.draw":{"source":"apache","extensions":["sxd"]},"application/vnd.sun.xml.draw.template":{"source":"apache","extensions":["std"]},"application/vnd.sun.xml.impress":{"source":"apache","extensions":["sxi"]},"application/vnd.sun.xml.impress.template":{"source":"apache","extensions":["sti"]},"application/vnd.sun.xml.math":{"source":"apache","extensions":["sxm"]},"application/vnd.sun.xml.writer":{"source":"apache","extensions":["sxw"]},"application/vnd.sun.xml.writer.global":{"source":"apache","extensions":["sxg"]},"application/vnd.sun.xml.writer.template":{"source":"apache","extensions":["stw"]},"application/vnd.sus-calendar":{"source":"iana","extensions":["sus","susp"]},"application/vnd.svd":{"source":"iana","extensions":["svd"]},"application/vnd.swiftview-ics":{"source":"iana"},"application/vnd.sycle+xml":{"source":"iana","compressible":true},"application/vnd.syft+json":{"source":"iana","compressible":true},"application/vnd.symbian.install":{"source":"apache","extensions":["sis","sisx"]},"application/vnd.syncml+xml":{"source":"iana","charset":"UTF-8","compressible":true,"extensions":["xsm"]},"application/vnd.syncml.dm+wbxml":{"source":"iana","charset":"UTF-8","extensions":["bdm"]},"application/vnd.syncml.dm+xml":{"source":"iana","charset":"UTF-8","compressible":true,"extensions":["xdm"]},"application/vnd.syncml.dm.notification":{"source":"iana"},"application/vnd.syncml.dmddf+wbxml":{"source":"iana"},"application/vnd.syncml.dmddf+xml":{"source":"iana","charset":"UTF-8","compressible":true,"extensions":["ddf"]},"application/vnd.syncml.dmtnds+wbxml":{"source":"iana"},"application/vnd.syncml.dmtnds+xml":{"source":"iana","charset":"UTF-8","compressible":true},"application/vnd.syncml.ds.notification":{"source":"iana"},"application/vnd.tableschema+json":{"source":"iana","compressible":true},"application/vnd.tao.intent-module-archive":{"source":"iana","extensions":["tao"]},"application/vnd.tcpdump.pcap":{"source":"iana","extensions":["pcap","cap","dmp"]},"application/vnd.think-cell.ppttc+json":{"source":"iana","compressible":true},"application/vnd.tmd.mediaflex.api+xml":{"source":"iana","compressible":true},"application/vnd.tml":{"source":"iana"},"application/vnd.tmobile-livetv":{"source":"iana","extensions":["tmo"]},"application/vnd.tri.onesource":{"source":"iana"},"application/vnd.trid.tpt":{"source":"iana","extensions":["tpt"]},"application/vnd.triscape.mxs":{"source":"iana","extensions":["mxs"]},"application/vnd.trueapp":{"source":"iana","extensions":["tra"]},"application/vnd.truedoc":{"source":"iana"},"application/vnd.ubisoft.webplayer":{"source":"iana"},"application/vnd.ufdl":{"source":"iana","extensions":["ufd","ufdl"]},"application/vnd.uiq.theme":{"source":"iana","extensions":["utz"]},"application/vnd.umajin":{"source":"iana","extensions":["umj"]},"application/vnd.unity":{"source":"iana","extensions":["unityweb"]},"application/vnd.uoml+xml":{"source":"iana","compressible":true,"extensions":["uoml"]},"application/vnd.uplanet.alert":{"source":"iana"},"application/vnd.uplanet.alert-wbxml":{"source":"iana"},"application/vnd.uplanet.bearer-choice":{"source":"iana"},"application/vnd.uplanet.bearer-choice-wbxml":{"source":"iana"},"application/vnd.uplanet.cacheop":{"source":"iana"},"application/vnd.uplanet.cacheop-wbxml":{"source":"iana"},"application/vnd.uplanet.channel":{"source":"iana"},"application/vnd.uplanet.channel-wbxml":{"source":"iana"},"application/vnd.uplanet.list":{"source":"iana"},"application/vnd.uplanet.list-wbxml":{"source":"iana"},"application/vnd.uplanet.listcmd":{"source":"iana"},"application/vnd.uplanet.listcmd-wbxml":{"source":"iana"},"application/vnd.uplanet.signal":{"source":"iana"},"application/vnd.uri-map":{"source":"iana"},"application/vnd.valve.source.material":{"source":"iana"},"application/vnd.vcx":{"source":"iana","extensions":["vcx"]},"application/vnd.vd-study":{"source":"iana"},"application/vnd.vectorworks":{"source":"iana"},"application/vnd.vel+json":{"source":"iana","compressible":true},"application/vnd.verimatrix.vcas":{"source":"iana"},"application/vnd.veritone.aion+json":{"source":"iana","compressible":true},"application/vnd.veryant.thin":{"source":"iana"},"application/vnd.ves.encrypted":{"source":"iana"},"application/vnd.vidsoft.vidconference":{"source":"iana"},"application/vnd.visio":{"source":"iana","extensions":["vsd","vst","vss","vsw"]},"application/vnd.visionary":{"source":"iana","extensions":["vis"]},"application/vnd.vividence.scriptfile":{"source":"iana"},"application/vnd.vsf":{"source":"iana","extensions":["vsf"]},"application/vnd.wap.sic":{"source":"iana"},"application/vnd.wap.slc":{"source":"iana"},"application/vnd.wap.wbxml":{"source":"iana","charset":"UTF-8","extensions":["wbxml"]},"application/vnd.wap.wmlc":{"source":"iana","extensions":["wmlc"]},"application/vnd.wap.wmlscriptc":{"source":"iana","extensions":["wmlsc"]},"application/vnd.webturbo":{"source":"iana","extensions":["wtb"]},"application/vnd.wfa.dpp":{"source":"iana"},"application/vnd.wfa.p2p":{"source":"iana"},"application/vnd.wfa.wsc":{"source":"iana"},"application/vnd.windows.devicepairing":{"source":"iana"},"application/vnd.wmc":{"source":"iana"},"application/vnd.wmf.bootstrap":{"source":"iana"},"application/vnd.wolfram.mathematica":{"source":"iana"},"application/vnd.wolfram.mathematica.package":{"source":"iana"},"application/vnd.wolfram.player":{"source":"iana","extensions":["nbp"]},"application/vnd.wordperfect":{"source":"iana","extensions":["wpd"]},"application/vnd.wqd":{"source":"iana","extensions":["wqd"]},"application/vnd.wrq-hp3000-labelled":{"source":"iana"},"application/vnd.wt.stf":{"source":"iana","extensions":["stf"]},"application/vnd.wv.csp+wbxml":{"source":"iana"},"application/vnd.wv.csp+xml":{"source":"iana","compressible":true},"application/vnd.wv.ssp+xml":{"source":"iana","compressible":true},"application/vnd.xacml+json":{"source":"iana","compressible":true},"application/vnd.xara":{"source":"iana","extensions":["xar"]},"application/vnd.xfdl":{"source":"iana","extensions":["xfdl"]},"application/vnd.xfdl.webform":{"source":"iana"},"application/vnd.xmi+xml":{"source":"iana","compressible":true},"application/vnd.xmpie.cpkg":{"source":"iana"},"application/vnd.xmpie.dpkg":{"source":"iana"},"application/vnd.xmpie.plan":{"source":"iana"},"application/vnd.xmpie.ppkg":{"source":"iana"},"application/vnd.xmpie.xlim":{"source":"iana"},"application/vnd.yamaha.hv-dic":{"source":"iana","extensions":["hvd"]},"application/vnd.yamaha.hv-script":{"source":"iana","extensions":["hvs"]},"application/vnd.yamaha.hv-voice":{"source":"iana","extensions":["hvp"]},"application/vnd.yamaha.openscoreformat":{"source":"iana","extensions":["osf"]},"application/vnd.yamaha.openscoreformat.osfpvg+xml":{"source":"iana","compressible":true,"extensions":["osfpvg"]},"application/vnd.yamaha.remote-setup":{"source":"iana"},"application/vnd.yamaha.smaf-audio":{"source":"iana","extensions":["saf"]},"application/vnd.yamaha.smaf-phrase":{"source":"iana","extensions":["spf"]},"application/vnd.yamaha.through-ngn":{"source":"iana"},"application/vnd.yamaha.tunnel-udpencap":{"source":"iana"},"application/vnd.yaoweme":{"source":"iana"},"application/vnd.yellowriver-custom-menu":{"source":"iana","extensions":["cmp"]},"application/vnd.youtube.yt":{"source":"iana"},"application/vnd.zul":{"source":"iana","extensions":["zir","zirz"]},"application/vnd.zzazz.deck+xml":{"source":"iana","compressible":true,"extensions":["zaz"]},"application/voicexml+xml":{"source":"iana","compressible":true,"extensions":["vxml"]},"application/voucher-cms+json":{"source":"iana","compressible":true},"application/vq-rtcpxr":{"source":"iana"},"application/wasm":{"source":"iana","compressible":true,"extensions":["wasm"]},"application/watcherinfo+xml":{"source":"iana","compressible":true,"extensions":["wif"]},"application/webpush-options+json":{"source":"iana","compressible":true},"application/whoispp-query":{"source":"iana"},"application/whoispp-response":{"source":"iana"},"application/widget":{"source":"iana","extensions":["wgt"]},"application/winhlp":{"source":"apache","extensions":["hlp"]},"application/wita":{"source":"iana"},"application/wordperfect5.1":{"source":"iana"},"application/wsdl+xml":{"source":"iana","compressible":true,"extensions":["wsdl"]},"application/wspolicy+xml":{"source":"iana","compressible":true,"extensions":["wspolicy"]},"application/x-7z-compressed":{"source":"apache","compressible":false,"extensions":["7z"]},"application/x-abiword":{"source":"apache","extensions":["abw"]},"application/x-ace-compressed":{"source":"apache","extensions":["ace"]},"application/x-amf":{"source":"apache"},"application/x-apple-diskimage":{"source":"apache","extensions":["dmg"]},"application/x-arj":{"compressible":false,"extensions":["arj"]},"application/x-authorware-bin":{"source":"apache","extensions":["aab","x32","u32","vox"]},"application/x-authorware-map":{"source":"apache","extensions":["aam"]},"application/x-authorware-seg":{"source":"apache","extensions":["aas"]},"application/x-bcpio":{"source":"apache","extensions":["bcpio"]},"application/x-bdoc":{"compressible":false,"extensions":["bdoc"]},"application/x-bittorrent":{"source":"apache","extensions":["torrent"]},"application/x-blorb":{"source":"apache","extensions":["blb","blorb"]},"application/x-bzip":{"source":"apache","compressible":false,"extensions":["bz"]},"application/x-bzip2":{"source":"apache","compressible":false,"extensions":["bz2","boz"]},"application/x-cbr":{"source":"apache","extensions":["cbr","cba","cbt","cbz","cb7"]},"application/x-cdlink":{"source":"apache","extensions":["vcd"]},"application/x-cfs-compressed":{"source":"apache","extensions":["cfs"]},"application/x-chat":{"source":"apache","extensions":["chat"]},"application/x-chess-pgn":{"source":"apache","extensions":["pgn"]},"application/x-chrome-extension":{"extensions":["crx"]},"application/x-cocoa":{"source":"nginx","extensions":["cco"]},"application/x-compress":{"source":"apache"},"application/x-conference":{"source":"apache","extensions":["nsc"]},"application/x-cpio":{"source":"apache","extensions":["cpio"]},"application/x-csh":{"source":"apache","extensions":["csh"]},"application/x-deb":{"compressible":false},"application/x-debian-package":{"source":"apache","extensions":["deb","udeb"]},"application/x-dgc-compressed":{"source":"apache","extensions":["dgc"]},"application/x-director":{"source":"apache","extensions":["dir","dcr","dxr","cst","cct","cxt","w3d","fgd","swa"]},"application/x-doom":{"source":"apache","extensions":["wad"]},"application/x-dtbncx+xml":{"source":"apache","compressible":true,"extensions":["ncx"]},"application/x-dtbook+xml":{"source":"apache","compressible":true,"extensions":["dtb"]},"application/x-dtbresource+xml":{"source":"apache","compressible":true,"extensions":["res"]},"application/x-dvi":{"source":"apache","compressible":false,"extensions":["dvi"]},"application/x-envoy":{"source":"apache","extensions":["evy"]},"application/x-eva":{"source":"apache","extensions":["eva"]},"application/x-font-bdf":{"source":"apache","extensions":["bdf"]},"application/x-font-dos":{"source":"apache"},"application/x-font-framemaker":{"source":"apache"},"application/x-font-ghostscript":{"source":"apache","extensions":["gsf"]},"application/x-font-libgrx":{"source":"apache"},"application/x-font-linux-psf":{"source":"apache","extensions":["psf"]},"application/x-font-pcf":{"source":"apache","extensions":["pcf"]},"application/x-font-snf":{"source":"apache","extensions":["snf"]},"application/x-font-speedo":{"source":"apache"},"application/x-font-sunos-news":{"source":"apache"},"application/x-font-type1":{"source":"apache","extensions":["pfa","pfb","pfm","afm"]},"application/x-font-vfont":{"source":"apache"},"application/x-freearc":{"source":"apache","extensions":["arc"]},"application/x-futuresplash":{"source":"apache","extensions":["spl"]},"application/x-gca-compressed":{"source":"apache","extensions":["gca"]},"application/x-glulx":{"source":"apache","extensions":["ulx"]},"application/x-gnumeric":{"source":"apache","extensions":["gnumeric"]},"application/x-gramps-xml":{"source":"apache","extensions":["gramps"]},"application/x-gtar":{"source":"apache","extensions":["gtar"]},"application/x-gzip":{"source":"apache"},"application/x-hdf":{"source":"apache","extensions":["hdf"]},"application/x-httpd-php":{"compressible":true,"extensions":["php"]},"application/x-install-instructions":{"source":"apache","extensions":["install"]},"application/x-iso9660-image":{"source":"apache","extensions":["iso"]},"application/x-iwork-keynote-sffkey":{"extensions":["key"]},"application/x-iwork-numbers-sffnumbers":{"extensions":["numbers"]},"application/x-iwork-pages-sffpages":{"extensions":["pages"]},"application/x-java-archive-diff":{"source":"nginx","extensions":["jardiff"]},"application/x-java-jnlp-file":{"source":"apache","compressible":false,"extensions":["jnlp"]},"application/x-javascript":{"compressible":true},"application/x-keepass2":{"extensions":["kdbx"]},"application/x-latex":{"source":"apache","compressible":false,"extensions":["latex"]},"application/x-lua-bytecode":{"extensions":["luac"]},"application/x-lzh-compressed":{"source":"apache","extensions":["lzh","lha"]},"application/x-makeself":{"source":"nginx","extensions":["run"]},"application/x-mie":{"source":"apache","extensions":["mie"]},"application/x-mobipocket-ebook":{"source":"apache","extensions":["prc","mobi"]},"application/x-mpegurl":{"compressible":false},"application/x-ms-application":{"source":"apache","extensions":["application"]},"application/x-ms-shortcut":{"source":"apache","extensions":["lnk"]},"application/x-ms-wmd":{"source":"apache","extensions":["wmd"]},"application/x-ms-wmz":{"source":"apache","extensions":["wmz"]},"application/x-ms-xbap":{"source":"apache","extensions":["xbap"]},"application/x-msaccess":{"source":"apache","extensions":["mdb"]},"application/x-msbinder":{"source":"apache","extensions":["obd"]},"application/x-mscardfile":{"source":"apache","extensions":["crd"]},"application/x-msclip":{"source":"apache","extensions":["clp"]},"application/x-msdos-program":{"extensions":["exe"]},"application/x-msdownload":{"source":"apache","extensions":["exe","dll","com","bat","msi"]},"application/x-msmediaview":{"source":"apache","extensions":["mvb","m13","m14"]},"application/x-msmetafile":{"source":"apache","extensions":["wmf","wmz","emf","emz"]},"application/x-msmoney":{"source":"apache","extensions":["mny"]},"application/x-mspublisher":{"source":"apache","extensions":["pub"]},"application/x-msschedule":{"source":"apache","extensions":["scd"]},"application/x-msterminal":{"source":"apache","extensions":["trm"]},"application/x-mswrite":{"source":"apache","extensions":["wri"]},"application/x-netcdf":{"source":"apache","extensions":["nc","cdf"]},"application/x-ns-proxy-autoconfig":{"compressible":true,"extensions":["pac"]},"application/x-nzb":{"source":"apache","extensions":["nzb"]},"application/x-perl":{"source":"nginx","extensions":["pl","pm"]},"application/x-pilot":{"source":"nginx","extensions":["prc","pdb"]},"application/x-pkcs12":{"source":"apache","compressible":false,"extensions":["p12","pfx"]},"application/x-pkcs7-certificates":{"source":"apache","extensions":["p7b","spc"]},"application/x-pkcs7-certreqresp":{"source":"apache","extensions":["p7r"]},"application/x-pki-message":{"source":"iana"},"application/x-rar-compressed":{"source":"apache","compressible":false,"extensions":["rar"]},"application/x-redhat-package-manager":{"source":"nginx","extensions":["rpm"]},"application/x-research-info-systems":{"source":"apache","extensions":["ris"]},"application/x-sea":{"source":"nginx","extensions":["sea"]},"application/x-sh":{"source":"apache","compressible":true,"extensions":["sh"]},"application/x-shar":{"source":"apache","extensions":["shar"]},"application/x-shockwave-flash":{"source":"apache","compressible":false,"extensions":["swf"]},"application/x-silverlight-app":{"source":"apache","extensions":["xap"]},"application/x-sql":{"source":"apache","extensions":["sql"]},"application/x-stuffit":{"source":"apache","compressible":false,"extensions":["sit"]},"application/x-stuffitx":{"source":"apache","extensions":["sitx"]},"application/x-subrip":{"source":"apache","extensions":["srt"]},"application/x-sv4cpio":{"source":"apache","extensions":["sv4cpio"]},"application/x-sv4crc":{"source":"apache","extensions":["sv4crc"]},"application/x-t3vm-image":{"source":"apache","extensions":["t3"]},"application/x-tads":{"source":"apache","extensions":["gam"]},"application/x-tar":{"source":"apache","compressible":true,"extensions":["tar"]},"application/x-tcl":{"source":"apache","extensions":["tcl","tk"]},"application/x-tex":{"source":"apache","extensions":["tex"]},"application/x-tex-tfm":{"source":"apache","extensions":["tfm"]},"application/x-texinfo":{"source":"apache","extensions":["texinfo","texi"]},"application/x-tgif":{"source":"apache","extensions":["obj"]},"application/x-ustar":{"source":"apache","extensions":["ustar"]},"application/x-virtualbox-hdd":{"compressible":true,"extensions":["hdd"]},"application/x-virtualbox-ova":{"compressible":true,"extensions":["ova"]},"application/x-virtualbox-ovf":{"compressible":true,"extensions":["ovf"]},"application/x-virtualbox-vbox":{"compressible":true,"extensions":["vbox"]},"application/x-virtualbox-vbox-extpack":{"compressible":false,"extensions":["vbox-extpack"]},"application/x-virtualbox-vdi":{"compressible":true,"extensions":["vdi"]},"application/x-virtualbox-vhd":{"compressible":true,"extensions":["vhd"]},"application/x-virtualbox-vmdk":{"compressible":true,"extensions":["vmdk"]},"application/x-wais-source":{"source":"apache","extensions":["src"]},"application/x-web-app-manifest+json":{"compressible":true,"extensions":["webapp"]},"application/x-www-form-urlencoded":{"source":"iana","compressible":true},"application/x-x509-ca-cert":{"source":"iana","extensions":["der","crt","pem"]},"application/x-x509-ca-ra-cert":{"source":"iana"},"application/x-x509-next-ca-cert":{"source":"iana"},"application/x-xfig":{"source":"apache","extensions":["fig"]},"application/x-xliff+xml":{"source":"apache","compressible":true,"extensions":["xlf"]},"application/x-xpinstall":{"source":"apache","compressible":false,"extensions":["xpi"]},"application/x-xz":{"source":"apache","extensions":["xz"]},"application/x-zmachine":{"source":"apache","extensions":["z1","z2","z3","z4","z5","z6","z7","z8"]},"application/x400-bp":{"source":"iana"},"application/xacml+xml":{"source":"iana","compressible":true},"application/xaml+xml":{"source":"apache","compressible":true,"extensions":["xaml"]},"application/xcap-att+xml":{"source":"iana","compressible":true,"extensions":["xav"]},"application/xcap-caps+xml":{"source":"iana","compressible":true,"extensions":["xca"]},"application/xcap-diff+xml":{"source":"iana","compressible":true,"extensions":["xdf"]},"application/xcap-el+xml":{"source":"iana","compressible":true,"extensions":["xel"]},"application/xcap-error+xml":{"source":"iana","compressible":true},"application/xcap-ns+xml":{"source":"iana","compressible":true,"extensions":["xns"]},"application/xcon-conference-info+xml":{"source":"iana","compressible":true},"application/xcon-conference-info-diff+xml":{"source":"iana","compressible":true},"application/xenc+xml":{"source":"iana","compressible":true,"extensions":["xenc"]},"application/xhtml+xml":{"source":"iana","compressible":true,"extensions":["xhtml","xht"]},"application/xhtml-voice+xml":{"source":"apache","compressible":true},"application/xliff+xml":{"source":"iana","compressible":true,"extensions":["xlf"]},"application/xml":{"source":"iana","compressible":true,"extensions":["xml","xsl","xsd","rng"]},"application/xml-dtd":{"source":"iana","compressible":true,"extensions":["dtd"]},"application/xml-external-parsed-entity":{"source":"iana"},"application/xml-patch+xml":{"source":"iana","compressible":true},"application/xmpp+xml":{"source":"iana","compressible":true},"application/xop+xml":{"source":"iana","compressible":true,"extensions":["xop"]},"application/xproc+xml":{"source":"apache","compressible":true,"extensions":["xpl"]},"application/xslt+xml":{"source":"iana","compressible":true,"extensions":["xsl","xslt"]},"application/xspf+xml":{"source":"apache","compressible":true,"extensions":["xspf"]},"application/xv+xml":{"source":"iana","compressible":true,"extensions":["mxml","xhvml","xvml","xvm"]},"application/yang":{"source":"iana","extensions":["yang"]},"application/yang-data+json":{"source":"iana","compressible":true},"application/yang-data+xml":{"source":"iana","compressible":true},"application/yang-patch+json":{"source":"iana","compressible":true},"application/yang-patch+xml":{"source":"iana","compressible":true},"application/yin+xml":{"source":"iana","compressible":true,"extensions":["yin"]},"application/zip":{"source":"iana","compressible":false,"extensions":["zip"]},"application/zlib":{"source":"iana"},"application/zstd":{"source":"iana"},"audio/1d-interleaved-parityfec":{"source":"iana"},"audio/32kadpcm":{"source":"iana"},"audio/3gpp":{"source":"iana","compressible":false,"extensions":["3gpp"]},"audio/3gpp2":{"source":"iana"},"audio/aac":{"source":"iana"},"audio/ac3":{"source":"iana"},"audio/adpcm":{"source":"apache","extensions":["adp"]},"audio/amr":{"source":"iana","extensions":["amr"]},"audio/amr-wb":{"source":"iana"},"audio/amr-wb+":{"source":"iana"},"audio/aptx":{"source":"iana"},"audio/asc":{"source":"iana"},"audio/atrac-advanced-lossless":{"source":"iana"},"audio/atrac-x":{"source":"iana"},"audio/atrac3":{"source":"iana"},"audio/basic":{"source":"iana","compressible":false,"extensions":["au","snd"]},"audio/bv16":{"source":"iana"},"audio/bv32":{"source":"iana"},"audio/clearmode":{"source":"iana"},"audio/cn":{"source":"iana"},"audio/dat12":{"source":"iana"},"audio/dls":{"source":"iana"},"audio/dsr-es201108":{"source":"iana"},"audio/dsr-es202050":{"source":"iana"},"audio/dsr-es202211":{"source":"iana"},"audio/dsr-es202212":{"source":"iana"},"audio/dv":{"source":"iana"},"audio/dvi4":{"source":"iana"},"audio/eac3":{"source":"iana"},"audio/encaprtp":{"source":"iana"},"audio/evrc":{"source":"iana"},"audio/evrc-qcp":{"source":"iana"},"audio/evrc0":{"source":"iana"},"audio/evrc1":{"source":"iana"},"audio/evrcb":{"source":"iana"},"audio/evrcb0":{"source":"iana"},"audio/evrcb1":{"source":"iana"},"audio/evrcnw":{"source":"iana"},"audio/evrcnw0":{"source":"iana"},"audio/evrcnw1":{"source":"iana"},"audio/evrcwb":{"source":"iana"},"audio/evrcwb0":{"source":"iana"},"audio/evrcwb1":{"source":"iana"},"audio/evs":{"source":"iana"},"audio/flexfec":{"source":"iana"},"audio/fwdred":{"source":"iana"},"audio/g711-0":{"source":"iana"},"audio/g719":{"source":"iana"},"audio/g722":{"source":"iana"},"audio/g7221":{"source":"iana"},"audio/g723":{"source":"iana"},"audio/g726-16":{"source":"iana"},"audio/g726-24":{"source":"iana"},"audio/g726-32":{"source":"iana"},"audio/g726-40":{"source":"iana"},"audio/g728":{"source":"iana"},"audio/g729":{"source":"iana"},"audio/g7291":{"source":"iana"},"audio/g729d":{"source":"iana"},"audio/g729e":{"source":"iana"},"audio/gsm":{"source":"iana"},"audio/gsm-efr":{"source":"iana"},"audio/gsm-hr-08":{"source":"iana"},"audio/ilbc":{"source":"iana"},"audio/ip-mr_v2.5":{"source":"iana"},"audio/isac":{"source":"apache"},"audio/l16":{"source":"iana"},"audio/l20":{"source":"iana"},"audio/l24":{"source":"iana","compressible":false},"audio/l8":{"source":"iana"},"audio/lpc":{"source":"iana"},"audio/melp":{"source":"iana"},"audio/melp1200":{"source":"iana"},"audio/melp2400":{"source":"iana"},"audio/melp600":{"source":"iana"},"audio/mhas":{"source":"iana"},"audio/midi":{"source":"apache","extensions":["mid","midi","kar","rmi"]},"audio/mobile-xmf":{"source":"iana","extensions":["mxmf"]},"audio/mp3":{"compressible":false,"extensions":["mp3"]},"audio/mp4":{"source":"iana","compressible":false,"extensions":["m4a","mp4a"]},"audio/mp4a-latm":{"source":"iana"},"audio/mpa":{"source":"iana"},"audio/mpa-robust":{"source":"iana"},"audio/mpeg":{"source":"iana","compressible":false,"extensions":["mpga","mp2","mp2a","mp3","m2a","m3a"]},"audio/mpeg4-generic":{"source":"iana"},"audio/musepack":{"source":"apache"},"audio/ogg":{"source":"iana","compressible":false,"extensions":["oga","ogg","spx","opus"]},"audio/opus":{"source":"iana"},"audio/parityfec":{"source":"iana"},"audio/pcma":{"source":"iana"},"audio/pcma-wb":{"source":"iana"},"audio/pcmu":{"source":"iana"},"audio/pcmu-wb":{"source":"iana"},"audio/prs.sid":{"source":"iana"},"audio/qcelp":{"source":"iana"},"audio/raptorfec":{"source":"iana"},"audio/red":{"source":"iana"},"audio/rtp-enc-aescm128":{"source":"iana"},"audio/rtp-midi":{"source":"iana"},"audio/rtploopback":{"source":"iana"},"audio/rtx":{"source":"iana"},"audio/s3m":{"source":"apache","extensions":["s3m"]},"audio/scip":{"source":"iana"},"audio/silk":{"source":"apache","extensions":["sil"]},"audio/smv":{"source":"iana"},"audio/smv-qcp":{"source":"iana"},"audio/smv0":{"source":"iana"},"audio/sofa":{"source":"iana"},"audio/sp-midi":{"source":"iana"},"audio/speex":{"source":"iana"},"audio/t140c":{"source":"iana"},"audio/t38":{"source":"iana"},"audio/telephone-event":{"source":"iana"},"audio/tetra_acelp":{"source":"iana"},"audio/tetra_acelp_bb":{"source":"iana"},"audio/tone":{"source":"iana"},"audio/tsvcis":{"source":"iana"},"audio/uemclip":{"source":"iana"},"audio/ulpfec":{"source":"iana"},"audio/usac":{"source":"iana"},"audio/vdvi":{"source":"iana"},"audio/vmr-wb":{"source":"iana"},"audio/vnd.3gpp.iufp":{"source":"iana"},"audio/vnd.4sb":{"source":"iana"},"audio/vnd.audiokoz":{"source":"iana"},"audio/vnd.celp":{"source":"iana"},"audio/vnd.cisco.nse":{"source":"iana"},"audio/vnd.cmles.radio-events":{"source":"iana"},"audio/vnd.cns.anp1":{"source":"iana"},"audio/vnd.cns.inf1":{"source":"iana"},"audio/vnd.dece.audio":{"source":"iana","extensions":["uva","uvva"]},"audio/vnd.digital-winds":{"source":"iana","extensions":["eol"]},"audio/vnd.dlna.adts":{"source":"iana"},"audio/vnd.dolby.heaac.1":{"source":"iana"},"audio/vnd.dolby.heaac.2":{"source":"iana"},"audio/vnd.dolby.mlp":{"source":"iana"},"audio/vnd.dolby.mps":{"source":"iana"},"audio/vnd.dolby.pl2":{"source":"iana"},"audio/vnd.dolby.pl2x":{"source":"iana"},"audio/vnd.dolby.pl2z":{"source":"iana"},"audio/vnd.dolby.pulse.1":{"source":"iana"},"audio/vnd.dra":{"source":"iana","extensions":["dra"]},"audio/vnd.dts":{"source":"iana","extensions":["dts"]},"audio/vnd.dts.hd":{"source":"iana","extensions":["dtshd"]},"audio/vnd.dts.uhd":{"source":"iana"},"audio/vnd.dvb.file":{"source":"iana"},"audio/vnd.everad.plj":{"source":"iana"},"audio/vnd.hns.audio":{"source":"iana"},"audio/vnd.lucent.voice":{"source":"iana","extensions":["lvp"]},"audio/vnd.ms-playready.media.pya":{"source":"iana","extensions":["pya"]},"audio/vnd.nokia.mobile-xmf":{"source":"iana"},"audio/vnd.nortel.vbk":{"source":"iana"},"audio/vnd.nuera.ecelp4800":{"source":"iana","extensions":["ecelp4800"]},"audio/vnd.nuera.ecelp7470":{"source":"iana","extensions":["ecelp7470"]},"audio/vnd.nuera.ecelp9600":{"source":"iana","extensions":["ecelp9600"]},"audio/vnd.octel.sbc":{"source":"iana"},"audio/vnd.presonus.multitrack":{"source":"iana"},"audio/vnd.qcelp":{"source":"iana"},"audio/vnd.rhetorex.32kadpcm":{"source":"iana"},"audio/vnd.rip":{"source":"iana","extensions":["rip"]},"audio/vnd.rn-realaudio":{"compressible":false},"audio/vnd.sealedmedia.softseal.mpeg":{"source":"iana"},"audio/vnd.vmx.cvsd":{"source":"iana"},"audio/vnd.wave":{"compressible":false},"audio/vorbis":{"source":"iana","compressible":false},"audio/vorbis-config":{"source":"iana"},"audio/wav":{"compressible":false,"extensions":["wav"]},"audio/wave":{"compressible":false,"extensions":["wav"]},"audio/webm":{"source":"apache","compressible":false,"extensions":["weba"]},"audio/x-aac":{"source":"apache","compressible":false,"extensions":["aac"]},"audio/x-aiff":{"source":"apache","extensions":["aif","aiff","aifc"]},"audio/x-caf":{"source":"apache","compressible":false,"extensions":["caf"]},"audio/x-flac":{"source":"apache","extensions":["flac"]},"audio/x-m4a":{"source":"nginx","extensions":["m4a"]},"audio/x-matroska":{"source":"apache","extensions":["mka"]},"audio/x-mpegurl":{"source":"apache","extensions":["m3u"]},"audio/x-ms-wax":{"source":"apache","extensions":["wax"]},"audio/x-ms-wma":{"source":"apache","extensions":["wma"]},"audio/x-pn-realaudio":{"source":"apache","extensions":["ram","ra"]},"audio/x-pn-realaudio-plugin":{"source":"apache","extensions":["rmp"]},"audio/x-realaudio":{"source":"nginx","extensions":["ra"]},"audio/x-tta":{"source":"apache"},"audio/x-wav":{"source":"apache","extensions":["wav"]},"audio/xm":{"source":"apache","extensions":["xm"]},"chemical/x-cdx":{"source":"apache","extensions":["cdx"]},"chemical/x-cif":{"source":"apache","extensions":["cif"]},"chemical/x-cmdf":{"source":"apache","extensions":["cmdf"]},"chemical/x-cml":{"source":"apache","extensions":["cml"]},"chemical/x-csml":{"source":"apache","extensions":["csml"]},"chemical/x-pdb":{"source":"apache"},"chemical/x-xyz":{"source":"apache","extensions":["xyz"]},"font/collection":{"source":"iana","extensions":["ttc"]},"font/otf":{"source":"iana","compressible":true,"extensions":["otf"]},"font/sfnt":{"source":"iana"},"font/ttf":{"source":"iana","compressible":true,"extensions":["ttf"]},"font/woff":{"source":"iana","extensions":["woff"]},"font/woff2":{"source":"iana","extensions":["woff2"]},"image/aces":{"source":"iana","extensions":["exr"]},"image/apng":{"compressible":false,"extensions":["apng"]},"image/avci":{"source":"iana","extensions":["avci"]},"image/avcs":{"source":"iana","extensions":["avcs"]},"image/avif":{"source":"iana","compressible":false,"extensions":["avif"]},"image/bmp":{"source":"iana","compressible":true,"extensions":["bmp"]},"image/cgm":{"source":"iana","extensions":["cgm"]},"image/dicom-rle":{"source":"iana","extensions":["drle"]},"image/emf":{"source":"iana","extensions":["emf"]},"image/fits":{"source":"iana","extensions":["fits"]},"image/g3fax":{"source":"iana","extensions":["g3"]},"image/gif":{"source":"iana","compressible":false,"extensions":["gif"]},"image/heic":{"source":"iana","extensions":["heic"]},"image/heic-sequence":{"source":"iana","extensions":["heics"]},"image/heif":{"source":"iana","extensions":["heif"]},"image/heif-sequence":{"source":"iana","extensions":["heifs"]},"image/hej2k":{"source":"iana","extensions":["hej2"]},"image/hsj2":{"source":"iana","extensions":["hsj2"]},"image/ief":{"source":"iana","extensions":["ief"]},"image/jls":{"source":"iana","extensions":["jls"]},"image/jp2":{"source":"iana","compressible":false,"extensions":["jp2","jpg2"]},"image/jpeg":{"source":"iana","compressible":false,"extensions":["jpeg","jpg","jpe"]},"image/jph":{"source":"iana","extensions":["jph"]},"image/jphc":{"source":"iana","extensions":["jhc"]},"image/jpm":{"source":"iana","compressible":false,"extensions":["jpm"]},"image/jpx":{"source":"iana","compressible":false,"extensions":["jpx","jpf"]},"image/jxr":{"source":"iana","extensions":["jxr"]},"image/jxra":{"source":"iana","extensions":["jxra"]},"image/jxrs":{"source":"iana","extensions":["jxrs"]},"image/jxs":{"source":"iana","extensions":["jxs"]},"image/jxsc":{"source":"iana","extensions":["jxsc"]},"image/jxsi":{"source":"iana","extensions":["jxsi"]},"image/jxss":{"source":"iana","extensions":["jxss"]},"image/ktx":{"source":"iana","extensions":["ktx"]},"image/ktx2":{"source":"iana","extensions":["ktx2"]},"image/naplps":{"source":"iana"},"image/pjpeg":{"compressible":false},"image/png":{"source":"iana","compressible":false,"extensions":["png"]},"image/prs.btif":{"source":"iana","extensions":["btif"]},"image/prs.pti":{"source":"iana","extensions":["pti"]},"image/pwg-raster":{"source":"iana"},"image/sgi":{"source":"apache","extensions":["sgi"]},"image/svg+xml":{"source":"iana","compressible":true,"extensions":["svg","svgz"]},"image/t38":{"source":"iana","extensions":["t38"]},"image/tiff":{"source":"iana","compressible":false,"extensions":["tif","tiff"]},"image/tiff-fx":{"source":"iana","extensions":["tfx"]},"image/vnd.adobe.photoshop":{"source":"iana","compressible":true,"extensions":["psd"]},"image/vnd.airzip.accelerator.azv":{"source":"iana","extensions":["azv"]},"image/vnd.cns.inf2":{"source":"iana"},"image/vnd.dece.graphic":{"source":"iana","extensions":["uvi","uvvi","uvg","uvvg"]},"image/vnd.djvu":{"source":"iana","extensions":["djvu","djv"]},"image/vnd.dvb.subtitle":{"source":"iana","extensions":["sub"]},"image/vnd.dwg":{"source":"iana","extensions":["dwg"]},"image/vnd.dxf":{"source":"iana","extensions":["dxf"]},"image/vnd.fastbidsheet":{"source":"iana","extensions":["fbs"]},"image/vnd.fpx":{"source":"iana","extensions":["fpx"]},"image/vnd.fst":{"source":"iana","extensions":["fst"]},"image/vnd.fujixerox.edmics-mmr":{"source":"iana","extensions":["mmr"]},"image/vnd.fujixerox.edmics-rlc":{"source":"iana","extensions":["rlc"]},"image/vnd.globalgraphics.pgb":{"source":"iana"},"image/vnd.microsoft.icon":{"source":"iana","compressible":true,"extensions":["ico"]},"image/vnd.mix":{"source":"iana"},"image/vnd.mozilla.apng":{"source":"iana"},"image/vnd.ms-dds":{"compressible":true,"extensions":["dds"]},"image/vnd.ms-modi":{"source":"iana","extensions":["mdi"]},"image/vnd.ms-photo":{"source":"apache","extensions":["wdp"]},"image/vnd.net-fpx":{"source":"iana","extensions":["npx"]},"image/vnd.pco.b16":{"source":"iana","extensions":["b16"]},"image/vnd.radiance":{"source":"iana"},"image/vnd.sealed.png":{"source":"iana"},"image/vnd.sealedmedia.softseal.gif":{"source":"iana"},"image/vnd.sealedmedia.softseal.jpg":{"source":"iana"},"image/vnd.svf":{"source":"iana"},"image/vnd.tencent.tap":{"source":"iana","extensions":["tap"]},"image/vnd.valve.source.texture":{"source":"iana","extensions":["vtf"]},"image/vnd.wap.wbmp":{"source":"iana","extensions":["wbmp"]},"image/vnd.xiff":{"source":"iana","extensions":["xif"]},"image/vnd.zbrush.pcx":{"source":"iana","extensions":["pcx"]},"image/webp":{"source":"apache","extensions":["webp"]},"image/wmf":{"source":"iana","extensions":["wmf"]},"image/x-3ds":{"source":"apache","extensions":["3ds"]},"image/x-cmu-raster":{"source":"apache","extensions":["ras"]},"image/x-cmx":{"source":"apache","extensions":["cmx"]},"image/x-freehand":{"source":"apache","extensions":["fh","fhc","fh4","fh5","fh7"]},"image/x-icon":{"source":"apache","compressible":true,"extensions":["ico"]},"image/x-jng":{"source":"nginx","extensions":["jng"]},"image/x-mrsid-image":{"source":"apache","extensions":["sid"]},"image/x-ms-bmp":{"source":"nginx","compressible":true,"extensions":["bmp"]},"image/x-pcx":{"source":"apache","extensions":["pcx"]},"image/x-pict":{"source":"apache","extensions":["pic","pct"]},"image/x-portable-anymap":{"source":"apache","extensions":["pnm"]},"image/x-portable-bitmap":{"source":"apache","extensions":["pbm"]},"image/x-portable-graymap":{"source":"apache","extensions":["pgm"]},"image/x-portable-pixmap":{"source":"apache","extensions":["ppm"]},"image/x-rgb":{"source":"apache","extensions":["rgb"]},"image/x-tga":{"source":"apache","extensions":["tga"]},"image/x-xbitmap":{"source":"apache","extensions":["xbm"]},"image/x-xcf":{"compressible":false},"image/x-xpixmap":{"source":"apache","extensions":["xpm"]},"image/x-xwindowdump":{"source":"apache","extensions":["xwd"]},"message/cpim":{"source":"iana"},"message/delivery-status":{"source":"iana"},"message/disposition-notification":{"source":"iana","extensions":["disposition-notification"]},"message/external-body":{"source":"iana"},"message/feedback-report":{"source":"iana"},"message/global":{"source":"iana","extensions":["u8msg"]},"message/global-delivery-status":{"source":"iana","extensions":["u8dsn"]},"message/global-disposition-notification":{"source":"iana","extensions":["u8mdn"]},"message/global-headers":{"source":"iana","extensions":["u8hdr"]},"message/http":{"source":"iana","compressible":false},"message/imdn+xml":{"source":"iana","compressible":true},"message/news":{"source":"iana"},"message/partial":{"source":"iana","compressible":false},"message/rfc822":{"source":"iana","compressible":true,"extensions":["eml","mime"]},"message/s-http":{"source":"iana"},"message/sip":{"source":"iana"},"message/sipfrag":{"source":"iana"},"message/tracking-status":{"source":"iana"},"message/vnd.si.simp":{"source":"iana"},"message/vnd.wfa.wsc":{"source":"iana","extensions":["wsc"]},"model/3mf":{"source":"iana","extensions":["3mf"]},"model/e57":{"source":"iana"},"model/gltf+json":{"source":"iana","compressible":true,"extensions":["gltf"]},"model/gltf-binary":{"source":"iana","compressible":true,"extensions":["glb"]},"model/iges":{"source":"iana","compressible":false,"extensions":["igs","iges"]},"model/mesh":{"source":"iana","compressible":false,"extensions":["msh","mesh","silo"]},"model/mtl":{"source":"iana","extensions":["mtl"]},"model/obj":{"source":"iana","extensions":["obj"]},"model/step":{"source":"iana"},"model/step+xml":{"source":"iana","compressible":true,"extensions":["stpx"]},"model/step+zip":{"source":"iana","compressible":false,"extensions":["stpz"]},"model/step-xml+zip":{"source":"iana","compressible":false,"extensions":["stpxz"]},"model/stl":{"source":"iana","extensions":["stl"]},"model/vnd.collada+xml":{"source":"iana","compressible":true,"extensions":["dae"]},"model/vnd.dwf":{"source":"iana","extensions":["dwf"]},"model/vnd.flatland.3dml":{"source":"iana"},"model/vnd.gdl":{"source":"iana","extensions":["gdl"]},"model/vnd.gs-gdl":{"source":"apache"},"model/vnd.gs.gdl":{"source":"iana"},"model/vnd.gtw":{"source":"iana","extensions":["gtw"]},"model/vnd.moml+xml":{"source":"iana","compressible":true},"model/vnd.mts":{"source":"iana","extensions":["mts"]},"model/vnd.opengex":{"source":"iana","extensions":["ogex"]},"model/vnd.parasolid.transmit.binary":{"source":"iana","extensions":["x_b"]},"model/vnd.parasolid.transmit.text":{"source":"iana","extensions":["x_t"]},"model/vnd.pytha.pyox":{"source":"iana"},"model/vnd.rosette.annotated-data-model":{"source":"iana"},"model/vnd.sap.vds":{"source":"iana","extensions":["vds"]},"model/vnd.usdz+zip":{"source":"iana","compressible":false,"extensions":["usdz"]},"model/vnd.valve.source.compiled-map":{"source":"iana","extensions":["bsp"]},"model/vnd.vtu":{"source":"iana","extensions":["vtu"]},"model/vrml":{"source":"iana","compressible":false,"extensions":["wrl","vrml"]},"model/x3d+binary":{"source":"apache","compressible":false,"extensions":["x3db","x3dbz"]},"model/x3d+fastinfoset":{"source":"iana","extensions":["x3db"]},"model/x3d+vrml":{"source":"apache","compressible":false,"extensions":["x3dv","x3dvz"]},"model/x3d+xml":{"source":"iana","compressible":true,"extensions":["x3d","x3dz"]},"model/x3d-vrml":{"source":"iana","extensions":["x3dv"]},"multipart/alternative":{"source":"iana","compressible":false},"multipart/appledouble":{"source":"iana"},"multipart/byteranges":{"source":"iana"},"multipart/digest":{"source":"iana"},"multipart/encrypted":{"source":"iana","compressible":false},"multipart/form-data":{"source":"iana","compressible":false},"multipart/header-set":{"source":"iana"},"multipart/mixed":{"source":"iana"},"multipart/multilingual":{"source":"iana"},"multipart/parallel":{"source":"iana"},"multipart/related":{"source":"iana","compressible":false},"multipart/report":{"source":"iana"},"multipart/signed":{"source":"iana","compressible":false},"multipart/vnd.bint.med-plus":{"source":"iana"},"multipart/voice-message":{"source":"iana"},"multipart/x-mixed-replace":{"source":"iana"},"text/1d-interleaved-parityfec":{"source":"iana"},"text/cache-manifest":{"source":"iana","compressible":true,"extensions":["appcache","manifest"]},"text/calendar":{"source":"iana","extensions":["ics","ifb"]},"text/calender":{"compressible":true},"text/cmd":{"compressible":true},"text/coffeescript":{"extensions":["coffee","litcoffee"]},"text/cql":{"source":"iana"},"text/cql-expression":{"source":"iana"},"text/cql-identifier":{"source":"iana"},"text/css":{"source":"iana","charset":"UTF-8","compressible":true,"extensions":["css"]},"text/csv":{"source":"iana","compressible":true,"extensions":["csv"]},"text/csv-schema":{"source":"iana"},"text/directory":{"source":"iana"},"text/dns":{"source":"iana"},"text/ecmascript":{"source":"iana"},"text/encaprtp":{"source":"iana"},"text/enriched":{"source":"iana"},"text/fhirpath":{"source":"iana"},"text/flexfec":{"source":"iana"},"text/fwdred":{"source":"iana"},"text/gff3":{"source":"iana"},"text/grammar-ref-list":{"source":"iana"},"text/html":{"source":"iana","compressible":true,"extensions":["html","htm","shtml"]},"text/jade":{"extensions":["jade"]},"text/javascript":{"source":"iana","compressible":true},"text/jcr-cnd":{"source":"iana"},"text/jsx":{"compressible":true,"extensions":["jsx"]},"text/less":{"compressible":true,"extensions":["less"]},"text/markdown":{"source":"iana","compressible":true,"extensions":["markdown","md"]},"text/mathml":{"source":"nginx","extensions":["mml"]},"text/mdx":{"compressible":true,"extensions":["mdx"]},"text/mizar":{"source":"iana"},"text/n3":{"source":"iana","charset":"UTF-8","compressible":true,"extensions":["n3"]},"text/parameters":{"source":"iana","charset":"UTF-8"},"text/parityfec":{"source":"iana"},"text/plain":{"source":"iana","compressible":true,"extensions":["txt","text","conf","def","list","log","in","ini"]},"text/provenance-notation":{"source":"iana","charset":"UTF-8"},"text/prs.fallenstein.rst":{"source":"iana"},"text/prs.lines.tag":{"source":"iana","extensions":["dsc"]},"text/prs.prop.logic":{"source":"iana"},"text/raptorfec":{"source":"iana"},"text/red":{"source":"iana"},"text/rfc822-headers":{"source":"iana"},"text/richtext":{"source":"iana","compressible":true,"extensions":["rtx"]},"text/rtf":{"source":"iana","compressible":true,"extensions":["rtf"]},"text/rtp-enc-aescm128":{"source":"iana"},"text/rtploopback":{"source":"iana"},"text/rtx":{"source":"iana"},"text/sgml":{"source":"iana","extensions":["sgml","sgm"]},"text/shaclc":{"source":"iana"},"text/shex":{"source":"iana","extensions":["shex"]},"text/slim":{"extensions":["slim","slm"]},"text/spdx":{"source":"iana","extensions":["spdx"]},"text/strings":{"source":"iana"},"text/stylus":{"extensions":["stylus","styl"]},"text/t140":{"source":"iana"},"text/tab-separated-values":{"source":"iana","compressible":true,"extensions":["tsv"]},"text/troff":{"source":"iana","extensions":["t","tr","roff","man","me","ms"]},"text/turtle":{"source":"iana","charset":"UTF-8","extensions":["ttl"]},"text/ulpfec":{"source":"iana"},"text/uri-list":{"source":"iana","compressible":true,"extensions":["uri","uris","urls"]},"text/vcard":{"source":"iana","compressible":true,"extensions":["vcard"]},"text/vnd.a":{"source":"iana"},"text/vnd.abc":{"source":"iana"},"text/vnd.ascii-art":{"source":"iana"},"text/vnd.curl":{"source":"iana","extensions":["curl"]},"text/vnd.curl.dcurl":{"source":"apache","extensions":["dcurl"]},"text/vnd.curl.mcurl":{"source":"apache","extensions":["mcurl"]},"text/vnd.curl.scurl":{"source":"apache","extensions":["scurl"]},"text/vnd.debian.copyright":{"source":"iana","charset":"UTF-8"},"text/vnd.dmclientscript":{"source":"iana"},"text/vnd.dvb.subtitle":{"source":"iana","extensions":["sub"]},"text/vnd.esmertec.theme-descriptor":{"source":"iana","charset":"UTF-8"},"text/vnd.familysearch.gedcom":{"source":"iana","extensions":["ged"]},"text/vnd.ficlab.flt":{"source":"iana"},"text/vnd.fly":{"source":"iana","extensions":["fly"]},"text/vnd.fmi.flexstor":{"source":"iana","extensions":["flx"]},"text/vnd.gml":{"source":"iana"},"text/vnd.graphviz":{"source":"iana","extensions":["gv"]},"text/vnd.hans":{"source":"iana"},"text/vnd.hgl":{"source":"iana"},"text/vnd.in3d.3dml":{"source":"iana","extensions":["3dml"]},"text/vnd.in3d.spot":{"source":"iana","extensions":["spot"]},"text/vnd.iptc.newsml":{"source":"iana"},"text/vnd.iptc.nitf":{"source":"iana"},"text/vnd.latex-z":{"source":"iana"},"text/vnd.motorola.reflex":{"source":"iana"},"text/vnd.ms-mediapackage":{"source":"iana"},"text/vnd.net2phone.commcenter.command":{"source":"iana"},"text/vnd.radisys.msml-basic-layout":{"source":"iana"},"text/vnd.senx.warpscript":{"source":"iana"},"text/vnd.si.uricatalogue":{"source":"iana"},"text/vnd.sosi":{"source":"iana"},"text/vnd.sun.j2me.app-descriptor":{"source":"iana","charset":"UTF-8","extensions":["jad"]},"text/vnd.trolltech.linguist":{"source":"iana","charset":"UTF-8"},"text/vnd.wap.si":{"source":"iana"},"text/vnd.wap.sl":{"source":"iana"},"text/vnd.wap.wml":{"source":"iana","extensions":["wml"]},"text/vnd.wap.wmlscript":{"source":"iana","extensions":["wmls"]},"text/vtt":{"source":"iana","charset":"UTF-8","compressible":true,"extensions":["vtt"]},"text/x-asm":{"source":"apache","extensions":["s","asm"]},"text/x-c":{"source":"apache","extensions":["c","cc","cxx","cpp","h","hh","dic"]},"text/x-component":{"source":"nginx","extensions":["htc"]},"text/x-fortran":{"source":"apache","extensions":["f","for","f77","f90"]},"text/x-gwt-rpc":{"compressible":true},"text/x-handlebars-template":{"extensions":["hbs"]},"text/x-java-source":{"source":"apache","extensions":["java"]},"text/x-jquery-tmpl":{"compressible":true},"text/x-lua":{"extensions":["lua"]},"text/x-markdown":{"compressible":true,"extensions":["mkd"]},"text/x-nfo":{"source":"apache","extensions":["nfo"]},"text/x-opml":{"source":"apache","extensions":["opml"]},"text/x-org":{"compressible":true,"extensions":["org"]},"text/x-pascal":{"source":"apache","extensions":["p","pas"]},"text/x-processing":{"compressible":true,"extensions":["pde"]},"text/x-sass":{"extensions":["sass"]},"text/x-scss":{"extensions":["scss"]},"text/x-setext":{"source":"apache","extensions":["etx"]},"text/x-sfv":{"source":"apache","extensions":["sfv"]},"text/x-suse-ymp":{"compressible":true,"extensions":["ymp"]},"text/x-uuencode":{"source":"apache","extensions":["uu"]},"text/x-vcalendar":{"source":"apache","extensions":["vcs"]},"text/x-vcard":{"source":"apache","extensions":["vcf"]},"text/xml":{"source":"iana","compressible":true,"extensions":["xml"]},"text/xml-external-parsed-entity":{"source":"iana"},"text/yaml":{"compressible":true,"extensions":["yaml","yml"]},"video/1d-interleaved-parityfec":{"source":"iana"},"video/3gpp":{"source":"iana","extensions":["3gp","3gpp"]},"video/3gpp-tt":{"source":"iana"},"video/3gpp2":{"source":"iana","extensions":["3g2"]},"video/av1":{"source":"iana"},"video/bmpeg":{"source":"iana"},"video/bt656":{"source":"iana"},"video/celb":{"source":"iana"},"video/dv":{"source":"iana"},"video/encaprtp":{"source":"iana"},"video/ffv1":{"source":"iana"},"video/flexfec":{"source":"iana"},"video/h261":{"source":"iana","extensions":["h261"]},"video/h263":{"source":"iana","extensions":["h263"]},"video/h263-1998":{"source":"iana"},"video/h263-2000":{"source":"iana"},"video/h264":{"source":"iana","extensions":["h264"]},"video/h264-rcdo":{"source":"iana"},"video/h264-svc":{"source":"iana"},"video/h265":{"source":"iana"},"video/iso.segment":{"source":"iana","extensions":["m4s"]},"video/jpeg":{"source":"iana","extensions":["jpgv"]},"video/jpeg2000":{"source":"iana"},"video/jpm":{"source":"apache","extensions":["jpm","jpgm"]},"video/jxsv":{"source":"iana"},"video/mj2":{"source":"iana","extensions":["mj2","mjp2"]},"video/mp1s":{"source":"iana"},"video/mp2p":{"source":"iana"},"video/mp2t":{"source":"iana","extensions":["ts"]},"video/mp4":{"source":"iana","compressible":false,"extensions":["mp4","mp4v","mpg4"]},"video/mp4v-es":{"source":"iana"},"video/mpeg":{"source":"iana","compressible":false,"extensions":["mpeg","mpg","mpe","m1v","m2v"]},"video/mpeg4-generic":{"source":"iana"},"video/mpv":{"source":"iana"},"video/nv":{"source":"iana"},"video/ogg":{"source":"iana","compressible":false,"extensions":["ogv"]},"video/parityfec":{"source":"iana"},"video/pointer":{"source":"iana"},"video/quicktime":{"source":"iana","compressible":false,"extensions":["qt","mov"]},"video/raptorfec":{"source":"iana"},"video/raw":{"source":"iana"},"video/rtp-enc-aescm128":{"source":"iana"},"video/rtploopback":{"source":"iana"},"video/rtx":{"source":"iana"},"video/scip":{"source":"iana"},"video/smpte291":{"source":"iana"},"video/smpte292m":{"source":"iana"},"video/ulpfec":{"source":"iana"},"video/vc1":{"source":"iana"},"video/vc2":{"source":"iana"},"video/vnd.cctv":{"source":"iana"},"video/vnd.dece.hd":{"source":"iana","extensions":["uvh","uvvh"]},"video/vnd.dece.mobile":{"source":"iana","extensions":["uvm","uvvm"]},"video/vnd.dece.mp4":{"source":"iana"},"video/vnd.dece.pd":{"source":"iana","extensions":["uvp","uvvp"]},"video/vnd.dece.sd":{"source":"iana","extensions":["uvs","uvvs"]},"video/vnd.dece.video":{"source":"iana","extensions":["uvv","uvvv"]},"video/vnd.directv.mpeg":{"source":"iana"},"video/vnd.directv.mpeg-tts":{"source":"iana"},"video/vnd.dlna.mpeg-tts":{"source":"iana"},"video/vnd.dvb.file":{"source":"iana","extensions":["dvb"]},"video/vnd.fvt":{"source":"iana","extensions":["fvt"]},"video/vnd.hns.video":{"source":"iana"},"video/vnd.iptvforum.1dparityfec-1010":{"source":"iana"},"video/vnd.iptvforum.1dparityfec-2005":{"source":"iana"},"video/vnd.iptvforum.2dparityfec-1010":{"source":"iana"},"video/vnd.iptvforum.2dparityfec-2005":{"source":"iana"},"video/vnd.iptvforum.ttsavc":{"source":"iana"},"video/vnd.iptvforum.ttsmpeg2":{"source":"iana"},"video/vnd.motorola.video":{"source":"iana"},"video/vnd.motorola.videop":{"source":"iana"},"video/vnd.mpegurl":{"source":"iana","extensions":["mxu","m4u"]},"video/vnd.ms-playready.media.pyv":{"source":"iana","extensions":["pyv"]},"video/vnd.nokia.interleaved-multimedia":{"source":"iana"},"video/vnd.nokia.mp4vr":{"source":"iana"},"video/vnd.nokia.videovoip":{"source":"iana"},"video/vnd.objectvideo":{"source":"iana"},"video/vnd.radgamettools.bink":{"source":"iana"},"video/vnd.radgamettools.smacker":{"source":"iana"},"video/vnd.sealed.mpeg1":{"source":"iana"},"video/vnd.sealed.mpeg4":{"source":"iana"},"video/vnd.sealed.swf":{"source":"iana"},"video/vnd.sealedmedia.softseal.mov":{"source":"iana"},"video/vnd.uvvu.mp4":{"source":"iana","extensions":["uvu","uvvu"]},"video/vnd.vivo":{"source":"iana","extensions":["viv"]},"video/vnd.youtube.yt":{"source":"iana"},"video/vp8":{"source":"iana"},"video/vp9":{"source":"iana"},"video/webm":{"source":"apache","compressible":false,"extensions":["webm"]},"video/x-f4v":{"source":"apache","extensions":["f4v"]},"video/x-fli":{"source":"apache","extensions":["fli"]},"video/x-flv":{"source":"apache","compressible":false,"extensions":["flv"]},"video/x-m4v":{"source":"apache","extensions":["m4v"]},"video/x-matroska":{"source":"apache","compressible":false,"extensions":["mkv","mk3d","mks"]},"video/x-mng":{"source":"apache","extensions":["mng"]},"video/x-ms-asf":{"source":"apache","extensions":["asf","asx"]},"video/x-ms-vob":{"source":"apache","extensions":["vob"]},"video/x-ms-wm":{"source":"apache","extensions":["wm"]},"video/x-ms-wmv":{"source":"apache","compressible":false,"extensions":["wmv"]},"video/x-ms-wmx":{"source":"apache","extensions":["wmx"]},"video/x-ms-wvx":{"source":"apache","extensions":["wvx"]},"video/x-msvideo":{"source":"apache","extensions":["avi"]},"video/x-sgi-movie":{"source":"apache","extensions":["movie"]},"video/x-smv":{"source":"apache","extensions":["smv"]},"x-conference/x-cooltalk":{"source":"apache","extensions":["ice"]},"x-shader/x-fragment":{"compressible":true},"x-shader/x-vertex":{"compressible":true}}')}};var __webpack_module_cache__={};function __webpack_require__(moduleId){var cachedModule=__webpack_module_cache__[moduleId];if(cachedModule!==undefined){return cachedModule.exports}var module=__webpack_module_cache__[moduleId]={exports:{}};__webpack_modules__[moduleId](module,module.exports,__webpack_require__);return module.exports}(()=>{__webpack_require__.d=(exports,definition)=>{for(var key in definition){if(__webpack_require__.o(definition,key)&&!__webpack_require__.o(exports,key)){Object.defineProperty(exports,key,{enumerable:true,get:definition[key]})}}}})();(()=>{__webpack_require__.o=(obj,prop)=>Object.prototype.hasOwnProperty.call(obj,prop)})();(()=>{__webpack_require__.r=exports=>{if(typeof Symbol!=="undefined"&&Symbol.toStringTag){Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"})}Object.defineProperty(exports,"__esModule",{value:true})}})();var __webpack_exports__={};(()=>{"use strict";var exports=__webpack_exports__;Object.defineProperty(exports,"__esModule",{value:true});exports.HTTP=exports.ShinkaiToolkitLib=exports.ToolKitSetup=void 0;var ToolKitSetup_1=__webpack_require__(8694);Object.defineProperty(exports,"ToolKitSetup",{enumerable:true,get:function(){return ToolKitSetup_1.ToolKitSetup}});var toolkit_lib_1=__webpack_require__(848);Object.defineProperty(exports,"ShinkaiToolkitLib",{enumerable:true,get:function(){return toolkit_lib_1.ShinkaiToolkitLib}});var http_1=__webpack_require__(3568);Object.defineProperty(exports,"HTTP",{enumerable:true,get:function(){return http_1.HTTP}})})();module.exports=__webpack_exports__})();